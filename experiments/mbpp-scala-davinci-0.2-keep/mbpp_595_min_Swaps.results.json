{
  "name": "mbpp_595_min_Swaps",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ilh14qt.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ilh14qt.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ilh14qt.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        if (count % 2 == 0) {\n            return count / 2\n        } else {\n            return -1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8v5lpxi.scala:20:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8v5lpxi.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8v5lpxi.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val s1 = str1.toList\n        val s2 = str2.toList\n        val diff = s1.zip(s2).map(x => if (x._1 == x._2) 0 else 1).sum\n        if (diff % 2 == 1) \"impossible\"\n        else {\n            val diffs = s1.zip(s2).map(x => if (x._1 == x._2) 0 else 1)\n            val ones = diffs.filter(_ == 1).length\n            val zeros = diffs.filter(_ == 0).length\n            val swaps = ones / 2\n            swaps\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf54exsq2.scala:19:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf54exsq2.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf54exsq2.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2\n        else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphw270y_2.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphw270y_2.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphw270y_2.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2 else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val diff = str1.zip(str2).map(x => if (x._1 == x._2) 0 else 1).sum\n        if (diff % 2 == 1) -1 else diff / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z1cex_q.scala:10:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z1cex_q.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0z1cex_q.scala:12:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) -1 else count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pw62nnh.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pw62nnh.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pw62nnh.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnjszoybz.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val str1Array = str1.toCharArray()\n        val str2Array = str2.toCharArray()\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1Array(i) != str2Array(i)) count += 1\n        }\n        if (count == 0) return 0\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmlq3lt1o.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmlq3lt1o.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmlq3lt1o.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val str1Arr = str1.toCharArray\n        val str2Arr = str2.toCharArray\n        var count = 0\n        for (i <- 0 until str1Arr.length) {\n            if (str1Arr(i) != str2Arr(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppjy9ozxo.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppjy9ozxo.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppjy9ozxo.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val str1_arr = str1.toCharArray\n        val str2_arr = str2.toCharArray\n        var count = 0\n        for (i <- 0 until str1_arr.length) {\n            if (str1_arr(i) != str2_arr(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpncnedavx.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpncnedavx.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpncnedavx.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val a = str1.toCharArray\n        val b = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (a(i) != b(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp47oi_uql.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp47oi_uql.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp47oi_uql.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo23yz3fx.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo23yz3fx.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo23yz3fx.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val count = Array.fill(2)(0)\n        for (i <- 0 until n) {\n            count(str1(i) - '0') += 1\n            count(str2(i) - '0') -= 1\n        }\n        if (count(0) != 0 || count(1) != 0) return -1\n        var res = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) {\n                var j = i + 1\n                while (j < n && str1(j) != str1(i)) j += 1\n                while (j > i) {\n                    str1.update(j, str1(j - 1))\n                    j -= 1\n                    res += 1\n                }\n            }\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpql2o0db6.scala:19:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    str1.update(j, str1(j - \u001b[31m1\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value update is not a member of String\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpql2o0db6.scala:28:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpql2o0db6.scala:29:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpql2o0db6.scala:30:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val a = str1.toCharArray\n        val b = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (a(i) != b(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9s09gl6.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9s09gl6.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9s09gl6.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count1 = 0\n        var count2 = 0\n        for (i <- 0 until n) {\n            if (str1(i) == '1') count1 += 1\n            if (str2(i) == '1') count2 += 1\n        }\n        if (count1 != count2) return -1\n        var res = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) res += 1\n        }\n        res / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt2meyry4.scala:21:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt2meyry4.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt2meyry4.scala:23:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val arr1 = str1.toCharArray\n        val arr2 = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (arr1(i) != arr2(i)) count += 1\n        }\n        if (count == 0) return 0\n        if (count % 2 == 1) return -1\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp85p3m7ml.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp85p3m7ml.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp85p3m7ml.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return -1\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo56kyhap.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo56kyhap.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo56kyhap.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        if (count % 2 == 0) {\n            count / 2\n        } else {\n            -1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:20:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val str1_arr = str1.toCharArray\n        val str2_arr = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1_arr(i) != str2_arr(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9w90mi75.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9w90mi75.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9w90mi75.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val l1 = str1.length\n        val l2 = str2.length\n        if (l1 != l2) return -1\n        var count = 0\n        for (i <- 0 until l1) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpefj4sn0n.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpefj4sn0n.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpefj4sn0n.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzhtbzq7b.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzhtbzq7b.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzhtbzq7b.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphrdogjz7.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl3byv54.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl3byv54.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl3byv54.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2 else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) return count / 2\n        else return -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukyq3k9a.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukyq3k9a.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukyq3k9a.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2\n        else return \"Invalid Input\"\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpepb9gnx0.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpepb9gnx0.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpepb9gnx0.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuugkjw9v.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122533,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxw67fr2v.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2 else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuk6ugtpa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        var i = 0\n        while (i < str1.length) {\n            if (str1(i) != str2(i)) count += 1\n            i += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122536,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1xllrdif.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1xllrdif.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1xllrdif.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkyrolzs.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmportz5fpk.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val a = str1.toCharArray\n        val b = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (a(i) != b(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count /= 2\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122536,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu56an1r.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu56an1r.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu56an1r.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi6nh74vl.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        if (count % 2 == 0) {\n            count / 2\n        } else {\n            -1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:20:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp71vjfzcj.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509813,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42gm7hjd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
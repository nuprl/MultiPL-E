{
  "name": "mbpp_585_expensive_items",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sortedItems = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x, y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(_(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsdgvuhz3.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsdgvuhz3.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith(_(\"price\").right.get > _(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9xn95qz.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9xn95qz.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sortedItems = items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_i4tb7j.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_i4tb7j.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get)\n        sorted.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxv6y1orj.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxv6y1orj.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x.get(\"price\").get.right.get).takeRight(n.toInt).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_l0hs8q.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_l0hs8q.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        // Sort the items by price in descending order\n        val sortedItems = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        // Return the first n items\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvphy93la.scala:12:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvphy93la.scala:12:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x, y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        sorted.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn806g057.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn806g057.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortBy(x => x(\"price\").right.get)\n        sorted.slice(sorted.length - n.toInt, sorted.length)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc3_2onuv.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc3_2onuv.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item.get(\"price\").get.right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie7fk5y3.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie7fk5y3.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.slice(0, n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzxwmuq2.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzxwmuq2.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x, y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        sorted.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn806g057.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn806g057.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x.get(\"price\").get.right.get).takeRight(n.toInt).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_l0hs8q.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_l0hs8q.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        var sortedItems = items.sortWith((item1, item2) => item1(\"price\").right.get > item2(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123241,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqoo_yr.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbqoo_yr.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sortedItems = items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123240,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_i4tb7j.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_i4tb7j.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortBy(x => x(\"price\").right.get)\n        sorted.takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5vsylle.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5vsylle.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sortedItems = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihcc9t_u.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihcc9t_u.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv8cm9pd_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x,y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprhgmsxj6.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x.get(\"price\").get.right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_024esn5.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_024esn5.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((x, y) => x(\"price\").right.get > y(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdur4i6gg.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a, b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517436,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_jl0kw_.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sorted = items.sortBy(x => x(\"price\").right.get)\n        sorted.takeRight(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1666123231,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5vsylle.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5vsylle.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get).take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe35nbd3w.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(item => item(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9d7_n0a9.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        val sortedItems = items.sortWith((a,b) => a(\"price\").right.get > b(\"price\").right.get)\n        sortedItems.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517441,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:117 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp936rvco3.scala:10:176 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                             Found:    (\u001b[31m555.2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n most expensive items in a given dataset.\n    def expensiveItems(items : List[Map[String,Either[String, Float]]], n : Long) : List[Map[String,Either[String, Float]]] = {\n        items.sortBy(x => x(\"price\").right.get).reverse.take(n.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f))), (2l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f)))));\n    assert(expensiveItems((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-1\", \"price\" -> 101.1f), Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f), Map[String,String](\"name\" -> \"Item-3\", \"price\" -> 45.09f), Map[String,String](\"name\" -> \"Item-4\", \"price\" -> 22.75f))), (1l)).equals((List[Map[String,Either[String, Float]]](Map[String,String](\"name\" -> \"Item-2\", \"price\" -> 555.22f)))));\n    }\n\n}\n",
      "timestamp": 1665517437,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:117 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    (\u001b[31m101.1f\u001b[0m : Float)\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt6rzj35.scala:9:176 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(expensiveItems((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-1\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m101.1f\u001b[0m), Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m))), (\u001b[31m1l\u001b[0m)).equals((List[\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mFloat\u001b[0m]]](Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"name\"\u001b[0m -> \u001b[31m\"Item-2\"\u001b[0m, \u001b[31m\"price\"\u001b[0m -> \u001b[31m555.22f\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                                                ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                               Found:    (\u001b[31m555.22f\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
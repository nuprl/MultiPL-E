{
  "name": "mbpp_627_find_First_Missing",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the smallest missing number from a sorted list of natural numbers.\n    def findFirstMissing(array : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findFirstMissing((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong))) == (4l));\n    assert(findFirstMissing((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 6l.toLong, 9l.toLong))) == (3l));\n    assert(findFirstMissing((List[Long](2l.toLong, 3l.toLong, 5l.toLong, 8l.toLong, 9l.toLong))) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return i + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return i + 1",
    "        var i = 0\n        var j = 1\n        while (j < array.length) {\n            if (array(j) - array(i) != 1) return array(i) + 1\n            i += 1\n            j += 1\n        }\n        return array(array.length - 1) + 1",
    "        var i = 0\n        while (i < array.length && array(i) == i + 1) {\n            i += 1\n        }\n        return i + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i) return i\n            i += 1\n        }\n        return i",
    "        var map = new HashMap[Long, Boolean]\n        for (i <- array) {\n            map(i) = true\n        }\n        for (i <- array) {\n            if (!map.contains(i + 1)) return i + 1\n        }\n        return -1",
    "        var i = 0\n        for (i <- 0 until array.length) {\n            if (array(i) != i + 1) return i + 1\n        }\n        return array(array.length - 1) + 1",
    "        var i = 0\n        while(i < array.length) {\n            if(array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return i + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1",
    "        var missing = 1L\n        for (i <- array) {\n            if (i == missing) missing += 1\n            else return missing\n        }\n        missing",
    "        var i = 0\n        while (i < array.length && array(i) == i + 1) i += 1\n        return i + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return i + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i) return i\n            i += 1\n        }\n        return i",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1",
    "        var i = 0\n        while(i < array.length) {\n            if(array(i) != i) return i\n            i += 1\n        }\n        return i",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i) return i\n            i += 1\n        }\n        return i",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1",
    "        var i = 0\n        while (i < array.length) {\n            if (array(i) != i + 1) return i + 1\n            i += 1\n        }\n        return array.length + 1"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n'th star number.\n    def findStarNum(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findStarNum((3l)) == (37l));\n    assert(findStarNum((4l)) == (73l));\n    assert(findStarNum((5l)) == (121l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var starNum = 0L\n        var i = 1L\n        while (starNum < n) {\n            i += 1\n            var j = 1L\n            var count = 0L\n            while (j * j <= i) {\n                if (i % j == 0) {\n                    count += 1\n                    if (j * j != i) count += 1\n                }\n                j += 1\n            }\n            if (count == 8) starNum += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var count = 0\n        var i = 1\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 0L\n        var j = 0L\n        var k = 0L\n        var count = 0L\n        var result = 0L\n        while (count < n) {\n            i += 1\n            j = i * i\n            k = j * i\n            if (j % k == 0) count += 1\n            if (count == n) result = j\n        }\n        result",
    "        var i = 0L\n        var j = 0L\n        var k = 0L\n        var num = 0L\n        while (num < n) {\n            i += 1\n            j = i * i\n            k = j * i\n            num += 1\n            if (num == n) return k\n            num += 1\n            if (num == n) return j\n        }\n        return -1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('0')) {\n                i = i.toString.replaceAll(\"0\", \"\").toLong\n            }\n            if (i.toString.contains('*')) {\n                i = i.toString.replaceAll(\"\\\\*\", \"\").toLong\n            }\n            if (i.toString.contains('1')) {\n                i = i.toString.replaceAll(\"1\", \"\").toLong\n            }\n            count += 1\n        }\n        i",
    "        var i = 1L\n        while (i * (i + 1) < 2 * n) i += 1\n        i",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n            i += 1\n        }\n        j",
    "        var i = 1L\n        var cnt = 0L\n        while (cnt < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) cnt += 1\n        }\n        i",
    "        var i = 1L\n        while (i * (i + 1) / 2 < n) i += 1\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n            }\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        if (n == 1) return 1\n        var i = 2\n        var starNum = 1\n        var count = 0\n        while (count < n) {\n            var k = 1\n            while (k * k <= i) {\n                if (i % k == 0) {\n                    if (k * k == i) count += 1\n                    else count += 2\n                }\n                k += 1\n            }\n            if (count >= n) return i\n            i += 1\n        }\n        return -1",
    "        var i = 0L;\n        var j = 1L;\n        while (i < n) {\n            j += 2;\n            if (isPrime(j)) i += 1;\n        }\n        return j;",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var x = 1L\n        var i = 1L\n        while (i <= n) {\n            x += 2\n            if (isPrime(x * x - x + 1)) i += 1\n            if (isPrime(x * x - 2 * x + 2)) i += 1\n            if (isPrime(x * x - 3 * x + 3)) i += 1\n        }\n        x * x - x + 1",
    "        var i = 1L\n        var j = 1L\n        while (i < n) {\n            j += 1\n            if (isStarNum(j)) i += 1\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1; var starNum = 0L\n        while (i <= n) {\n            starNum += i\n            i += 1\n        }\n        starNum",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(sqrtN).toLong\n        val sqrtN3 = sqrt(sqrtN2).toLong\n        val sqrtN4 = sqrt(sqrtN3).toLong\n        val sqrtN5 = sqrt(sqrtN4).toLong\n        val sqrtN6 = sqrt(sqrtN5).toLong\n        val sqrtN7 = sqrt(sqrtN6).toLong\n        val sqrtN8 = sqrt(sqrtN7).toLong\n        val sqrtN9 = sqrt(sqrtN8).toLong\n        val sqrtN10 = sqrt(sqrtN9).toLong\n        val sqrtN11 = sqrt(sqrtN10).toLong\n        val sqrtN12 = sqrt(sqrtN11).toLong\n        val sqrtN13 = sqrt(sqrtN12).toLong\n        val sqrtN14 = sqrt(sqrtN13).toLong\n        val sqrtN15 = sqrt(sqrtN14).toLong\n        val sqrtN16 = sqrt(sqrtN15).toLong\n        val sqrtN17 = sqrt(sqrtN16).toLong\n        val sqrtN18 = sqrt(sqrtN17).toLong\n        val sqrtN19 = sqrt(sqrtN18).toLong\n        val sqrtN20 = sqrt(sqrtN19).toLong\n        val sqrtN21 = sqrt(sqrtN20).toLong\n        val sqrtN22 = sqrt(sqrtN21).toLong\n        val sqrtN23 = sqrt(sqrtN22).toLong\n        val sqrtN24 = sqrt(sqrtN23).toLong\n        val sqrtN25 = sqrt(sqrtN24).toLong\n        val sqrtN26 = sqrt(sqrtN25).toLong\n        val sqrtN27 = sqrt(sqrtN26).toLong\n        val sqrtN28 = sqrt(sqrtN27).toLong\n        val sqrtN29 = sqrt(sqrt",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('3') || i.toString.contains('5') || i.toString.contains('7')) {\n                var j = i\n                var isStar = true\n                while (j > 0) {\n                    if (j % 10 != 3 && j % 10 != 5 && j % 10 != 7) {\n                        isStar = false\n                        j = 0\n                    }\n                    j /= 10\n                }\n                if (isStar) count += 1\n            }\n        }\n        i",
    "        var i = 1L\n        while (i * (i + 1) / 2 < n) i += 1\n        i * (i + 1) / 2",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        val sieve = Sieve(n * n)\n        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (sieve.isPrime(i * i + i + 41)) count += 1\n            i += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var cnt = 0;\n        while (cnt < n) {\n            i += 1;\n            if (i.toString.contains('*')) cnt += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        val stars = ArrayBuffer[Long]()\n        stars += 1\n        var i = 1\n        while (stars.length < n) {\n            i += 1\n            if (i % 2 == 0) {\n                stars += i * i\n            }\n        }\n        stars(n.toInt - 1)",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1;\n        var count = 0;\n        var starNum = 0;\n        while (count < n) {\n            if (isStarNum(i)) {\n                starNum = i;\n                count += 1;\n            }\n            i += 1;\n        }\n        return starNum;",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(sqrtN).toLong\n        val sqrtN3 = sqrt(sqrtN2).toLong\n        val sqrtN4 = sqrt(sqrtN3).toLong\n        val sqrtN5 = sqrt(sqrtN4).toLong\n        val sqrtN6 = sqrt(sqrtN5).toLong\n        val sqrtN7 = sqrt(sqrtN6).toLong\n        val sqrtN8 = sqrt(sqrtN7).toLong\n        val sqrtN9 = sqrt(sqrtN8).toLong\n        val sqrtN10 = sqrt(sqrtN9).toLong\n        val sqrtN11 = sqrt(sqrtN10).toLong\n        val sqrtN12 = sqrt(sqrtN11).toLong\n        val sqrtN13 = sqrt(sqrtN12).toLong\n        val sqrtN14 = sqrt(sqrtN13).toLong\n        val sqrtN15 = sqrt(sqrtN14).toLong\n        val sqrtN16 = sqrt(sqrtN15).toLong\n        val sqrtN17 = sqrt(sqrtN16).toLong\n        val sqrtN18 = sqrt(sqrtN17).toLong\n        val sqrtN19 = sqrt(sqrtN18).toLong\n        val sqrtN20 = sqrt(sqrtN19).toLong\n        val sqrtN21 = sqrt(sqrtN20).toLong\n        val sqrtN22 = sqrt(sqrtN21).toLong\n        val sqrtN23 = sqrt(sqrtN22).toLong\n        val sqrtN24 = sqrt(sqrtN23).toLong\n        val sqrtN25 = sqrt(sqrtN24).toLong\n        val sqrtN26 = sqrt(sqrtN25).toLong\n        val sqrtN27 = sqrt(sqrtN26).toLong\n        val sqrtN28 = sqrt(sqrtN27).toLong\n        val sqrtN29 = sqrt(sqrt",
    "        var i = 1;\n        var j = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) {\n                count += 1;\n            }\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var stars = new HashMap[Long, Long]\n        stars(1) = 1\n        def findStarNumHelper(n : Long) : Long = {\n            if (stars.contains(n)) return stars(n)\n            var result = findStarNumHelper(n - 1) + findStarNumHelper(n - 2)\n            stars(n) = result\n            return result\n        }\n        findStarNumHelper(n)",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (i % 2 == 0) {\n                count += 1;\n            }\n        }\n        return i;",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        var result = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                result = i\n            }\n            i += 1\n        }\n        result",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i % 2 == 1 && isPrime(i)) {\n                var j = 1L\n                var isStar = true\n                while (j < i) {\n                    if (!isPrime((i - j) / 2)) {\n                        isStar = false\n                        j = i\n                    }\n                    j += 2\n                }\n                if (isStar) count += 1\n            }\n        }\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n            }\n            i += 1;\n        }\n        i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        return i - 1",
    "        var starNum = 0L\n        var i = 1L\n        while (starNum < n) {\n            i += 1\n            if (isStarNum(i)) starNum += 1\n        }\n        i",
    "        var x = 1L\n        var i = 1L\n        while (i < n) {\n            x += 2\n            var y = x * x\n            var j = 1L\n            while (j < 4) {\n                i += 1\n                if (i == n) return y\n                y -= j\n                j += 1\n            }\n        }\n        return x * x",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n        }\n        j",
    "        var i = 1L\n        var c = 0L\n        while (c < n) {\n            i += 1\n            if (isStarNum(i)) c += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        while (i * (i + 1) < 2 * n) i += 1\n        i * (i + 1) / 2",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) {\n                count += 1;\n            }\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var num = 1L\n        while (i <= n) {\n            num += 4 * i\n            i += 1\n        }\n        num",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1;\n        while (i * i < n) i += 1;\n        return i * i;",
    "        if (n == 1) return 1\n        var i = 1\n        var num = 1\n        while (i < n) {\n            num += 4\n            i += 1\n        }\n        return num",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        def findStarNum(n : Long, acc : Long) : Long = {\n            if (n == 1) acc\n            else findStarNum(n - 1, acc + (acc + 1) * 2)\n        }\n        findStarNum(n, 1)",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isPrime(i)) {\n                val s = i.toString\n                if (s.length == 1) count += 1\n                else {\n                    var flag = true\n                    for (j <- 1 to s.length - 1) {\n                        if (!isPrime(s.substring(0, j).toLong) || !isPrime(s.substring(j).toLong)) {\n                            flag = false\n                            break\n                        }\n                    }\n                    if (flag) count += 1\n                }\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) count += 1;\n            i += 1;\n        }\n        return i - 1;",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var x = 1L\n        var cnt = 0L\n        while (cnt < n) {\n            x += 1\n            if (isStarNum(x)) cnt += 1\n        }\n        x",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        while (k < n) {\n            i += 1\n            j += 2\n            k += j\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i : Long = 1\n        var j : Long = 1\n        var count : Long = 0\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n            i += 1\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n            }\n            i += 1;\n        }\n        return i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('3') || i.toString.contains('5') || i.toString.contains('7')) {\n                if (i % 3 != 0 && i % 5 != 0 && i % 7 != 0) {\n                    count += 1\n                }\n            }\n        }\n        i",
    "        var i = 1\n        var j = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n            }\n        }\n        return i",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        while (k < n) {\n            i += 1\n            j += 2\n            k += j\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        if (n == 1) return 1\n        var i = 1\n        var sum = 1\n        while (i < n) {\n            sum += 6 * i\n            i += 1\n        }\n        return sum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('*')) count += 1\n        }\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            val s = i.toString\n            if (s.contains('0') || s.contains('1') || s.contains('2')) {\n                i += 1\n                continue\n            }\n            val sqrt = sqrt(i).toLong\n            var isStar = true\n            for (j <- 2L to sqrt) {\n                if (i % j == 0) {\n                    isStar = false\n                    break\n                }\n            }\n            if (isStar) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i % 2 == 1) {\n                val sqrt = sqrt(i).toLong\n                if (sqrt * sqrt == i) count += 1\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('2') || i.toString.contains('3') || i.toString.contains('5')) {\n                count += 1\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) count += 1;\n            i += 1;\n        }\n        return i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        while (i * (i + 1) / 2 < n) i += 1\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        val sieve = Array.fill(1000000)(true)\n        sieve(0) = false\n        sieve(1) = false\n        for (i <- 2 until 1000000) {\n            if (sieve(i)) {\n                var j = i * 2\n                while (j < 1000000) {\n                    sieve(j) = false\n                    j += i\n                }\n            }\n        }\n        var count = 0\n        var i = 1\n        while (count < n) {\n            i += 1\n            if (sieve(i) && sieve(i + 2)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n            }\n        }\n        return i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n            }\n        }\n        i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            j += 2\n            if (isPrime(i * i + j * j)) count += 1\n        }\n        i * i + j * j",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n            i += 1\n        }\n        j",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n            }\n            i += 1;\n        }\n        i - 1;",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(sqrtN).toLong\n        val sqrtN3 = sqrt(sqrtN2).toLong\n        val sqrtN4 = sqrt(sqrtN3).toLong\n        val sqrtN5 = sqrt(sqrtN4).toLong\n        val sqrtN6 = sqrt(sqrtN5).toLong\n        val sqrtN7 = sqrt(sqrtN6).toLong\n        val sqrtN8 = sqrt(sqrtN7).toLong\n        val sqrtN9 = sqrt(sqrtN8).toLong\n        val sqrtN10 = sqrt(sqrtN9).toLong\n        val sqrtN11 = sqrt(sqrtN10).toLong\n        val sqrtN12 = sqrt(sqrtN11).toLong\n        val sqrtN13 = sqrt(sqrtN12).toLong\n        val sqrtN14 = sqrt(sqrtN13).toLong\n        val sqrtN15 = sqrt(sqrtN14).toLong\n        val sqrtN16 = sqrt(sqrtN15).toLong\n        val sqrtN17 = sqrt(sqrtN16).toLong\n        val sqrtN18 = sqrt(sqrtN17).toLong\n        val sqrtN19 = sqrt(sqrtN18).toLong\n        val sqrtN20 = sqrt(sqrtN19).toLong\n        val sqrtN21 = sqrt(sqrtN20).toLong\n        val sqrtN22 = sqrt(sqrtN21).toLong\n        val sqrtN23 = sqrt(sqrtN22).toLong\n        val sqrtN24 = sqrt(sqrtN23).toLong\n        val sqrtN25 = sqrt(sqrtN24).toLong\n        val sqrtN26 = sqrt(sqrtN25).toLong\n        val sqrtN27 = sqrt(sqrtN26).toLong\n        val sqrtN28 = sqrt(sqrtN27).toLong\n        val sqrtN29 = sqrt(sqrt",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        val sieve = new Sieve(1000000)\n        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (sieve.isPrime(i) && sieve.isPrime((i + 1) / 2)) count += 1\n        }\n        i",
    "        var starNum = 1L\n        var i = 1L\n        while (i < n) {\n            starNum += 2 * i + 1\n            i += 1\n        }\n        starNum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        def findStarNumHelper(n : Long, i : Long, acc : Long) : Long = {\n            if (n == i) acc\n            else findStarNumHelper(n, i + 1, acc + i * i)\n        }\n        findStarNumHelper(n, 1, 0)",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        var result = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                result = i\n            }\n            i += 1\n        }\n        result",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        val sqrtN = sqrt(n).toLong\n        var i = sqrtN\n        while (i * i <= n) {\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            if (isStarNum(i)) count += 1;\n            i += 1;\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('0') || i.toString.contains('2') || i.toString.contains('4') || i.toString.contains('6') || i.toString.contains('8')) {\n                // do nothing\n            } else {\n                count += 1\n            }\n        }\n        return i",
    "        var i = 1L\n        var c = 0L\n        while (c < n) {\n            i += 1\n            if (isStarNum(i)) c += 1\n        }\n        return i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        while (k < n) {\n            i += 1\n            j += 2\n            k += j\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1\n        var num = 1\n        while (i < n) {\n            num += 4 * i\n            i += 1\n        }\n        return num",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('0')) {\n                var j = i\n                var isStar = true\n                while (j > 0) {\n                    if (j % 10 == 0) {\n                        isStar = false\n                        break\n                    }\n                    j /= 10\n                }\n                if (isStar) count += 1\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('*')) count += 1\n        }\n        i",
    "        var starNum = 0L\n        var i = 1L\n        while (starNum < n) {\n            i += 1\n            if (isStarNum(i)) starNum += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 1L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            var j = 1L\n            while (j <= i) {\n                if (i % j == 0) count += 1\n                j += 1\n            }\n            i += 1\n        }\n        i - 1"
  ]
}
{
  "name": "mbpp_250_count_X",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count",
    "        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count",
    "        var cnt = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) cnt += 1\n        }\n        return cnt",
    "        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count",
    "        var count = 0L\n        var n = tup\n        while (n > 0) {\n            if (n % 10 == x) count += 1\n            n /= 10\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count",
    "        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count",
    "        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toLong == x) count += 1\n        }\n        count",
    "        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count",
    "        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count",
    "        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        count",
    "        var cnt = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) cnt += 1\n        }\n        cnt",
    "        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count",
    "        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toString.toLong == x) {\n                count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count",
    "        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count"
  ]
}
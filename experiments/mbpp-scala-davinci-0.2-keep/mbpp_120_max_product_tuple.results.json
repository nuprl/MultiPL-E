{
  "name": "mbpp_120_max_product_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => (x(0) * x(1)).abs)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_nygjtt.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_nygjtt.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_nygjtt.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_nygjtt.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2 zip list3\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpurvjqqik.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpurvjqqik.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpurvjqqik.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpurvjqqik.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.reduce(_ * _))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgldxh3_8.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgldxh3_8.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgldxh3_8.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgldxh3_8.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = abs(list1(i) * list1(j))\n                if (prod > max) max = prod\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, list1(i) * list1(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuldycfxg.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, list1(i) * list1(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.reduce(_ * _))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp59yn3xnw.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => (x(0), x(1), x(0) * x(1)))\n        list3.maxBy(x => x._3)._3\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgayzm0o9.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgayzm0o9.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgayzm0o9.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgayzm0o9.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod > max) max = prod\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124143,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjhafo6a.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjhafo6a.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjhafo6a.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjhafo6a.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val n = list.length\n        val max1 = list(n - 1) * list(n - 2)\n        val max2 = list(0) * list(1)\n        max(max1, max2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgquod2co.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgquod2co.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgquod2co.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgquod2co.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.size) {\n            for (j <- i + 1 until list1.size) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqd6255y.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqd6255y.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqd6255y.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqd6255y.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1)).max\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdl1ze0u3.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdl1ze0u3.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdl1ze0u3.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdl1ze0u3.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = abs(list1(i) * list1(j))\n                if (prod > max) max = prod\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val max = list.last\n        val min = list.head\n        val max2 = list.init.last\n        val min2 = list.tail.head\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgb4u2vw2.scala:11:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgb4u2vw2.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgb4u2vw2.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgb4u2vw2.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max max abs(list1(i) * list1(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygwac4uz.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygwac4uz.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygwac4uz.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygwac4uz.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, list1(i) * list1(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuldycfxg.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, list1(i) * list1(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuldycfxg.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124133,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.map(x => x.abs)\n        val list2 = list.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp31nmkg1.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp31nmkg1.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp31nmkg1.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp31nmkg1.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val max = list2.last\n        val min = list2.head\n        max * min\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptorodmwj.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptorodmwj.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptorodmwj.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptorodmwj.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        val list5 = list4.sorted\n        list5.last\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124144,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct : Long = 0\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugeh30mq.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugeh30mq.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugeh30mq.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugeh30mq.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sortWith(_ < _)\n        val n = list.size\n        val max1 = list(n - 1) * list(n - 2)\n        val max2 = list(0) * list(1)\n        if (max1 > max2) max1 else max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckh7up94.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckh7up94.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckh7up94.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckh7up94.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, list1(i) * list1(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpx0_2m7y3.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, list1(i) * list1(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0_2m7y3.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0_2m7y3.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0_2m7y3.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val max1 = list2.last * list2(list2.length - 2)\n        val max2 = list2.head * list2(1)\n        max(max1, max2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrjmlmes.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrjmlmes.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrjmlmes.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrjmlmes.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxkfrgfuj.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxkfrgfuj.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxkfrgfuj.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxkfrgfuj.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.map(x => x * x)\n        val list3 = list1.zip(list2)\n        val list4 = list3.map(x => x._1 * x._2)\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdklpe_5o.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdklpe_5o.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdklpe_5o.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdklpe_5o.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        val list5 = list4.sorted\n        list5.last\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124144,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gloz3mh.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2fr2o9pe.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2fr2o9pe.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2fr2o9pe.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2fr2o9pe.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.map(x => (x, x * x))\n        val list3 = list2.combinations(2).toList\n        val list4 = list3.map(x => (x(0)._1 * x(1)._1, x(0)._2 * x(1)._2))\n        val list5 = list4.map(x => (x._1, x._2, abs(x._1 - x._2)))\n        val list6 = list5.sortBy(x => x._3)\n        list6(0)._1\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqet2ahiq.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqet2ahiq.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqet2ahiq.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqet2ahiq.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprapvn1v9.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.map(x => (x, x * x))\n        val list3 = list2.combinations(2).toList\n        val list4 = list3.map(x => (x(0)._1 * x(1)._1, x(0)._2 * x(1)._2))\n        val list5 = list4.filter(x => x._1 > 0 && x._2 > 0)\n        if (list5.length == 0) 0 else list5.maxBy(x => x._1)._1\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vk1oarg.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vk1oarg.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vk1oarg.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vk1oarg.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, list1(i) * list1(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnh7ann95.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, list1(i) * list1(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1))\n        val list4 = list3.filter(x => x > 0)\n        if (list4.isEmpty) 0 else list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1ouecva.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1ouecva.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1ouecva.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1ouecva.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, abs(list1(i) * list1(j)))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp0_9_lusm.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, abs(list1(i) * list1(j)))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9_lusm.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9_lusm.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9_lusm.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124133,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pbsp0ob.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.map(x => (x, x * x))\n        val list3 = list2.combinations(2).toList\n        val list4 = list3.map(x => (x(0)._1 * x(1)._1, x(0)._2 * x(1)._2))\n        val list5 = list4.map(x => if (x._1 > 0) x._1 else x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124144,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub5p17ey.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub5p17ey.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub5p17ey.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub5p17ey.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8t6opuyx.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct : Long = 0\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90m6cih6.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90m6cih6.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90m6cih6.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90m6cih6.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08p7barx.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0p2hyb1r.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124162,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmparamjszo.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmparamjszo.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmparamjszo.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmparamjszo.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiplp_y97.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiplp_y97.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiplp_y97.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiplp_y97.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list2.zip(list3)\n        list4.map(x => x._1 * x._2).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiwd9jdz2.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val prod = abs(list1(i) * list1(j))\n                if (prod > max) max = prod\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe29gyjtu.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe29gyjtu.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe29gyjtu.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe29gyjtu.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                maxProduct = max(maxProduct, list1(i) * list1(j))\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3izmo3yp.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3izmo3yp.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3izmo3yp.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3izmo3yp.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxo9bcd5f.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxo9bcd5f.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxo9bcd5f.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxo9bcd5f.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp0jmqed5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp0jmqed5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp0jmqed5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp0jmqed5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        val list4 = list3.zip(list2)\n        val list5 = list4.map(x => x._1 * x._2)\n        list5.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04hv6219.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ymav0te.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37sffg2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp374tpnvs.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.map(x => (x, x * x))\n        val list3 = list2.combinations(2).map(x => (x(0)._1 * x(1)._1, x(0)._2 * x(1)._2)).toList\n        val list4 = list3.sortWith((x, y) => x._2 > y._2)\n        list4(0)._1\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusnh52sp.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusnh52sp.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusnh52sp.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusnh52sp.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwkzky_46.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val prod = abs(list1(i) * list1(j))\n                if (prod > max) max = prod\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprf776hid.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124168,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl6jx2wvn.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl6jx2wvn.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl6jx2wvn.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl6jx2wvn.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x(0) * x(1))\n        list3.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4gj16hxv.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.combinations(2).toList\n        val list3 = list2.map(x => x.product)\n        val list4 = list3.map(x => abs(x))\n        list4.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnr3iipkb.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                max = max(max, list1(i) * list1(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1666124163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnh7ann95.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, list1(i) * list1(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnh7ann95.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var maxProduct = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vgmysb5.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n    def maxProductTuple(list1 : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = abs(list1(i) * list1(j))\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (36l));\n    assert(maxProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (200l));\n    assert(maxProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (484l));\n    }\n\n}\n",
      "timestamp": 1665508014,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m36l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcbrd7nm2.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
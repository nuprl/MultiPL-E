{
  "name": "mbpp_405_check_tuplex",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether an element exists within a tuple.\n    def checkTuplex(tuplex : Either[String, Long], tuple1 : Any) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"r\"))) == (true));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"5\"))) == (false));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(3l))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Left(x) => false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (x, y) => true\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }"
  ]
}
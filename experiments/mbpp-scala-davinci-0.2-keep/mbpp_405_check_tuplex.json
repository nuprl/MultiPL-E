{
  "name": "mbpp_405_check_tuplex",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether an element exists within a tuple.\n    def checkTuplex(tuplex : Either[String, Long], tuple1 : Any) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"r\"))) == (true));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(\"5\"))) == (false));\n    assert(checkTuplex((\"w\", 3l, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"), (Any(3l))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Left(x) => false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (x, y) => true\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(n) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == n || b == n || c == n) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == n || b == n) true\n                        else false\n                    }\n                    case a => {\n                        if (a == n) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Tuple1[Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple1[Any]]\n                    if (tuple1x._1 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple2[Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple3[Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple3[Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple4[Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l || tuple1x._4 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple5[Any, Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l || tuple1x._4 == l || tuple1x._5 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple6[Any, Any, Any, Any, Any",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        if (tuplex.isLeft) {\n            if (tuplex.left.get == tuple1) true\n            else false\n        }\n        else {\n            if (tuplex.right.get == tuple1) true\n            else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(n) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == n\n                    case t : Tuple2[Any, Any] => t._1 == n || t._2 == n\n                    case t : Tuple3[Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n || t._8 == n\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n || t._8 == n || t._9 == n\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 ==",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tuple2 = (l, l)\n                tuple1 match {\n                    case (x, y) => x == y\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (tuple1.isInstanceOf[String]) {\n                    if (s == tuple1.asInstanceOf[String]) {\n                        return true\n                    }\n                }\n            }\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Long]) {\n                    if (l == tuple1.asInstanceOf[Long]) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(n) => n == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(n) => n == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s.equals(tuple1)) true\n                else false\n            }\n            case Right(l) => {\n                if (l.equals(tuple1)) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                if (tuple1.isInstanceOf[Tuple1[Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple1[Any]]\n                    if (tuple1x._1 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple2[Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple3[Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple3[Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple4[Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l || tuple1x._4 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple5[Any, Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                    if (tuple1x._1 == l || tuple1x._2 == l || tuple1x._3 == l || tuple1x._4 == l || tuple1x._5 == l) true\n                    else false\n                }\n                else if (tuple1.isInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]) {\n                    val tuple1x = tuple1.asInstanceOf[Tuple6[Any, Any, Any, Any, Any",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => x == tup._1\n                    case tup : Tuple2[Any, Any] => x == tup._1 || x == tup._2\n                    case tup : Tuple3[Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3\n                    case tup : Tuple4[Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7 || x == tup._8\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        val tuple = tuplex match {\n            case Left(s) => s\n            case Right(l) => l\n        }\n        tuple.equals(tuple1)",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tuple = (l, l, l)\n                tuple._1 == tuple1 || tuple._2 == tuple1 || tuple._3 == tuple1\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => x == tup._1\n                    case tup : Tuple2[Any, Any] => x == tup._1 || x == tup._2\n                    case tup : Tuple3[Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3\n                    case tup : Tuple4[Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7 || x == tup._8\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => x == tup._1 || x == tup._2 || x == tup._3 || x == tup._4 || x == tup._5 || x == tup._6 || x == tup._7",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == l || b == l || c == l) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == l || b == l) true\n                        else false\n                    }\n                    case a => {\n                        if (a == l) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        if (tuplex.isRight) {\n            if (tuple1.isInstanceOf[Tuple2[Any, Any]]) {\n                val tuple2 = tuple1.asInstanceOf[Tuple2[Any, Any]]\n                if (tuple2._1.isInstanceOf[Int] && tuple2._2.isInstanceOf[Int]) {\n                    val tuple3 = (tuple2._1.asInstanceOf[Int], tuple2._2.asInstanceOf[Int])\n                    if (tuplex.right.get == tuple3) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        if (tuplex.isRight) {\n            val tuple = tuplex.right.get\n            if (tuple.isInstanceOf[Tuple1[Any]]) {\n                val tuplex1 = tuple.asInstanceOf[Tuple1[Any]]\n                tuplex1._1 == tuple1\n            } else if (tuple.isInstanceOf[Tuple2[Any, Any]]) {\n                val tuplex2 = tuple.asInstanceOf[Tuple2[Any, Any]]\n                tuplex2._1 == tuple1 || tuplex2._2 == tuple1\n            } else if (tuple.isInstanceOf[Tuple3[Any, Any, Any]]) {\n                val tuplex3 = tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                tuplex3._1 == tuple1 || tuplex3._2 == tuple1 || tuplex3._3 == tuple1\n            } else if (tuple.isInstanceOf[Tuple4[Any, Any, Any, Any]]) {\n                val tuplex4 = tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                tuplex4._1 == tuple1 || tuplex4._2 == tuple1 || tuplex4._3 == tuple1 || tuplex4._4 == tuple1\n            } else if (tuple.isInstanceOf[Tuple5[Any, Any, Any, Any, Any]]) {\n                val tuplex5 = tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                tuplex5._1 == tuple1 || tuplex5._2 == tuple1 || tuplex5._3 == tuple1 || tuplex5._4 == tuple1 || tuplex5._5 == tuple1\n            } else if (tuple.isInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]) {\n                val tuplex6 = tuple.asInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]\n                tuplex6._1 == tuple1 || tuplex6._2 == tuple1 || tuplex6._3 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => {\n                        if (t._1 == l) true\n                        else false\n                    }\n                    case t : Tuple2[Any, Any] => {\n                        if (t._1 == l || t._2 == l) true\n                        else false\n                    }\n                    case t : Tuple3[Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l) true\n                        else false\n                    }\n                    case t : Tuple4[Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l) true\n                        else false\n                    }\n                    case t : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l) true\n                        else false\n                    }\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l) true\n                        else false\n                    }\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l) true\n                        else false\n                    }\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l) true\n                        else false\n                    }\n                    case t : Tuple9[",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case s : String => s == tuplex.right.get.toString\n                    case l : Long => l == tuplex.right.get\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b) => {\n                        if (a == l || b == l) true\n                        else false\n                    }\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == l || b == l || c == l) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == l || b == l) true\n                        else false\n                    }\n                    case a => {\n                        if (a == l) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => if (s == tuple1) true else false\n            case Right(l) => if (l == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(str) => {\n                if (str == tuple1) true\n                else false\n            }\n            case Right(num) => {\n                if (num == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n                tup.productIterator.toList.contains(tuple1)\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1)\n                    true\n                else\n                    false\n            }\n            case Right(x) => {\n                if (x == tuple1)\n                    true\n                else\n                    false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(n) => tuple1 match {\n                case t : Tuple1[Any] => t._1 == n\n                case t : Tuple2[Any, Any] => t._1 == n || t._2 == n\n                case t : Tuple3[Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n\n                case t : Tuple4[Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n\n                case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n\n                case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n\n                case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n\n                case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n || t._8 == n\n                case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t._3 == n || t._4 == n || t._5 == n || t._6 == n || t._7 == n || t._8 == n || t._9 == n\n                case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == n || t._2 == n || t",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(n) => {\n                if (n == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(str) => {\n                if (str == tuple1) true\n                else false\n            }\n            case Right(num) => {\n                if (num == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == l || b == l || c == l) true\n                        else false\n                    }\n                    case _ => false\n                }\n            }\n        }",
    "        tuple1 match {\n            case (a, b, c) => {\n                tuplex match {\n                    case Left(s) => {\n                        if (s == a || s == b || s == c) true\n                        else false\n                    }\n                    case Right(l) => {\n                        if (l == a || l == b || l == c) true\n                        else false\n                    }\n                }\n            }\n            case _ => false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => if (x == tuple1) true else false\n            case Right(x) => if (x == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case (a, b, c) => {\n                        if (a == x || b == x || c == x) true\n                        else false\n                    }\n                    case (a, b) => {\n                        if (a == x || b == x) true\n                        else false\n                    }\n                    case a => {\n                        if (a == x) true\n                        else false\n                    }\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(x) => tuple1 match {\n                case x : String => true\n                case _ => false\n            }\n            case Right(x) => tuple1 match {\n                case x : Long => true\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(x) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == x\n                    case tup : Tuple2[Any, Any] => tup._1 == x || tup._2 == x\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x || tup._8 == x\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == x || tup._2 == x || tup._3 == x || tup._4 == x || tup._5 == x || tup._6 == x || tup._7 == x",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1)\n                    return true\n                else\n                    return false\n            }\n            case Right(l) => {\n                if (l == tuple1)\n                    return true\n                else\n                    return false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => if (s == tuple1) true else false\n            case Right(l) => if (l == tuple1) true else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => x == tuple1\n            case Right(x) => x == tuple1\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => false\n            case Right(x) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => tuple1 match {\n                case s : String => s == tuplex.right.get.toString\n                case l : Long => l == tuplex.right.get\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => tuple1 match {\n                case s : String => s == tuplex.right.get.toString\n                case l : Long => l == tuplex.right.get\n                case _ => false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(x) => {\n                if (x == tuple1) true\n                else false\n            }\n            case Right(x) => {\n                if (x == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case t : Tuple1[Any] => t._1 == l\n                    case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                    case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                    case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                    case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                    case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                    case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                    case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                    case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                    case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 ==",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => s == tuple1\n            case Right(l) => l == tuple1\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case s : String => s == l.toString\n                    case l1 : Long => l1 == l\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => true\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => tup._1 == l\n                    case tup : Tuple2[Any, Any] => tup._1 == l || tup._2 == l\n                    case tup : Tuple3[Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l\n                    case tup : Tuple4[Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l || tup._8 == l\n                    case tup : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case tup : Tuple1[Any] => {\n                        if (tup._1 == l) true\n                        else false\n                    }\n                    case tup : Tuple2[Any, Any] => {\n                        if (tup._1 == l || tup._2 == l) true\n                        else false\n                    }\n                    case tup : Tuple3[Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l) true\n                        else false\n                    }\n                    case tup : Tuple4[Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l) true\n                        else false\n                    }\n                    case tup : Tuple5[Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l) true\n                        else false\n                    }\n                    case tup : Tuple6[Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l) true\n                        else false\n                    }\n                    case tup : Tuple7[Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || tup._5 == l || tup._6 == l || tup._7 == l) true\n                        else false\n                    }\n                    case tup : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => {\n                        if (tup._1 == l || tup._2 == l || tup._3 == l || tup._4 == l || t",
    "        if (tuplex.isRight) {\n            if (tuplex.right.get == tuple1) true\n            else false\n        }\n        else {\n            if (tuplex.left.get == tuple1) true\n            else false\n        }",
    "        tuplex match {\n            case Left(s) => {\n                if (s == tuple1) true\n                else false\n            }\n            case Right(l) => {\n                if (l == tuple1) true\n                else false\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => {\n                tuple1 match {\n                    case x : Int => if (x == l) true else false\n                    case x : Long => if (x == l) true else false\n                    case x : Float => if (x == l) true else false\n                    case x : Double => if (x == l) true else false\n                    case x : String => if (x == l.toString) true else false\n                    case _ => false\n                }\n            }\n        }",
    "        tuplex match {\n            case Left(s) => false\n            case Right(l) => tuple1 match {\n                case t : Tuple1[Any] => t._1 == l\n                case t : Tuple2[Any, Any] => t._1 == l || t._2 == l\n                case t : Tuple3[Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l\n                case t : Tuple4[Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l\n                case t : Tuple5[Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l\n                case t : Tuple6[Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l\n                case t : Tuple7[Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l\n                case t : Tuple8[Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l\n                case t : Tuple9[Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t._3 == l || t._4 == l || t._5 == l || t._6 == l || t._7 == l || t._8 == l || t._9 == l\n                case t : Tuple10[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any] => t._1 == l || t._2 == l || t"
  ]
}
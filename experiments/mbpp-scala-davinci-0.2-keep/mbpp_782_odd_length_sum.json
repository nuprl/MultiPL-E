{
  "name": "mbpp_782_odd_length_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\n    def oddLengthSum(arr : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(oddLengthSum((List[Long](1l.toLong, 2l.toLong, 4l.toLong))) == (14l));\n    assert(oddLengthSum((List[Long](1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong))) == (15l));\n    assert(oddLengthSum((List[Long](1l.toLong, 7l.toLong))) == (8l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var subSum = 0L\n            for (j <- i until arr.length) {\n                subSum += arr(j)\n                if ((j - i + 1) % 2 == 1) sum += subSum\n            }\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var subarrays = 0\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    subarrays += 1\n                }\n            }\n            sum += arr(i) * subarrays\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var j = i\n            while (j < arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) sum += arr(k)\n                }\n                j += 1\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var curSum = 0L\n            for (j <- i until arr.length) {\n                curSum += arr(j)\n                if ((j - i + 1) % 2 == 1) sum += curSum\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var count = 0\n            for (j <- i until arr.length) {\n                count += 1\n                if (count % 2 == 1) sum += arr(j)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var temp = 0L\n            for (j <- i until arr.length) {\n                temp += arr(j)\n                if ((j - i + 1) % 2 == 1) sum += temp\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var j = i\n            while (j < arr.length) {\n                var k = i\n                while (k <= j) {\n                    sum += arr(k)\n                    k += 1\n                }\n                j += 1\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var subSum = 0L\n            for (j <- i until arr.length) {\n                subSum += arr(j)\n                if ((j - i + 1) % 2 == 1) sum += subSum\n            }\n        }\n        sum",
    "        val n = arr.length\n        var sum = 0L\n        for (i <- 0 until n) {\n            var j = i\n            while (j < n) {\n                var k = i\n                while (k <= j) {\n                    sum += arr(k)\n                    k += 1\n                }\n                j += 1\n            }\n        }\n        sum",
    "        val n = arr.length\n        var sum = 0L\n        for (i <- 0 until n) {\n            for (j <- i until n) {\n                val len = j - i + 1\n                if (len % 2 == 1) {\n                    for (k <- i to j) sum += arr(k)\n                }\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            var subArrSum = 0L\n            for (j <- i until arr.length) {\n                subArrSum += arr(j)\n                if ((j - i + 1) % 2 == 1) sum += subArrSum\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i until arr.length) {\n                if ((j - i + 1) % 2 == 1) {\n                    for (k <- i to j) {\n                        sum += arr(k)\n                    }\n                }\n            }\n        }\n        sum"
  ]
}
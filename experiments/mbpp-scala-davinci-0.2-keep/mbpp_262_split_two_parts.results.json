{
  "name": "mbpp_262_split_two_parts",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 : List[Any] = Nil\n        var list3 : List[Any] = Nil\n        var list4 : List[Any] = Nil\n        var list5 : List[Any] = Nil\n        var list6 : List[Any] = Nil\n        var list7 : List[Any] = Nil\n        var list8 : List[Any] = Nil\n        var list9 : List[Any] = Nil\n        var list10 : List[Any] = Nil\n        var list11 : List[Any] = Nil\n        var list12 : List[Any] = Nil\n        var list13 : List[Any] = Nil\n        var list14 : List[Any] = Nil\n        var list15 : List[Any] = Nil\n        var list16 : List[Any] = Nil\n        var list17 : List[Any] = Nil\n        var list18 : List[Any] = Nil\n        var list19 : List[Any] = Nil\n        var list20 : List[Any] = Nil\n        var list21 : List[Any] = Nil\n        var list22 : List[Any] = Nil\n        var list23 : List[Any] = Nil\n        var list24 : List[Any] = Nil\n        var list25 : List[Any] = Nil\n        var list26 : List[Any] = Nil\n        var list27 : List[Any] = Nil\n        var list28 : List[Any] = Nil\n        var list29 : List[Any] = Nil\n        var list30 : List[Any] = Nil\n        var list31 : List[Any] = Nil\n        var list32 : List[Any] = Nil\n        var list33 : List[Any] = Nil\n        var list34 : List[Any] = Nil\n        var list35 : List[Any] = Nil\n        var list36 : List[Any] = Nil\n        var list37 : List[Any] = Nil\n        var list38 : List[Any] = Nil\n        var list39 : List[Any] = Nil\n        var list40 : List[Any] = Nil\n        var list41 : List[Any] = Nil\n        var list42 : List[Any] = Nil\n        var list43 : List[Any] = Nil\n        var list44 : List[\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjmisevld.scala:49:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjmisevld.scala:51:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjmisevld.scala:52:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjmisevld.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpt56_4hlj.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8benb8q9.scala:54:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8benb8q9.scala:55:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8benb8q9.scala:56:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8benb8q9.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmplr77ypy9.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjkv06il4.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpl2tvfhcv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case Nil => (Nil, Nil)\n            case x :: xs => {\n                val (list2, list3) = splitTwoParts(xs, L - 1)\n                if (L > 0) (x :: list2, list3) else (list2, x :: list3)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0853_zb4.scala:15:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0853_zb4.scala:16:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0853_zb4.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0853_zb4.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjkv06il4.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkv06il4.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = List[Any]()\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n        var list48 =\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8d_1hjne.scala:52:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlist48\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:55:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:56:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8d_1hjne.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = List[Any]()\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n        var list48 =\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8d_1hjne.scala:52:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlist48\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:55:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:56:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8d_1hjne.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpee7aynr9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        for (i <- 0 until L.toInt) {\n            list3 = list3 :+ list2(i)\n        }\n        for (i <- L.toInt until list2.length) {\n            list4 = list4 :+ list2(i)\n        }\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgwap0q62.scala:18:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgwap0q62.scala:19:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgwap0q62.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgwap0q62.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Int]]) {\n            val list = list1.asInstanceOf[List[Int]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[String]]) {\n            val list = list1.asInstanceOf[List[String]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Double]]) {\n            val list = list1.asInstanceOf[List[Double]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Float]]) {\n            val list = list1.asInstanceOf[List[Float]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Long]]) {\n            val list = list1.asInstanceOf[List[Long]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Boolean]]) {\n            val list = list1.asInstanceOf[List[Boolean]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Char]]) {\n            val list = list1.asInstanceOf[List[Char]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Byte]]) {\n            val list = list1.asInstanceOf[List[Byte]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n        }\n        else if (list1.isInstanceOf[List[Short]]) {\n            val list = list1.asInstanceOf[List[Short]]\n            val list2 = list.splitAt(L.toInt)\n            list2\n\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt67kz_gg.scala:53:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt67kz_gg.scala:54:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt67kz_gg.scala:55:126 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt67kz_gg.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                if (L == 0) {\n                    return (List(), list1)\n                }\n                else if (L == list1.length) {\n                    return (list1, List())\n                }\n                else if (L > list1.length) {\n                    return (list1, List())\n                }\n                else {\n                    return (list1.take(L.toInt), list1.drop(L.toInt))\n                }\n            }\n            case _ => {\n                return (List(), List())\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo0du56fm.scala:27:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo0du56fm.scala:28:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpo0du56fm.scala:29:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo0du56fm.scala:30:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpt56_4hlj.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt56_4hlj.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                val list2 = list1.splitAt(L.toInt)\n                list2\n            }\n            case _ => \"Not a list\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg0bitlrb.scala:15:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg0bitlrb.scala:16:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpg0bitlrb.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg0bitlrb.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmplr77ypy9.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 : Any = list1.asInstanceOf[List[Any]]\n        var list3 : Any = list2.asInstanceOf[List[Any]]\n        var list4 : Any = list3.asInstanceOf[List[Any]]\n        var list5 : Any = list4.asInstanceOf[List[Any]]\n        var list6 : Any = list5.asInstanceOf[List[Any]]\n        var list7 : Any = list6.asInstanceOf[List[Any]]\n        var list8 : Any = list7.asInstanceOf[List[Any]]\n        var list9 : Any = list8.asInstanceOf[List[Any]]\n        var list10 : Any = list9.asInstanceOf[List[Any]]\n        var list11 : Any = list10.asInstanceOf[List[Any]]\n        var list12 : Any = list11.asInstanceOf[List[Any]]\n        var list13 : Any = list12.asInstanceOf[List[Any]]\n        var list14 : Any = list13.asInstanceOf[List[Any]]\n        var list15 : Any = list14.asInstanceOf[List[Any]]\n        var list16 : Any = list15.asInstanceOf[List[Any]]\n        var list17 : Any = list16.asInstanceOf[List[Any]]\n        var list18 : Any = list17.asInstanceOf[List[Any]]\n        var list19 : Any = list18.asInstanceOf[List[Any]]\n        var list20 : Any = list19.asInstanceOf[List[Any]]\n        var list21 : Any = list20.asInstanceOf[List[Any]]\n        var list22 : Any = list21.asInstanceOf[List[Any]]\n        var list23 : Any = list22.asInstanceOf[List[Any]]\n        var list24 : Any = list23.asInstanceOf[List[Any]]\n        var list25 : Any = list24.asInstanceOf[List[Any]]\n        var list26 : Any = list25.asInstanceOf[List[Any]]\n        var list27 : Any = list26.asInstanceOf[List[Any]]\n        var list28 : Any = list27.asInstanceOf[List[Any\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2xrfhomk.scala:33:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2xrfhomk.scala:35:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2xrfhomk.scala:36:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp2xrfhomk.scala:37:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmplr77ypy9.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length < L) {\n                return (list, List())\n            }\n            else {\n                return (list.slice(0, L.toInt), list.slice(L.toInt, list.length))\n            }\n        }\n        else {\n            return (list1, List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9lbdu63y.scala:20:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9lbdu63y.scala:21:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp9lbdu63y.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9lbdu63y.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp384mwn0p.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp384mwn0p.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp384mwn0p.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp384mwn0p.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp4n4i1d52.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length < L) {\n                return (list, List())\n            }\n            else {\n                val list2 = list.drop(L.toInt)\n                val list3 = list.take(L.toInt)\n                return (list3, list2)\n            }\n        }\n        else {\n            return (List(), List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy93qtbu4.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy93qtbu4.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpy93qtbu4.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy93qtbu4.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = List[Any]()\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n        var list48 =\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8d_1hjne.scala:52:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlist48\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:55:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:56:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8d_1hjne.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length == 0) {\n                return (List(), List())\n            }\n            else if (list.length == 1) {\n                return (List(list(0)), List())\n            }\n            else {\n                if (L == 0) {\n                    return (List(), list)\n                }\n                else if (L == 1) {\n                    return (List(list(0)), list.slice(1, list.length))\n                }\n                else {\n                    val list2 = list.slice(0, L.toInt)\n                    val list3 = list.slice(L.toInt, list.length)\n                    return (list2, list3)\n                }\n            }\n        }\n        else {\n            return (List(), List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2o_0cc83.scala:33:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2o_0cc83.scala:34:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp2o_0cc83.scala:35:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2o_0cc83.scala:36:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpxh5_w889.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                val list2 = list1.take(L.toInt)\n                val list3 = list1.drop(L.toInt)\n                (list2, list3)\n            }\n            case _ => \"Invalid Input\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi5b4mxon.scala:16:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi5b4mxon.scala:17:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpi5b4mxon.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi5b4mxon.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        val tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj9kqt9za.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj9kqt9za.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj9kqt9za.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj9kqt9za.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 : List[Any] = list1.asInstanceOf[List[Any]]\n        val list3 : List[Any] = list2.slice(0, L.toInt)\n        val list4 : List[Any] = list2.slice(L.toInt, list2.length)\n        val tuple : Tuple2[List[Any], List[Any]] = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu1604g10.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu1604g10.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpu1604g10.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu1604g10.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpxh5_w889.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp4n4i1d52.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpkv07pv2a.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkv07pv2a.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var i = 0\n        for (i <- 0 to L.toInt - 1) {\n            list3 = list3 :+ list2(i)\n        }\n        for (i <- L.toInt to list2.length - 1) {\n            list4 = list4 :+ list2(i)\n        }\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0zclhgb.scala:19:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0zclhgb.scala:20:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpf0zclhgb.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0zclhgb.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 : List[Any] = List()\n        var list3 : List[Any] = List()\n        var list4 : List[Any] = List()\n        var list5 : List[Any] = List()\n        var list6 : List[Any] = List()\n        var list7 : List[Any] = List()\n        var list8 : List[Any] = List()\n        var list9 : List[Any] = List()\n        var list10 : List[Any] = List()\n        var list11 : List[Any] = List()\n        var list12 : List[Any] = List()\n        var list13 : List[Any] = List()\n        var list14 : List[Any] = List()\n        var list15 : List[Any] = List()\n        var list16 : List[Any] = List()\n        var list17 : List[Any] = List()\n        var list18 : List[Any] = List()\n        var list19 : List[Any] = List()\n        var list20 : List[Any] = List()\n        var list21 : List[Any] = List()\n        var list22 : List[Any] = List()\n        var list23 : List[Any] = List()\n        var list24 : List[Any] = List()\n        var list25 : List[Any] = List()\n        var list26 : List[Any] = List()\n        var list27 : List[Any] = List()\n        var list28 : List[Any] = List()\n        var list29 : List[Any] = List()\n        var list30 : List[Any] = List()\n        var list31 : List[Any] = List()\n        var list32 : List[Any] = List()\n        var list33 : List[Any] = List()\n        var list34 : List[Any] = List()\n        var list35 : List[Any] = List()\n        var list36 : List[Any] = List()\n        var list37 : List[Any] = List()\n        var list38 : List[Any] = List()\n        var list39 : List[Any] = List()\n        var list40 : List[Any] = List()\n        var list41\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuoq8lwo8.scala:46:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuoq8lwo8.scala:48:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuoq8lwo8.scala:49:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpuoq8lwo8.scala:50:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            var list2 = list1.asInstanceOf[List[Any]]\n            var list3 = List[Any]()\n            var list4 = List[Any]()\n            var i = 0\n            while (i < L) {\n                list3 = list3 :+ list2(i)\n                i += 1\n            }\n            i = L.toInt\n            while (i < list2.length) {\n                list4 = list4 :+ list2(i)\n                i += 1\n            }\n            (list3, list4)\n        } else {\n            var list2 = list1.asInstanceOf[Array[Any]]\n            var list3 = List[Any]()\n            var list4 = List[Any]()\n            var i = 0\n            while (i < L) {\n                list3 = list3 :+ list2(i)\n                i += 1\n            }\n            i = L.toInt\n            while (i < list2.length) {\n                list4 = list4 :+ list2(i)\n                i += 1\n            }\n            (list3, list4)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkqxj9vi.scala:39:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkqxj9vi.scala:40:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphkqxj9vi.scala:41:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkqxj9vi.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val list5 = List(list3, list4)\n        return list5\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2by6sxqu.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2by6sxqu.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp2by6sxqu.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2by6sxqu.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp9wyj0_zj.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmplr77ypy9.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplr77ypy9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        // Your code here\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4v8l5ra1.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4v8l5ra1.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp4v8l5ra1.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4v8l5ra1.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length < L) {\n                return (list, List())\n            }\n            else {\n                val list2 = list.splitAt(L.toInt)\n                return (list2._1, list2._2)\n            }\n        }\n        else if (list1.isInstanceOf[Array[Any]]) {\n            val list = list1.asInstanceOf[Array[Any]]\n            if (list.length < L) {\n                return (list, Array())\n            }\n            else {\n                val list2 = list.splitAt(L.toInt)\n                return (list2._1, list2._2)\n            }\n        }\n        else if (list1.isInstanceOf[String]) {\n            val list = list1.asInstanceOf[String]\n            if (list.length < L) {\n                return (list, \"\")\n            }\n            else {\n                val list2 = list.splitAt(L.toInt)\n                return (list2._1, list2._2)\n            }\n        }\n        else {\n            return (list1, \"\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123716,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg_hyaz0s.scala:41:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg_hyaz0s.scala:42:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpg_hyaz0s.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg_hyaz0s.scala:44:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                var list2 : List[Any] = List()\n                var list3 : List[Any] = List()\n                for (i <- 0 until L.toInt) {\n                    list2 = list2 :+ list1(i)\n                }\n                for (i <- L.toInt until list1.length) {\n                    list3 = list3 :+ list1(i)\n                }\n                (list2, list3)\n            }\n            case _ => \"Invalid Input\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5oafc0pd.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5oafc0pd.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5oafc0pd.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5oafc0pd.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpxh5_w889.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwpiysnwd.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwpiysnwd.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpwpiysnwd.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwpiysnwd.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                val list2 = list1.splitAt(L.toInt)\n                list2\n            }\n            case _ => \"Invalid Input\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:15:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:16:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp44zrbgzh.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var list5 = List(list3, list4)\n        return list5\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpf4z10ubv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5d768pvv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Long]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgcmwjwm5.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgcmwjwm5.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgcmwjwm5.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgcmwjwm5.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
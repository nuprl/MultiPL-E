{
  "name": "mbpp_250_count_X",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var cnt = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) cnt += 1\n        }\n        return cnt\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1w25uyk.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1w25uyk.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1w25uyk.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86s9pq5p.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86s9pq5p.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86s9pq5p.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var n = tup\n        while (n > 0) {\n            if (n % 10 == x) count += 1\n            n /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia86ydjl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia86ydjl.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia86ydjl.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zjacu8k.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zjacu8k.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zjacu8k.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5fq2e3w.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5fq2e3w.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5fq2e3w.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb56rexb0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb56rexb0.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb56rexb0.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var cnt = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) cnt += 1\n        }\n        cnt\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0aha8bii.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0aha8bii.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0aha8bii.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toString.toLong == x) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5avpugn.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5avpugn.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5avpugn.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv0pxj3i.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv0pxj3i.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv0pxj3i.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124297,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeslw_7f6.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeslw_7f6.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeslw_7f6.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124297,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9p691o82.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var cnt = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) cnt += 1\n        }\n        return cnt\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zv7cau0.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zv7cau0.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zv7cau0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var i = 0L\n        while (i < tup._1) {\n            if (tup._2(i) == x) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwqfi15eq.scala:8:23 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < tup._1) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwqfi15eq.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (tup._2(i) == x) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqfi15eq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqfi15eq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqfi15eq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var tup2 = tup\n        while (tup2 > 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm3r_nzd.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm3r_nzd.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm3r_nzd.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i).toString.toLong == x) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps7z7x6pa.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps7z7x6pa.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps7z7x6pa.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var i = 0L\n        while (i < tup) {\n            if (i % x == 0) count += 1\n            i += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7yowcku.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7yowcku.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7yowcku.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i).toString.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var tup2 = tup\n        while (tup2 != 0) {\n            if (tup2 % 10 == x) count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2woxm17.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2woxm17.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2woxm17.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8710nyo.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8710nyo.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8710nyo.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toString.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7kb500nw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124297,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpha4o9hoa.scala:7:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- tup) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha4o9hoa.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha4o9hoa.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha4o9hoa.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mR",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124297,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9p691o82.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53xgdmj4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53xgdmj4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53xgdmj4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaenec9pv.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var temp = tup\n        while (temp > 0) {\n            if (temp % 10 == x) count += 1\n            temp /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpudcetbud.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpudcetbud.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpudcetbud.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp159wh6gw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp159wh6gw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp159wh6gw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn9cvd60.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl7x08k22.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        if (tup == 0) 0\n        else if (tup % 10 == x) 1 + countX(tup / 10, x)\n        else countX(tup / 10, x)\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckrggj3z.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckrggj3z.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckrggj3z.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4b8xea8d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L to tup) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r470csu.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r470csu.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r470csu.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ghpzmg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var i = 0L\n        while (i < tup) {\n            if (i % x == 0) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124297,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9p691o82.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9p691o82.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6fc1p746.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i.asDigit == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcr9u342t.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcr9u342t.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcr9u342t.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var i = 0L\n        while (i < tup) {\n            if (i % x == 0) count += 1\n            i += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvc9uaa76.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i).toString.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vqj6ryw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i.toString.toLong == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeepjouxj.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0pgt2bf.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124295,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9cn1ihbl.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup != 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124313,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5pjaokmm.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5pjaokmm.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5pjaokmm.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5pjaokmm.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn4cp5bus.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1L to tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9kqybxo.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t != 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmwqn0zr.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmwqn0zr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmwqn0zr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString) {\n            if (i == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzrj95tfg.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_iv_o52e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9uom3vb.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- tup.toString.toCharArray) {\n            if (i == x) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124313,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp245lznxm.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp245lznxm.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp245lznxm.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38rvna3v.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7hjf9gvy.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0L until tup) {\n            if (i % x == 0) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124296,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbzadzco.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        while (tup > 0) {\n            if (tup % 10 == x) count += 1\n            tup /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl7x08k22.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl7x08k22.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        val len = tup.toString.length\n        for (i <- 0 until len) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124313,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe94hmdif.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe94hmdif.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe94hmdif.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count : Long = 0\n        for (i <- 1 to tup.toInt) {\n            if (i % x == 0) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaz20a77f.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaz20a77f.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaz20a77f.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 until tup.toString.length) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyu93x02u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        for (i <- 0 to tup.toString.length - 1) {\n            if (tup.toString.charAt(i) == x.toString.charAt(0)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpee89bpc4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n    def countX(tup : Long, x : Long) : Long = {\n        var count = 0L\n        var t = tup\n        while (t > 0) {\n            if (t % 10 == x) count += 1\n            t /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (4l)) == (0l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (10l)) == (3l));\n    assert(countX((10l, 8l, 5l, 2l, 10l, 15l, 10l, 8l, 5l, 8l, 8l, 2l), (8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m4l\u001b[0m)) == (\u001b[31m0l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpscpnon.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countX((\u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_750_add_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = test_tup :: result_list\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var list = test_list\n        list = list :+ test_tup\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaw773nr9.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaw773nr9.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaw773nr9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = test_tup :: result_list\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = result_list :+ test_tup\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var list_size = test_list.size\n        var new_list = test_list\n        if (list_size == 0) {\n            new_list = test_tup :: new_list\n        }\n        else {\n            var i = 0\n            while (i < list_size) {\n                if (test_tup < test_list(i)) {\n                    new_list = new_list.updated(i, test_tup)\n                    i = list_size\n                }\n                i += 1\n            }\n            if (i == list_size) {\n                new_list = test_tup :: new_list\n            }\n        }\n        new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6t0kbkne.scala:27:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6t0kbkne.scala:28:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6t0kbkne.scala:29:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = (i + test_tup) :: result\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        // Write your code here\n        var list = test_list\n        list = list :+ test_tup\n        return list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1ins9tc.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1ins9tc.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1ins9tc.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = (i + test_tup) :: result\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result ::: List(i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0igwk1gn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0igwk1gn.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0igwk1gn.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = result_list :+ test_tup\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp97w8ouso.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gcman2p.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gcman2p.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gcman2p.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        // Write your code here\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var test_list_new = test_list\n        test_list_new = test_tup :: test_list_new\n        test_list_new\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = (i + test_tup) :: result\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        result = test_tup :: test_list\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqwhk1qb.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqwhk1qb.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqwhk1qb.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        val new_list = test_list.to[ListBuffer]\n        new_list += test_tup\n        new_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E056] Syntax Error: /tmp/tmpi5j366_l.scala:6:23 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnew_list\u001b[0m = test_list.to[\u001b[35mListBuffer\u001b[0m]\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Missing type parameter for collection.mutable.ListBuffer\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5j366_l.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5j366_l.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5j366_l.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = test_tup :: result\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        // Write your code here\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = test_tup :: result\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp66ths3yy.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyg9oqye.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyg9oqye.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyg9oqye.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe77nd2d8.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe77nd2d8.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe77nd2d8.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy6ib49w_.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var test_list_new = test_list\n        test_list_new = test_list_new :+ test_tup\n        return test_list_new\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123215,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpelgrd_ca.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpelgrd_ca.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpelgrd_ca.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = test_tup :: result_list\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbiew5wtz.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_742_area_tetrahedron",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1sqx_jle.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m).toFloat\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3).toFloat * side * side\n        area / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4uze4pk6.scala:10)\n\tat Problem.main(tmp4uze4pk6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = (a * side * side) / 4\n        val d = (b * side * side) / 2\n        val e = (c * d) / 3\n        e.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpz5jt0u4a.scala:14)\n\tat Problem.main(tmpz5jt0u4a.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqxgjz0_8.scala:9)\n\tat Problem.main(tmpqxgjz0_8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * side * side\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = a * sqrt(3) / 2\n        val area = sqrt(3) * pow(s, 2)\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122625,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp6oz9btsc.scala:12)\n\tat Problem.main(tmp6oz9btsc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3).toFloat * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = sqrt(6)\n        val d = sqrt(3)\n        val e = sqrt(2)\n        val f = sqrt(6)\n        val g = sqrt(3)\n        val h = sqrt(2)\n        val i = sqrt(6)\n        val j = sqrt(3)\n        val k = sqrt(2)\n        val l = sqrt(6)\n        val m = sqrt(3)\n        val n = sqrt(2)\n        val o = sqrt(6)\n        val p = sqrt(3)\n        val q = sqrt(2)\n        val r = sqrt(6)\n        val s = sqrt(3)\n        val t = sqrt(2)\n        val u = sqrt(6)\n        val v = sqrt(3)\n        val w = sqrt(2)\n        val x = sqrt(6)\n        val y = sqrt(3)\n        val z = sqrt(2)\n        val aa = sqrt(6)\n        val ab = sqrt(3)\n        val ac = sqrt(2)\n        val ad = sqrt(6)\n        val ae = sqrt(3)\n        val af = sqrt(2)\n        val ag = sqrt(6)\n        val ah = sqrt(3)\n        val ai = sqrt(2)\n        val aj = sqrt(6)\n        val ak = sqrt(3)\n        val al = sqrt(2)\n        val am = sqrt(6)\n        val an = sqrt(3)\n        val ao = sqrt(2)\n        val ap = sqrt(6)\n        val aq = sqrt(3)\n        val ar = sqrt(2)\n        val as = sqrt(6)\n        val at = sqrt(3)\n        val au = sqrt(2)\n        val av = sqrt(6)\n        val aw = sqrt(3)\n        val ax = sqrt(2)\n        val ay = sq\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7rjcauu.scala:56:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36may\u001b[0m = sq\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^\u001b[0m\n\u001b[31m   |\u001b[0m                 Not found: sq\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq7rjcauu.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3) * side * side\n        a / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1pgz4xan.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        a / \u001b[31m4\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = side.toFloat\n        val d = pow(c, 2).toFloat\n        val e = pow(c, 3).toFloat\n        val f = sqrt(d * d * d).toFloat\n        val g = sqrt(e * e * e).toFloat\n        val h = sqrt(f * f * f).toFloat\n        val i = sqrt(g * g * g).toFloat\n        val j = sqrt(h * h * h).toFloat\n        val k = sqrt(i * i * i).toFloat\n        val l = sqrt(j * j * j).toFloat\n        val m = sqrt(k * k * k).toFloat\n        val n = sqrt(l * l * l).toFloat\n        val o = sqrt(m * m * m).toFloat\n        val p = sqrt(n * n * n).toFloat\n        val q = sqrt(o * o * o).toFloat\n        val r = sqrt(p * p * p).toFloat\n        val s = sqrt(q * q * q).toFloat\n        val t = sqrt(r * r * r).toFloat\n        val u = sqrt(s * s * s).toFloat\n        val v = sqrt(t * t * t).toFloat\n        val w = sqrt(u * u * u).toFloat\n        val x = sqrt(v * v * v).toFloat\n        val y = sqrt(w * w * w).toFloat\n        val z = sqrt(x * x * x).toFloat\n        val aa = sqrt(y * y * y).toFloat\n        val ab = sqrt(z * z * z).toFloat\n        val ac = sqrt(aa * aa * aa).toFloat\n        val ad = sqrt(ab * ab * ab).toFloat\n        val ae = sqrt(ac * ac * ac).toFloat\n        val af = sqrt(ad * ad * ad).toFloat\n        val ag = sqrt(ae * ae * ae).toFloat\n        val\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpizqsq230.scala:39:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        \u001b[33mval\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpizqsq230.scala:40:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2)\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val area = sqrt(3) * pow(s, 2)\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9xwh4s5h.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = sqrt(6)\n        val d = sqrt(3)\n        val e = sqrt(2)\n        val f = sqrt(6)\n        val g = sqrt(3)\n        val h = sqrt(2)\n        val i = sqrt(6)\n        val j = sqrt(3)\n        val k = sqrt(2)\n        val l = sqrt(6)\n        val m = sqrt(3)\n        val n = sqrt(2)\n        val o = sqrt(6)\n        val p = sqrt(3)\n        val q = sqrt(2)\n        val r = sqrt(6)\n        val s = sqrt(3)\n        val t = sqrt(2)\n        val u = sqrt(6)\n        val v = sqrt(3)\n        val w = sqrt(2)\n        val x = sqrt(6)\n        val y = sqrt(3)\n        val z = sqrt(2)\n        val aa = sqrt(6)\n        val ab = sqrt(3)\n        val ac = sqrt(2)\n        val ad = sqrt(6)\n        val ae = sqrt(3)\n        val af = sqrt(2)\n        val ag = sqrt(6)\n        val ah = sqrt(3)\n        val ai = sqrt(2)\n        val aj = sqrt(6)\n        val ak = sqrt(3)\n        val al = sqrt(2)\n        val am = sqrt(6)\n        val an = sqrt(3)\n        val ao = sqrt(2)\n        val ap = sqrt(6)\n        val aq = sqrt(3)\n        val ar = sqrt(2)\n        val as = sqrt(6)\n        val at = sqrt(3)\n        val au = sqrt(2)\n        val av = sqrt(6)\n        val aw = sqrt(3)\n        val ax = sqrt(2)\n        val ay = sq\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7rjcauu.scala:56:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36may\u001b[0m = sq\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^\u001b[0m\n\u001b[31m   |\u001b[0m                 Not found: sq\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq7rjcauu.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = a * sqrt(3) / 2\n        val area = sqrt(3) * pow(s, 2)\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjj0e7t3.scala:9:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3) * pow(side, 2).toFloat\n        a / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpffhzvzkb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        a / \u001b[31m4\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqxgjz0_8.scala:9)\n\tat Problem.main(tmpqxgjz0_8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = sqrt(3) * a * a / 4\n        s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp278tab8d.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        s\n\u001b[31m\u001b[31m  |\u001b[0m        ^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (s : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = sqrt(3) * a * a / 4\n        s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp278tab8d.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        s\n\u001b[31m\u001b[31m  |\u001b[0m        ^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (s : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = sqrt(6)\n        val d = sqrt(3)\n        val e = sqrt(2)\n        val f = sqrt(6)\n        val g = sqrt(3)\n        val h = sqrt(2)\n        val i = sqrt(6)\n        val j = sqrt(3)\n        val k = sqrt(2)\n        val l = sqrt(6)\n        val m = sqrt(3)\n        val n = sqrt(2)\n        val o = sqrt(6)\n        val p = sqrt(3)\n        val q = sqrt(2)\n        val r = sqrt(6)\n        val s = sqrt(3)\n        val t = sqrt(2)\n        val u = sqrt(6)\n        val v = sqrt(3)\n        val w = sqrt(2)\n        val x = sqrt(6)\n        val y = sqrt(3)\n        val z = sqrt(2)\n        val aa = sqrt(6)\n        val ab = sqrt(3)\n        val ac = sqrt(2)\n        val ad = sqrt(6)\n        val ae = sqrt(3)\n        val af = sqrt(2)\n        val ag = sqrt(6)\n        val ah = sqrt(3)\n        val ai = sqrt(2)\n        val aj = sqrt(6)\n        val ak = sqrt(3)\n        val al = sqrt(2)\n        val am = sqrt(6)\n        val an = sqrt(3)\n        val ao = sqrt(2)\n        val ap = sqrt(6)\n        val aq = sqrt(3)\n        val ar = sqrt(2)\n        val as = sqrt(6)\n        val at = sqrt(3)\n        val au = sqrt(2)\n        val av = sqrt(6)\n        val aw = sqrt(3)\n        val ax = sqrt(2)\n        val ay = sq\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7rjcauu.scala:56:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36may\u001b[0m = sq\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^\u001b[0m\n\u001b[31m   |\u001b[0m                 Not found: sq\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq7rjcauu.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = a * sqrt(3) / 2\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptsixrjno.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3)\n        val b = s * s\n        val c = a * b\n        val d = c / 4\n        val e = d * sqrt(2)\n        return e\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72yd9fv4.scala:12:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mreturn\u001b[0m e\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    (e : Double)\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side\n        val s = a * sqrt(3) / 2\n        val area = sqrt(3) * pow(s, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppfu48jdy.scala:9:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3) * pow(side, 2)\n        val area = a / 4\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_1dnwvp2.scala:11)\n\tat Problem.main(tmp_1dnwvp2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = sqrt(6)\n        val d = sqrt(3)\n        val e = sqrt(2)\n        val f = sqrt(6)\n        val g = sqrt(3)\n        val h = sqrt(2)\n        val i = sqrt(6)\n        val j = sqrt(3)\n        val k = sqrt(2)\n        val l = sqrt(6)\n        val m = sqrt(3)\n        val n = sqrt(2)\n        val o = sqrt(6)\n        val p = sqrt(3)\n        val q = sqrt(2)\n        val r = sqrt(6)\n        val s = sqrt(3)\n        val t = sqrt(2)\n        val u = sqrt(6)\n        val v = sqrt(3)\n        val w = sqrt(2)\n        val x = sqrt(6)\n        val y = sqrt(3)\n        val z = sqrt(2)\n        val aa = sqrt(6)\n        val bb = sqrt(3)\n        val cc = sqrt(2)\n        val dd = sqrt(6)\n        val ee = sqrt(3)\n        val ff = sqrt(2)\n        val gg = sqrt(6)\n        val hh = sqrt(3)\n        val ii = sqrt(2)\n        val jj = sqrt(6)\n        val kk = sqrt(3)\n        val ll = sqrt(2)\n        val mm = sqrt(6)\n        val nn = sqrt(3)\n        val oo = sqrt(2)\n        val pp = sqrt(6)\n        val qq = sqrt(3)\n        val rr = sqrt(2)\n        val ss = sqrt(6)\n        val tt = sqrt(3)\n        val uu = sqrt(2)\n        val vv = sqrt(6)\n        val ww = sqrt(3)\n        val xx = sqrt\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar9_kg0y.scala:56:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side\n        val s = sqrt(3) * a * a\n        s / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7y9tr3bx.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        s / \u001b[31m4\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = a * sqrt(3) / 2\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptsixrjno.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo82oevtv.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a / \u001b[31m4\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3)\n        val b = s * s\n        val c = b * a\n        val d = c / 4\n        d\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngj3f2yd.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        d\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (d : Double)\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val area = sqrt(3) * pow(s, 2)\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9xwh4s5h.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2)\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3) * s * s\n        val area = a / 4\n        return area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20c4bef2.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m area\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    (area : Double)\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3) * pow(s, 2)\n        val area = a / 4\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u1gf0d6.scala:9:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = sqrt(3) * a * a / 4\n        s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp278tab8d.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        s\n\u001b[31m\u001b[31m  |\u001b[0m        ^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (s : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3)\n        val b = s * s\n        val c = b * a\n        val d = c / 4\n        d\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngj3f2yd.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        d\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (d : Double)\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1sqx_jle.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m).toFloat\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side\n        val s = a * sqrt(3) / 2\n        val area = sqrt(3) * pow(s, 2).toFloat\n        return area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvinmw5y.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m area\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    (area : Double)\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3) * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122625,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprtr5ce9r.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(side, \u001b[31m2\u001b[0m).toFloat\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * pow(a, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyebsjk52.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(a, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = (a * side * side) / 4\n        val d = c * b\n        d.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5m6x7oyi.scala:13)\n\tat Problem.main(tmp5m6x7oyi.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3)\n        val b = s * s\n        val c = b / 4\n        val d = a * c\n        d\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbf5ac5zd.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        d\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (d : Double)\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3) * s * s\n        val area = a / 4\n        return area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20c4bef2.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m area\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    (area : Double)\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * side * side\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo9zgy2pb.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        val s = sqrt(3) * a * a / 4\n        s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp278tab8d.scala:8:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        s\n\u001b[31m\u001b[31m  |\u001b[0m        ^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (s : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = side.toFloat\n        sqrt(3) * a * a / 4\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo82oevtv.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * a * a / \u001b[31m4\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        val a = sqrt(3) * s * s\n        val area = a / 4\n        return area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20c4bef2.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m area\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    (area : Double)\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1sqx_jle.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m).toFloat\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * pow(side, 2).toFloat\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp6uremi.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        area\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (area : Double)\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val a = sqrt(3)\n        val b = sqrt(2)\n        val c = sqrt(6)\n        val d = sqrt(3)\n        val e = sqrt(2)\n        val f = sqrt(6)\n        val g = sqrt(3)\n        val h = sqrt(2)\n        val i = sqrt(6)\n        val j = sqrt(3)\n        val k = sqrt(2)\n        val l = sqrt(6)\n        val m = sqrt(3)\n        val n = sqrt(2)\n        val o = sqrt(6)\n        val p = sqrt(3)\n        val q = sqrt(2)\n        val r = sqrt(6)\n        val s = sqrt(3)\n        val t = sqrt(2)\n        val u = sqrt(6)\n        val v = sqrt(3)\n        val w = sqrt(2)\n        val x = sqrt(6)\n        val y = sqrt(3)\n        val z = sqrt(2)\n        val aa = sqrt(6)\n        val ab = sqrt(3)\n        val ac = sqrt(2)\n        val ad = sqrt(6)\n        val ae = sqrt(3)\n        val af = sqrt(2)\n        val ag = sqrt(6)\n        val ah = sqrt(3)\n        val ai = sqrt(2)\n        val aj = sqrt(6)\n        val ak = sqrt(3)\n        val al = sqrt(2)\n        val am = sqrt(6)\n        val an = sqrt(3)\n        val ao = sqrt(2)\n        val ap = sqrt(6)\n        val aq = sqrt(3)\n        val ar = sqrt(2)\n        val as = sqrt(6)\n        val at = sqrt(3)\n        val au = sqrt(2)\n        val av = sqrt(6)\n        val aw = sqrt(3)\n        val ax = sqrt(2)\n        val ay = sq\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7rjcauu.scala:56:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36may\u001b[0m = sq\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^\u001b[0m\n\u001b[31m   |\u001b[0m                 Not found: sq\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq7rjcauu.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val area = sqrt(3) * side * side\n        area.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * pow(s, 2)\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd4jpr2mp.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * pow(s, \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * pow(side, 2).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509965,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        sqrt(3).toFloat * side * side\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    def areaTetrahedron(side : Long) : Float = {\n        val s = side.toFloat\n        sqrt(3) * s * s\n    }\n    def main(args: Array[String]) = {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
      "timestamp": 1665509961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ye56ue5.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        sqrt(\u001b[31m3\u001b[0m) * s * s\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
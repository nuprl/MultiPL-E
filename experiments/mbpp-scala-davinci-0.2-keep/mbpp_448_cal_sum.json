{
  "name": "mbpp_448_cal_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum of perrin numbers.\n    def calSum(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(calSum((9l)) == (49l));\n    assert(calSum((10l)) == (66l));\n    assert(calSum((11l)) == (88l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        var p = 3L\n        var q = 2L\n        var r = 3L\n        for (i <- 4 to n.toInt) {\n            val t = p + q\n            sum += t\n            p = q\n            q = r\n            r = t\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 0\n        while (i < n) {\n            sum += p\n            val t = p\n            p = p + t - 2\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 0\n        while (i < n) {\n            sum += p\n            val t = p\n            p = p + i\n            i = t.toInt\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var perrin = ArrayBuffer[Long]()\n        perrin += 3\n        perrin += 0\n        perrin += 2\n        var sum = 2\n        var i = 3\n        while (i <= n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        while (a <= n) {\n            sum += a\n            val t = a; a = a + b; b = c; c = t\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 0\n        while (i < n) {\n            sum += p\n            val t = p\n            p = p + 2 * t\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var a = 3L;\n        var b = 2L;\n        var c = 0L;\n        var sum = 0L;\n        for (i <- 3 to n.toInt) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p * 3 + 2\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L;\n        for (i <- 4 to n.toInt) {\n            b = a; a = c; c = a + b;\n            sum += c;\n        }\n        return sum;",
    "        var a = 3; var b = 0; var c = 2; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            val t = a + b\n            a = c\n            b = t\n            c = a + b\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 1\n        while (i <= n) {\n            sum += p\n            i += 1\n            p = p + calPerrin(p)\n        }\n        sum",
    "        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        perrin.sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            val temp = perrin(0) + perrin(1)\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = temp\n            sum += perrin(2)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 4L to n) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer[Long]()\n        perrin += 3\n        perrin += 0\n        perrin += 2\n        while (perrin(perrin.length - 1) <= n) {\n            perrin += perrin(perrin.length - 2) + perrin(perrin.length - 3)\n        }\n        for (i <- 0 until perrin.length - 1) {\n            if (perrin(i) % 2 == 0) sum += perrin(i)\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum"
  ]
}
{
  "name": "mbpp_301_dict_depth",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplrxxewr0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplrxxewr0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplrxxewr0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplrxxewr0.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case null => 0\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnyj1wlnm.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnyj1wlnm.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnyj1wlnm.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnyj1wlnm.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case d : List[Any] => 1 + d.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                if (d.size == 0) 1\n                else d.values.map(dictDepth(_)).max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrbp08av.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrbp08av.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrbp08av.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrbp08av.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        def depth(d : Any, currentDepth : Long) : Long = {\n            d match {\n                case d : Map[Any, Any] => {\n                    val depths = d.map(x => depth(x._2, currentDepth + 1))\n                    if (depths.isEmpty) currentDepth\n                    else depths.max\n                }\n                case d : List[Any] => {\n                    val depths = d.map(x => depth(x, currentDepth + 1))\n                    if (depths.isEmpty) currentDepth\n                    else depths.max\n                }\n                case _ => currentDepth\n            }\n        }\n        depth(d, 1)\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_tt3jeqz.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_tt3jeqz.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_tt3jeqz.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_tt3jeqz.scala:26:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.map(x => dictDepth(x._2)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.map(x => dictDepth(x._2)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[_, _] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case d : List[Any] => 1 + d.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case d : List[Any] => 1 + d.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx68zpu5z.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx68zpu5z.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx68zpu5z.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx68zpu5z.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case d : List[Any] => 1 + d.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case d : List[Any] => 1 + d.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqco61umg.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqco61umg.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqco61umg.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqco61umg.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => d.foldLeft(1L)((acc, x) => max(acc, 1 + dictDepth(x._2)))\n            case d : List[Any] => d.foldLeft(1L)((acc, x) => max(acc, 1 + dictDepth(x)))\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiptvrbed.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiptvrbed.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiptvrbed.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiptvrbed.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case d : List[Any] => d.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94iqzczv.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94iqzczv.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94iqzczv.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94iqzczv.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i5f8hpj.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.map(x => dictDepth(x._2)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[_, _] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => d.map(x => dictDepth(x._2)).max + 1\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpah4cgazc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpah4cgazc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpah4cgazc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpah4cgazc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[_, _] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnli7w70a.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case d : List[Any] => 1 + d.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case d : List[Any] => 1 + d.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[String, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41i5f4dq.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41i5f4dq.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41i5f4dq.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41i5f4dq.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_)).toList\n                if (depths.length == 0) 1 else (depths.max + 1)\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc8x0xtf9.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc8x0xtf9.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc8x0xtf9.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc8x0xtf9.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(x => dictDepth(x)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(x => dictDepth(x)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzvin41ad.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + dictDepth(d.values.toList)\n            case d : List[Any] => d.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph88w8z2m.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph88w8z2m.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph88w8z2m.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph88w8z2m.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case d : List[Any] => 1 + d.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1e49w5ic.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[String, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvqlqi_k5.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvqlqi_k5.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvqlqi_k5.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvqlqi_k5.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = for ((k, v) <- d) yield dictDepth(v)\n                1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x_rj73l.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x_rj73l.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x_rj73l.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x_rj73l.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpop3h5nha.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 0 else depths.max + 1\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8ajow0o.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8ajow0o.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8ajow0o.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8ajow0o.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsu9asd3t.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsu9asd3t.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsu9asd3t.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsu9asd3t.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1\n                else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:18:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.map(x => dictDepth(x._2)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1\n                else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbviz40g.scala:18:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_)).toList\n                if (depths.isEmpty) 1 else 1 + depths.max\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu2dg2zce.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu2dg2zce.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu2dg2zce.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu2dg2zce.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + (d.values.map(dictDepth(_)).max)\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplts6kubx.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[String, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppce7_ddl.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppce7_ddl.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppce7_ddl.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppce7_ddl.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case d : List[Any] => 1 + d.map(dictDepth(_)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdhi5ts_.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(x => dictDepth(x)).max\n            case d : List[Any] => 1 + d.map(x => dictDepth(x)).max\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtannza_.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtannza_.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtannza_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtannza_.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.map(x => dictDepth(x._2)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5tlgfuc.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.size == 0) 1\n                else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoz_w5144.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoz_w5144.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoz_w5144.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoz_w5144.scala:18:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.values.map(dictDepth(_))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122529,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qnrxcy_.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd53x20jr.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + dictDepth(d.values.toList)\n            case l : List[Any] => l.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvoif4ox1.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvoif4ox1.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvoif4ox1.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvoif4ox1.scala:15:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => {\n                val depths = d.map(x => dictDepth(x._2))\n                if (depths.isEmpty) 1 else depths.max + 1\n            }\n            case _ => 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7go4zlkx.scala:17:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the depth of a dictionary.\n    def dictDepth(d : Any) : Long = {\n        d match {\n            case d : Map[Any, Any] => 1 + d.values.map(dictDepth(_)).max\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,Map[String,Map[Long,Long]]](\"c\" -> Map[String,Map[Long,Long]](\"d\" -> Map[Long,Long]()))))) == (4l));\n    assert(dictDepth((Any(\"a\" -> 1l, \"b\" -> Map[String,String](\"c\" -> \"python\")))) == (2l));\n    assert(dictDepth((Any(1l -> \"Sun\", 2l -> Map[Long,Map[Long,String]](3l -> Any(4l -> \"Mon\"))))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509734,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]]](\u001b[31m\"c\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]](\u001b[31m\"d\"\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mLong\u001b[0m]()))))) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(dictDepth((Any(\u001b[31m\"a\"\u001b[0m -> \u001b[31m1l\u001b[0m, \u001b[31m\"b\"\u001b[0m -> Map[\u001b[35mString\u001b[0m,\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m -> \u001b[31m\"python\"\u001b[0m)))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltyhnd8p.scala:14:78 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(dictDepth((Any(\u001b[31m1l\u001b[0m -> \u001b[31m\"Sun\"\u001b[0m, \u001b[31m2l\u001b[0m -> Map[\u001b[35mLong\u001b[0m,\u001b[35mMap\u001b[0m[\u001b[35mLong\u001b[0m,\u001b[35mString\u001b[0m]](\u001b[31m3l\u001b[0m -> Any(\u001b[31m4l\u001b[0m -> \u001b[31m\"Mon\"\u001b[0m))))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
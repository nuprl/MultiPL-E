{
  "name": "mbpp_162_sum_series",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n/2).toInt) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += (n - 2 * i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgmwtclf2.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n/2).toInt) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgf084sw.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        var i : Long = 0\n        while (n - 2*i >= 0) {\n            sum += n - 2*i\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt7kn3bbi.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        var i : Long = 0\n        while (n - 2*i >= 0) {\n            sum += n - 2*i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124069,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3zddj94y.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmpu4v29k.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        var i : Long = 0\n        while (n - 2*i > 0) {\n            sum += n - 2*i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += (n - 2*i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmggydygt.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += (n - 2*i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx3en38ph.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        var i : Long = 0\n        while (n - 2*i >= 0) {\n            sum += n - 2*i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124069,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3zddj94y.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += (n - 2*i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4qz5fjpp.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgf084sw.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n == 0) return 0\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n % 2 == 0) {\n            var sum = 0L\n            for (i <- 0 to n.toInt / 2) {\n                sum += n - 2 * i\n            }\n            sum\n        } else {\n            var sum = 0L\n            for (i <- 0 to (n - 1).toInt / 2) {\n                sum += n - 2 * i\n            }\n            sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - (2 * i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += (n - 2*i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9pqbyphz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt7kn3bbi.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n/2).toInt) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmg92awx_.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        var i : Long = 0\n        while (n - 2*i > 0) {\n            sum += n - 2*i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt7kn3bbi.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx9byi3yj.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        var i = 0\n        while (n - 2 * i > 0) {\n            sum += n - 2 * i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgf084sw.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to (n / 2).toInt) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n        else n + sumSeries(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var result : Long = 0\n        for (i <- 0 to n/2) {\n            result += n - 2*i\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk9rgnysp.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var result = 0L\n        for (i <- 0 to n/2) {\n            result += n - 2*i\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbgsynm4k.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var i = 0\n        var sum = 0L\n        while (n - 2 * i >= 0) {\n            sum += n - 2 * i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n <= 0) 0\n        else n + sumSeries(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpit_cq4oo.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgf084sw.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylee1n4u.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n <= 0) 0\n        else n + sumSeries(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprq2ijtf5.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        if (n <= 0) return 0\n        var i = 0\n        var sum = 0L\n        while (n - 2 * i > 0) {\n            sum += n - 2 * i\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124081,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n.toInt / 2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p7ub4q3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfjnnfd3.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to n/\u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
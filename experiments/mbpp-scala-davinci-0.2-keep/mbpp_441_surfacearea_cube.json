{
  "name": "mbpp_441_surfacearea_cube",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the surface area of a cube of a given size.\n    def surfaceareaCube(l : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_441_surfacearea_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(surfaceareaCube((5l)) == (150l));\n    assert(surfaceareaCube((3l)) == (54l));\n    assert(surfaceareaCube((10l)) == (600l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        l * l * 6",
    "        6 * l * l",
    "        6 * l * l",
    "        return l * l * 6",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l",
    "        6 * l * l"
  ]
}
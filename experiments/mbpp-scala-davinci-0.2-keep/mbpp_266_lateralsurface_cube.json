{
  "name": "mbpp_266_lateralsurface_cube",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the lateral surface area of a cube given its side length.\n    def lateralsurfaceCube(l : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(lateralsurfaceCube((5l)) == (100l));\n    assert(lateralsurfaceCube((9l)) == (324l));\n    assert(lateralsurfaceCube((10l)) == (400l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        4 * l * l",
    "        4 * l * l",
    "        4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l",
    "        4 * l * l",
    "        4 * l * l",
    "        4 * l * l",
    "        return 4 * l * l",
    "        return l * l * 4",
    "        4 * l * l",
    "        return 4 * l * l",
    "        return 4 * l * l"
  ]
}
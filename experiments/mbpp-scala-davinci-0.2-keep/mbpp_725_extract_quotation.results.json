{
  "name": "mbpp_725_extract_quotation",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replaceAll(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o296nrw.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o296nrw.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o296nrw.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o296nrw.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o296nrw.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3mxqdjj9.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3mxqdjj9.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3mxqdjj9.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mxqdjj9.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3mxqdjj9.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdlsvq8uv.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdlsvq8uv.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        val text2 = text.replaceAll(\"\\\"\", \"\")\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2siynpzc.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2siynpzc.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2siynpzc.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2siynpzc.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2siynpzc.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\" \")\n        val text3 = text2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        val text4 = text3.filter(x => x.contains(\"\\\"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyeq6ru6t.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyeq6ru6t.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyeq6ru6t.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyeq6ru6t.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyeq6ru6t.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdoeexs4y.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdoeexs4y.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                result += text(i).substring(1, text(i).length)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeyoobzz5.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeyoobzz5.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeyoobzz5.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyoobzz5.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyoobzz5.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.startsWith(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rjqrcv6.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rjqrcv6.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        if (text.length == 1) {\n            println(\"No quotation marks found\")\n        }\n        else {\n            for (i <- 1 until text.length by 2) {\n                println(text(i))\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn327tfjb.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn327tfjb.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).substring(1, text(i).length - 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphe6qp5qs.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphe6qp5qs.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphe6qp5qs.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe6qp5qs.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe6qp5qs.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwbcecjk.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwbcecjk.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.split(\" \")\n        val text4 = text3.filter(x => x.contains(\"\\\"\"))\n        val text5 = text4.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text5\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = for (i <- 1 to text.length - 1 by 2) yield text(i)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9vlpkq8e.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9vlpkq8e.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9vlpkq8e.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9vlpkq8e.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9vlpkq8e.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray3 = textArray2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(x => x != \" \" && x != \"\")\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoxbeh7ve.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoxbeh7ve.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoxbeh7ve.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxbeh7ve.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxbeh7ve.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        pattern.findAllIn(text1).matchData.map(x => x.group(1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzk0nea0p.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzk0nea0p.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzk0nea0p.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzk0nea0p.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzk0nea0p.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text1)\n        matches.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_svha8e.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_svha8e.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (i % 2 == 1) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9llxswea.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9llxswea.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9llxswea.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9llxswea.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9llxswea.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]\", \"\")\n        val text2 = text.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.split(\" \")\n        val text4 = text3.filter(x => x != \"\")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyyy6k3_t.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyyy6k3_t.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyyy6k3_t.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyyy6k3_t.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyyy6k3_t.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        if (text.length == 1) {\n            println(\"No quotation marks found\")\n        }\n        else {\n            for (i <- 1 until text.length by 2) {\n                println(text(i))\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn327tfjb.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn327tfjb.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn327tfjb.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replace(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20lnkitx.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20lnkitx.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        var result = List[Char]()\n        var flag = false\n        for (i <- text) {\n            if (i == '\"') {\n                if (flag) {\n                    flag = false\n                } else {\n                    flag = true\n                }\n            } else {\n                if (flag) {\n                    result = result :+ i\n                }\n            }\n        }\n        result.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr16cyxu.scala:25:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr16cyxu.scala:26:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyr16cyxu.scala:27:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyr16cyxu.scala:25:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyr16cyxu.scala:26:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlsvq8uv.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdlsvq8uv.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdlsvq8uv.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        var result = List[Char]()\n        var flag = false\n        for (i <- text) {\n            if (i == '\"') {\n                flag = !flag\n            }\n            else if (flag) {\n                result = result :+ i\n            }\n        }\n        result.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoplfes3r.scala:20:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoplfes3r.scala:21:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoplfes3r.scala:22:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoplfes3r.scala:20:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoplfes3r.scala:21:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        val matches = regex.findAllIn(text1)\n        matches.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjxdglqom.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjxdglqom.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjxdglqom.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjxdglqom.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjxdglqom.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                result += text(i).substring(1, text(i).length)\n            }\n            if (text(i).endsWith(\"\\\"\")) {\n                result += text(i).substring(0, text(i).length - 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hlodei.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hlodei.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        for (i <- 0 until text2.length) {\n            if (text2(i).contains(\"\\\"\")) {\n                println(text2(i))\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:16:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:17:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl097xhg.scala:15:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl097xhg.scala:16:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) result += text(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16v72uh7.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16v72uh7.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x != \" \")\n        val text4 = text3.filter(x => x != \"\")\n        val text5 = text4.filter(x => x != \",\")\n        val text6 = text5.filter(x => x != \".\")\n        val text7 = text6.filter(x => x != \"?\")\n        val text8 = text7.filter(x => x != \"!\")\n        val text9 = text8.filter(x => x != \":\")\n        val text10 = text9.filter(x => x != \";\")\n        val text11 = text10.filter(x => x != \"\\\\\")\n        val text12 = text11.filter(x => x != \"n\")\n        val text13 = text12.filter(x => x != \"t\")\n        val text14 = text13.filter(x => x != \"r\")\n        val text15 = text14.filter(x => x != \"f\")\n        val text16 = text15.filter(x => x != \"b\")\n        val text17 = text16.filter(x => x != \"v\")\n        val text18 = text17.filter(x => x != \"0\")\n        val text19 = text18.filter(x => x != \"1\")\n        val text20 = text19.filter(x => x != \"2\")\n        val text21 = text20.filter(x => x != \"3\")\n        val text22 = text21.filter(x => x != \"4\")\n        val text23 = text22.filter(x => x != \"5\")\n        val text24 = text23.filter(x => x != \"6\")\n        val text25 = text24.filter(x => x != \"7\")\n        val text26 = text25.filter(x => x != \"8\")\n        val text27 = text26.filter(x => x != \"9\")\n        val text28 = text27.filter(x => x != \"a\")\n        val text29 = text28.filter(x => x != \"b\")\n        val text30 = text29.filter(x => x !=\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpr2ogcfju.scala:34:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtext30\u001b[0m = text29.filter(\u001b[36mx\u001b[0m => x !=\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2ogcfju.scala:37:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2ogcfju.scala:38:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2ogcfju.scala:39:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2ogcfju.scala:37:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) result += temp(j)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) {\n                        result += temp(j)\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg3pxjo4.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg3pxjo4.scala:22:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArr = text.split(\" \")\n        val textArr2 = textArr.filter(x => x.contains(\"\\\"\"))\n        textArr2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps_axne34.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps_axne34.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps_axne34.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_axne34.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_axne34.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fheqpnq.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fheqpnq.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i).substring(1, text(i).length - 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwfja1g1.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwfja1g1.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwfja1g1.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwfja1g1.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwfja1g1.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArr = text.split(\" \")\n        val textArr2 = textArr.filter(_.contains(\"\\\"\"))\n        textArr2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvba8dbvc.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvba8dbvc.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvba8dbvc.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvba8dbvc.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvba8dbvc.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).length > 0 && text(i)(0) == '\"') {\n                val temp = text(i).substring(1, text(i).length - 1)\n                result += temp\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmrz_39xf.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmrz_39xf.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmrz_39xf.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmrz_39xf.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmrz_39xf.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n      val text = text1.split(\" \")\n      val result = for (i <- 0 until text.length if text(i).contains(\"\\\"\")) yield text(i)\n      result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl4ljmj4b.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl4ljmj4b.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl4ljmj4b.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4ljmj4b.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4ljmj4b.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val text2 = text(i).split(\"\\\"\")\n                for (j <- 0 until text2.length) {\n                    if (text2(j).length > 0) {\n                        result += text2(j)\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0_v89z5s.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0_v89z5s.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0_v89z5s.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_v89z5s.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0_v89z5s.scala:22:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        text2.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph1vemi40.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph1vemi40.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replaceAll(\"\\\"\", \"\") + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp886fgl8r.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp886fgl8r.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp886fgl8r.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp886fgl8r.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp886fgl8r.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toCharArray\n        var result = \"\"\n        var flag = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (flag) {\n                    flag = false\n                } else {\n                    flag = true\n                }\n            } else if (flag) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpicznfbb_.scala:23:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpicznfbb_.scala:24:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpicznfbb_.scala:25:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpicznfbb_.scala:23:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpicznfbb_.scala:24:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        text\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp96_ot8pb.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp96_ot8pb.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp96_ot8pb.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp96_ot8pb.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp96_ot8pb.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjwm3npu.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjwm3npu.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjwm3npu.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjwm3npu.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjwm3npu.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.split(\" \")\n        val text4 = text3.filter(x => x.contains(\"\\\"\"))\n        val text5 = text4.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text5\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(x => x.length > 0)\n        val text3 = text2.filter(x => x.length > 0)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpisvbk4y8.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpisvbk4y8.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpisvbk4y8.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisvbk4y8.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisvbk4y8.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(_.contains(\"\\\"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123351,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptczlakq0.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptczlakq0.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptczlakq0.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptczlakq0.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptczlakq0.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawe72j4r.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawe72j4r.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawe72j4r.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawe72j4r.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawe72j4r.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray2 = textArray1.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjiem0j7o.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjiem0j7o.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc6xd9h74.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc6xd9h74.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc6xd9h74.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc6xd9h74.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc6xd9h74.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) result += temp(j)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray1.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i) + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptba8yjw4.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptba8yjw4.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptba8yjw4.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptba8yjw4.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptba8yjw4.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                var j = i\n                while (j < text.length && !text(j).endsWith(\"\\\"\")) {\n                    j += 1\n                }\n                result += text.slice(i, j + 1).mkString(\" \")\n                i = j\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpczdil7yd.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpczdil7yd.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpczdil7yd.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpczdil7yd.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                i = j\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczdil7yd.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        val text3 = text2.filter(_.length > 0)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = for (i <- 0 until text.length if text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) yield text(i)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09hlo0cc.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09hlo0cc.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09hlo0cc.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp09hlo0cc.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp09hlo0cc.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdoeexs4y.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdoeexs4y.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdoeexs4y.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (i % 2 == 1) result += text(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ngeb667.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ngeb667.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray3 = textArray2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val index = text(i).indexOf(\"\\\"\")\n                val value = text(i).substring(index + 1, text(i).length - 1)\n                result += value\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpktlin17e.scala:18:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpktlin17e.scala:19:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpktlin17e.scala:20:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktlin17e.scala:18:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpktlin17e.scala:19:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x.contains(\"\\\"\") == false)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x.contains(\"\\\"\") == false)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        var text = text1\n        var result = \"\"\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                var j = i + 1\n                while (j < text.length && text(j) != '\"') {\n                    j += 1\n                }\n                result += text.substring(i + 1, j) + \" \"\n                i = j + 1\n            } else {\n                i += 1\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxar6hg4x.scala:24:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxar6hg4x.scala:25:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxar6hg4x.scala:26:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxar6hg4x.scala:24:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxar6hg4x.scala:25:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        val result = new ListBuffer[Char]()\n        var flag = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (flag) flag = false\n                else flag = true\n            }\n            if (flag) result += text(i)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09b8w408.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09b8w408.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp09b8w408.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp09b8w408.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp09b8w408.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toCharArray\n        var flag = false\n        var result = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                flag = !flag\n            }\n            if (flag && text(i) != '\"') {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp627j6_3r.scala:20:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp627j6_3r.scala:21:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp627j6_3r.scala:22:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp627j6_3r.scala:20:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp627j6_3r.scala:21:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j) != \"\") {\n                        result += temp(j)\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbx37rsfk.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbx37rsfk.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbx37rsfk.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbx37rsfk.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbx37rsfk.scala:22:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textList = textArray.toList\n        val textList2 = textList.filter(_.contains(\"\\\"\"))\n        textList2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeu1m6pgx.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeu1m6pgx.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeu1m6pgx.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeu1m6pgx.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeu1m6pgx.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = \"\"\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzenyeqqj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzenyeqqj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzenyeqqj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzenyeqqj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzenyeqqj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                val temp = text(i).substring(1)\n                if (temp.endsWith(\"\\\"\")) {\n                    result += temp.substring(0, temp.length - 1)\n                } else {\n                    var j = i + 1\n                    while (j < text.length && !text(j).endsWith(\"\\\"\")) {\n                        temp += \" \" + text(j)\n                        j += 1\n                    }\n                    result += temp.substring(0, temp.length - 1)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4x0pz713.scala:26:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4x0pz713.scala:27:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4x0pz713.scala:28:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4x0pz713.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                        temp += \u001b[31m\" \"\u001b[0m + text(j)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of String - did you mean temp.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4x0pz713.scala:26:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not f",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) result += text(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp16v72uh7.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16v72uh7.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16v72uh7.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]\", \"\")\n        val text2 = text.replaceAll(\"\\\"\", \" \")\n        val text3 = text2.split(\" \").filter(_ != \"\")\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqoz5c4u7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqoz5c4u7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqoz5c4u7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqoz5c4u7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqoz5c4u7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8f1rmkht.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8f1rmkht.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa3uoa4is.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa3uoa4is.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa3uoa4is.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa3uoa4is.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa3uoa4is.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = for(i <- text if i.startsWith(\"\\\"\") && i.endsWith(\"\\\"\")) yield i\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0iqj9a1.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0iqj9a1.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0iqj9a1.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0iqj9a1.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0iqj9a1.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2_fsi2y.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2_fsi2y.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val result = textArray.filter(x => x.contains(\"\\\"\"))\n        println(result.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnouiopmx.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnouiopmx.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnouiopmx.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnouiopmx.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnouiopmx.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123358,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjk3qvula.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjk3qvula.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjk3qvula.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjk3qvula.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjk3qvula.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"[^\"]+\"\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuch66l8x.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuch66l8x.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuch66l8x.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuch66l8x.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuch66l8x.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val res = new ArrayBuffer[String]()\n        for (i <- 1 until text.length by 2) {\n            res += text(i)\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo2uumbzn.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo2uumbzn.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo2uumbzn.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo2uumbzn.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo2uumbzn.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        val text3 = text2.filter(_.length > 0)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]\", \"\")\n        val text2 = text.split(\"\\\"\")\n        val text3 = text2.filter(x => x != \"\")\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01blqu9j.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01blqu9j.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01blqu9j.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp01blqu9j.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp01blqu9j.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = List[String]()\n        for (i <- 0 to text.length - 1) {\n            if (text(i).contains(\"\\\"\")) {\n                result = result :+ text(i).replaceAll(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_2zy5nl5.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_2zy5nl5.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_2zy5nl5.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2zy5nl5.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2zy5nl5.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray1.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray2 = textArray1.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123359,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiem0j7o.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjiem0j7o.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjiem0j7o.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123361,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsjtu937a.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsjtu937a.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsjtu937a.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsjtu937a.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsjtu937a.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x != \" \")\n        val text4 = text3.filter(x => x != \"\")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb3k7nfyn.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb3k7nfyn.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]\n        for (i <- 0 to text.length - 1) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk3f2xsj2.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk3f2xsj2.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk3f2xsj2.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk3f2xsj2.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk3f2xsj2.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.split(\" \")\n        val text4 = text3.filter(x => x.contains(\"\\\"\"))\n        val text5 = text4.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text5\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxu92qpis.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxu92qpis.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvt57dwic.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvt57dwic.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.startsWith(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rjqrcv6.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rjqrcv6.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rjqrcv6.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"[^\"]+\"\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123361,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp65tz6hvc.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp65tz6hvc.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp65tz6hvc.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp65tz6hvc.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp65tz6hvc.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ArrayBuffer[String]()\n        for (i <- 1 until text.length by 2) {\n            result += text(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_xhhvr7.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_xhhvr7.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_xhhvr7.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_xhhvr7.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_xhhvr7.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwbcecjk.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwbcecjk.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwbcecjk.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                result += text(i).substring(1, text(i).length)\n            }\n            if (text(i).endsWith(\"\\\"\")) {\n                result += text(i).substring(0, text(i).length - 1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123352,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hlodei.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hlodei.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hlodei.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(_.startsWith(\"\\\"\"))\n        val text3 = text2.map(_.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz93rceka.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz93rceka.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz93rceka.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz93rceka.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz93rceka.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        val text2 = text.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.replaceAll(\" \", \"\")\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123361,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdnmm3772.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdnmm3772.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdnmm3772.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdnmm3772.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdnmm3772.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\" \")\n        val text3 = text2.map(x => if (x.contains(\"\\\"\")) x.replace(\"\\\"\", \"\") else \"\")\n        val text4 = text3.filter(x => x != \"\")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn1ig7y7q.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn1ig7y7q.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn1ig7y7q.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn1ig7y7q.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn1ig7y7q.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        text2.filter(x => x.contains(\"\\\"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppw0mf7g7.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppw0mf7g7.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppw0mf7g7.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppw0mf7g7.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppw0mf7g7.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
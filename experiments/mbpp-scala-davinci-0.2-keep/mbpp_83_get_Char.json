{
  "name": "mbpp_83_get_Char",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n    def getChar(strr : String) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(getChar((\"abc\")).equals((\"f\")));\n    assert(getChar((\"gfg\")).equals((\"t\")));\n    assert(getChar((\"ab\")).equals((\"c\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0\n        for (i <- 0 until strr.length) {\n            sum += strr(i)\n        }\n        return (sum % 26).toChar.toString",
    "        var str = strr.toLowerCase\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        return (sum % 26 + 'a').toChar.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val ch = (sum % 26 + 97).toChar\n        return ch.toString",
    "        var sum = 0\n        for (i <- 0 until strr.length) {\n            sum += strr(i)\n        }\n        sum = sum % 26\n        return (sum + 97).toChar.toString",
    "        val str = strr.toLowerCase()\n        val ascii = str.map(x => x.toInt).sum\n        val mod = ascii % 26\n        val ch = (mod + 97).toChar\n        return ch.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val mod = sum % 26\n        val c = (mod + 'a'.toInt).toChar\n        return c.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val mod = sum % 26\n        val char = (mod + 97).toChar\n        return char.toString",
    "        var str = strr.toLowerCase()\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        var ch = (sum % 26 + 'a').toChar\n        ch.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val ch = (sum % 26 + 'a'.toInt).toChar\n        return ch.toString",
    "        var sum = 0\n        for (i <- 0 until strr.length) {\n            sum += strr(i).toInt\n        }\n        return (sum % 26 + 'a'.toInt).toChar.toString",
    "        var str = strr.toLowerCase\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        sum %= 26\n        return (sum + 'a').toChar.toString",
    "        val str = strr.toLowerCase()\n        val sum = str.map(x => x.toInt).sum\n        val ch = (sum % 26 + 97).toChar\n        return ch.toString",
    "        var str = strr.toLowerCase\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        return (sum % 26 + 'a').toChar.toString",
    "        var sum = 0\n        for (i <- 0 until strr.length) {\n            sum += strr(i).toInt\n        }\n        return (sum % 26 + 'a'.toInt).toChar.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val mod = sum % 26\n        val ch = (mod + 97).toChar\n        return ch.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val mod = sum % 26\n        val ch = mod + 97\n        ch.toChar.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val res = sum % 26\n        val c = (res + 97).toChar\n        return c.toString",
    "        val str = strr.toLowerCase\n        val sum = str.map(x => x.toInt).sum\n        val mod = sum % 26\n        val res = mod + 97\n        val ch = res.toChar\n        return ch.toString",
    "        var str = strr.toLowerCase()\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        var ch = (sum % 26 + 'a').toChar\n        return ch.toString",
    "        var str = strr.toLowerCase\n        var sum = 0\n        for (i <- 0 until str.length) {\n            sum += str(i) - 'a'\n        }\n        return ((sum % 26) + 'a').toChar.toString"
  ]
}
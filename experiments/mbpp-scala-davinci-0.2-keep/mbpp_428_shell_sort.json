{
  "name": "mbpp_428_shell_sort",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort the given array by using shell sort.\n    def shellSort(my_list : List[Long]) : List[Long] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(shellSort((List[Long](12l.toLong, 23l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 2l.toLong, 12l.toLong, 81l.toLong, 56l.toLong, 95l.toLong))).equals((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 12l.toLong, 12l.toLong, 23l.toLong, 56l.toLong, 81l.toLong, 95l.toLong))));\n    assert(shellSort((List[Long](24l.toLong, 22l.toLong, 39l.toLong, 34l.toLong, 87l.toLong, 73l.toLong, 68l.toLong))).equals((List[Long](22l.toLong, 24l.toLong, 34l.toLong, 39l.toLong, 68l.toLong, 73l.toLong, 87l.toLong))));\n    assert(shellSort((List[Long](32l.toLong, 30l.toLong, 16l.toLong, 96l.toLong, 82l.toLong, 83l.toLong, 74l.toLong))).equals((List[Long](16l.toLong, 30l.toLong, 32l.toLong, 74l.toLong, 82l.toLong, 83l.toLong, 96l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list = list.updated(j, list(j - gap))\n                    j = j - gap\n                }\n                list = list.updated(j, temp)\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        val n = list.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until n) {\n                var j = i\n                while (j >= h && list(j) < list(j - h)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - h))\n                    list = list.updated(j - h, temp)\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        def shellSort(my_list : List[Long], gap : Int) : List[Long] = {\n            if (gap == 0) my_list\n            else {\n                val new_list = my_list.zipWithIndex.filter(x => x._2 % gap == 0).map(_._1)\n                val sorted_list = insertionSort(new_list)\n                val result = my_list.zipWithIndex.map(x => if (x._2 % gap == 0) sorted_list(x._2 / gap) else x._1)\n                shellSort(result, gap / 2)\n            }\n        }\n        def insertionSort(my_list : List[Long]) : List[Long] = {\n            def insertionSort(my_list : List[Long], result : List[Long]) : List[Long] = {\n                if (my_list.isEmpty) result\n                else {\n                    val new_result = result.zipWithIndex.foldLeft(List[Long]()) {\n                        case (list, (x, i)) => if (i == 0) x :: list else if (x > my_list.head) my_list.head :: x :: list else x :: list\n                    }\n                    insertionSort(my_list.tail, new_result)\n                }\n            }\n            insertionSort(my_list, List[Long]())\n        }\n        shellSort(my_list, my_list.length / 2)",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        val n = list.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until n) {\n                var j = i\n                while (j >= h && list(j) < list(j - h)) {\n                    val temp = list(j)\n                    list(j) = list(j - h)\n                    list(j - h) = temp\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        val n = list.length\n        var gap = n / 2\n        while (gap > 0) {\n            for (i <- gap until n) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        val n = my_list.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until n) {\n                var j = i\n                while (j >= h && my_list(j) < my_list(j - h)) {\n                    val temp = my_list(j)\n                    my_list(j) = my_list(j - h)\n                    my_list(j - h) = temp\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        my_list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list = list.updated(j, list(j - gap))\n                    j = j - gap\n                }\n                list = list.updated(j, temp)\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var gap = my_list.length / 2\n        while (gap > 0) {\n            for (i <- gap until my_list.length) {\n                var j = i\n                while (j >= gap && my_list(j - gap) > my_list(j)) {\n                    val temp = my_list(j)\n                    my_list(j) = my_list(j - gap)\n                    my_list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return my_list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        def sort(my_list : List[Long], gap : Int) : List[Long] = {\n            if (gap == 0) my_list\n            else {\n                val sorted_list = my_list.grouped(gap).toList.map(x => x.sorted).flatten\n                sort(sorted_list, gap / 2)\n            }\n        }\n        sort(my_list, my_list.length / 2)",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n                i += 1\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var a = my_list\n        val n = a.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            var i = h\n            while (i < n) {\n                var j = i\n                while (j >= h && a(j) < a(j - h)) {\n                    val temp = a(j)\n                    a(j) = a(j - h)\n                    a(j - h) = temp\n                    j -= h\n                }\n                i += 1\n            }\n            h /= 3\n        }\n        a.toList",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        val n = my_list.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until n) {\n                var j = i\n                while (j >= h && my_list(j) < my_list(j - h)) {\n                    val temp = my_list(j)\n                    my_list(j) = my_list(j - h)\n                    my_list(j - h) = temp\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        my_list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length/2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j) < list(j - gap)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n                i += 1\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        val n = list.length\n        var gap = n / 2\n        while (gap > 0) {\n            for (i <- gap until n) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            var i = gap\n            while (i < list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    var temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var h = 1\n        while (h < list.length / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until list.length) {\n                var j = i\n                while (j >= h && list(j) < list(j - h)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - h))\n                    list = list.updated(j - h, temp)\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list",
    "        val n = my_list.length\n        var h = 1\n        while (h < n / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until n) {\n                var j = i\n                while (j >= h && my_list(j) < my_list(j - h)) {\n                    val temp = my_list(j)\n                    my_list(j) = my_list(j - h)\n                    my_list(j - h) = temp\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        my_list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while(gap > 0) {\n            var i = gap\n            while(i < list.length) {\n                var j = i\n                while(j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n                i = i + 1\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        return list"
  ]
}
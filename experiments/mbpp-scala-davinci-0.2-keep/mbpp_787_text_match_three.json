{
  "name": "mbpp_787_text_match_three",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val regex = \"a{1}b{3}\".r\n        regex.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length > 3 => x.substring(0, 4) == \"abbb\"\n            case _ => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length() < 4 => false\n            case x if x.length() == 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case x if x.length() > 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length >= 4 => x.substring(0, 4) == \"abbb\"\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length == 4 && x.startsWith(\"a\") && x.endsWith(\"bbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length() >= 4 && s.substring(0, 1) == \"a\" && s.substring(1, 4) == \"bbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a*b{3}\")",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case x if x.length > 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }",
    "        val pattern = \"a(b)\\\\1\\\\1\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a\\\\w{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"\"\"ab{3}\"\"\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x.startsWith(\"a\") && x.endsWith(\"bbb\")\n            case x if x.length > 4 => x.startsWith(\"a\") && x.substring(1, 4) == \"bbb\"\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"\"\"ab{3}\"\"\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length >= 4 => x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b'\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }",
    "        val pattern = \"a\" + \"b\" * 3\n        text.matches(pattern)",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        var result = false\n        if (text.length >= 4) {\n            if (text.substring(0, 4) == \"abbb\") {\n                result = true\n            }\n        }\n        result",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a\\\\w\\\\w\\\\w\".r\n        (pattern findFirstIn text).isDefined",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a+bbb\")",
    "        text.matches(\"a+b+b+b+\")",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length() > 4 => false\n            case x if x.length() < 4 => false\n            case x if x.charAt(0) != 'a' => false\n            case x if x.charAt(1) != 'b' => false\n            case x if x.charAt(2) != 'b' => false\n            case x if x.charAt(3) != 'b' => false\n            case _ => true\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        (pattern findFirstIn text).isDefined",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a+bbb\")",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length > 3 && s.startsWith(\"a\") && s.endsWith(\"bbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a+b+b+b+\")",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(b{3})\".r\n        pattern.findFirstIn(text) match {\n            case Some(s) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length == 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length > 3 => x.substring(0, 4) == \"abbb\"\n            case _ => false\n        }",
    "        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a+bbb\")",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length() < 4 => false\n            case x if x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text.matches(\"a+b{3}\")",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        (pattern findFirstIn text).isDefined",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.length >= 4 && s.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.contains(\"abbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\".*a(bbb).*\")",
    "        val pattern = \"\"\"ab{3}\"\"\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        (pattern findFirstIn text).isDefined",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text.matches(\"a+b+b+b+\")",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length() == 4 && x.charAt(0) == 'a' && x.charAt(1) == 'b' && x.charAt(2) == 'b' && x.charAt(3) == 'b' => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.matches(\"a{1}b{3}\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.contains(\"a\") && s.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.contains(\"abbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length == 0 => false\n            case x if x.length == 1 => false\n            case x if x.length == 2 => false\n            case x if x.length == 3 => false\n            case x if x.length == 4 => false\n            case x if x.length == 5 => false\n            case x if x.length == 6 => false\n            case x if x.length == 7 => false\n            case x if x.length == 8 => false\n            case x if x.length == 9 => false\n            case x if x.length == 10 => false\n            case x if x.length == 11 => false\n            case x if x.length == 12 => false\n            case x if x.length == 13 => false\n            case x if x.length == 14 => false\n            case x if x.length == 15 => false\n            case x if x.length == 16 => false\n            case x if x.length == 17 => false\n            case x if x.length == 18 => false\n            case x if x.length == 19 => false\n            case x if x.length == 20 => false\n            case x if x.length == 21 => false\n            case x if x.length == 22 => false\n            case x if x.length == 23 => false\n            case x if x.length == 24 => false\n            case x if x.length == 25 => false\n            case x if x.length == 26 => false\n            case x if x.length == 27 => false\n            case x if x.length == 28 => false\n            case x if x.length == 29 => false\n            case x if x.length == 30 => false\n            case x if x.length == 31 => false\n            case x if x.length == 32 => false\n            case x if x.length == 33 => false\n            case x if x.length == 34 => false\n            case x if x.length == 35 => false\n            case x if x.length == 36 => false\n            case x if x.length == 37 => false\n            case x if x.length == 38 => false\n            case x if x.length == 39 => false\n            case x if x.length == 40 => false\n            case x if x.length == 41 => false\n            case",
    "        val pattern = \"\"\"ab{3}\"\"\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a[b]{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case s if s.matches(\"a{1}b{3}\") => true\n            case _ => false\n        }"
  ]
}
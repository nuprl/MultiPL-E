{
  "name": "mbpp_56_checks",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to check if a given number is one less than twice its reverse.\n    def checks(n : Long) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length == r.length && s.length == t.length) {\n            val d = s.length / 2\n            if (s.substring(0, d) == r.substring(0, d) && s.substring(0, d) == t.substring(0, d)) {\n                val a = s.substring(d).toLong\n                val b = r.substring(d).toLong\n                val c = t.substring(d).toLong\n                if (a == 2 * b && a == 2 * c) return true\n            }\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = (n - r.toLong).abs\n        d == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val rr = \"0\" * d + r\n            return rr == m\n        }\n        else if (d < 0) {\n            val mm = \"0\" * (-d) + m\n            return mm == r\n        }\n        else return r == m",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        if (r.length == s.length) {\n            val m = (s.toLong - r.toLong).abs\n            if (m == 1) return true\n            else return false\n        }\n        else {\n            val m = (s.toLong - r.toLong).abs\n            if (m == 10) return true\n            else return false\n        }",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m / 2 == n",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length && s.length == u.length) {\n            val a = s.toLong\n            val b = r.toLong\n            val c = u.toLong\n            if (a == 2 * b && a == 2 * c) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val t = \"0\" * d + r\n            return m == t\n        }\n        else if (d < 0) {\n            val t = r.substring(-d)\n            return m == t\n        }\n        else return m == r",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == n * 2 + 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length && s.length == u.length) {\n            val a = s.toLong\n            val b = r.toLong\n            val c = u.toLong\n            if (a == 2 * b && a == 2 * c) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (r.toLong + 1) / 2\n        n == m",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == 2 * n",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rl = r.substring(0, m)\n        val rr = r.substring(m)\n        val lr = s.substring(m)\n        if (l == rl && rr == lr) {\n            val nn = n - 1\n            val ss = nn.toString\n            val rr = ss.reverse\n            val mm = (ss.length - 1) / 2\n            val ll = ss.substring(0, mm)\n            val rrl = rr.substring(0, mm)\n            val rrr = rr.substring(mm)\n            val lrr = ss.substring(mm)\n            if (ll == rrl && rrr == lrr) {\n                return true\n            }\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val rr = \"0\" * d + r\n            m == rr\n        } else {\n            val mm = \"0\" * (-d) + m\n            r == mm\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val (a, b) = s.splitAt(m)\n        val (c, d) = r.splitAt(m)\n        if (a == c && b == d) {\n            val x = n - 1\n            val y = x / 2\n            val z = y.toString.reverse.toLong\n            y == z\n        } else {\n            false\n        }",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        return s == u",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.length - r.length\n        val rr = if (d == 0) r else \"0\" * d + r\n        n + 1 == 2 * rr.toLong",
    "        val n_str = n.toString\n        val n_rev_str = n_str.reverse\n        val n_rev = n_rev_str.toLong\n        if (n_rev == 0) return false\n        val n_rev_double = n_rev * 2\n        if (n_rev_double - 1 == n) return true\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val mr = m.toString.reverse\n        if (r == mr) true else false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val a = s.substring(0, m)\n        val b = s.substring(m + 1)\n        val c = r.substring(0, m)\n        val d = r.substring(m + 1)\n        if (a == c && b == d) {\n            val x = s.substring(m, m + 1).toLong\n            val y = r.substring(m, m + 1).toLong\n            if (x == y) return true\n        }\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return (n == 2 * r - 1)",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m / 2 == n",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - r.toLong).abs\n        if (m == 1) true\n        else false",
    "        val r = n.toString.reverse.toLong\n        if (n == 2 * r - 1) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val rr = \"0\" * d + r\n            return m == rr\n        } else if (d < 0) {\n            val mm = \"0\" * (-d) + m\n            return mm == r\n        } else {\n            return m == r\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        if (d == 1) true else false",
    "        val rev = n.toString.reverse.toLong\n        n == 2 * rev - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.toLong - r.toLong\n        if (d == 1) return true\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.toLong - r.toLong).abs\n        if (m == 1) return true\n        else return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return (n + 1 == 2 * r)",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rr = r.substring(0, m)\n        val lr = r.substring(m)\n        val rl = s.substring(m)\n        val lr2 = (l + rl).toLong\n        val rr2 = (rr + l).toLong\n        lr2 == 2 * rr2 - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length == r.length && s.length == t.length) {\n            val a = s.toLong\n            val b = r.toLong\n            val c = t.toLong\n            if (a == 2 * b && a == 2 * c) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d >= 0) {\n            val t = m.substring(0, d) + r\n            val u = t.toLong\n            u * 2 == n\n        } else false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - r.toLong).abs\n        if (m == 1) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.toLong - r.toLong).abs\n        if (m == 1) true else false",
    "        val s = n.toString\n        val r = s.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val mr = m.toString.reverse\n        if (r == mr) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        if (d == 1) return true\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        val d = (2 * t.toLong).toString\n        return (s == d)",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        return d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val r2 = m.reverse\n        if (s.length == r.length && s.length == r2.length) {\n            val a = s.toLong\n            val b = r.toLong\n            val c = r2.toLong\n            if (a == 2 * b && a == 2 * c) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val z = \"0\" * d\n            val rr = z + r\n            return m == rr\n        } else if (d < 0) {\n            val z = \"0\" * (-d)\n            val mm = z + m\n            return mm == r\n        } else {\n            return m == r\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        (n + 1).toString == r + r",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val rs = m.toString\n        val rr = rs.reverse\n        r == rr",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length != r.length) return false\n        if (s.length != t.length) return false\n        if (s.length == 1) return false\n        if (s.length == 2) return false\n        if (s.length == 3) return false\n        if (s.length == 4) return false\n        if (s.length == 5) return false\n        if (s.length == 6) return false\n        if (s.length == 7) return false\n        if (s.length == 8) return false\n        if (s.length == 9) return false\n        if (s.length == 10) return false\n        if (s.length == 11) return false\n        if (s.length == 12) return false\n        if (s.length == 13) return false\n        if (s.length == 14) return false\n        if (s.length == 15) return false\n        if (s.length == 16) return false\n        if (s.length == 17) return false\n        if (s.length == 18) return false\n        if (s.length == 19) return false\n        if (s.length == 20) return false\n        if (s.length == 21) return false\n        if (s.length == 22) return false\n        if (s.length == 23) return false\n        if (s.length == 24) return false\n        if (s.length == 25) return false\n        if (s.length == 26) return false\n        if (s.length == 27) return false\n        if (s.length == 28) return false\n        if (s.length == 29) return false\n        if (s.length == 30) return false\n        if (s.length == 31) return false\n        if (s.length == 32) return false\n        if (s.length == 33) return false\n        if (s.length == 34) return false\n        if (s.length == 35) return false\n        if (s.length == 36) return false\n        if (s.length == 37) return false\n        if",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length == r.length && s.length == m.length && s.length == t.length) {\n            if (s.length % 2 == 0) {\n                val (a, b) = s.splitAt(s.length / 2)\n                val (c, d) = r.splitAt(r.length / 2)\n                val (e, f) = m.splitAt(m.length / 2)\n                val (g, h) = t.splitAt(t.length / 2)\n                if (a == c && b == d && e == g && f == h) {\n                    val x = a.toLong\n                    val y = b.toLong\n                    val z = e.toLong\n                    val w = f.toLong\n                    if (x + y == 2 * z + w) return true\n                }\n            } else {\n                val (a, b) = s.splitAt(s.length / 2)\n                val (c, d) = r.splitAt(r.length / 2)\n                val (e, f) = m.splitAt(m.length / 2)\n                val (g, h) = t.splitAt(t.length / 2)\n                if (a == c && b == d && e == g && f == h) {\n                    val x = a.toLong\n                    val y = b.toLong\n                    val z = e.toLong\n                    val w = f.toLong\n                    if (x + y == 2 * z + w) return true\n                }\n            }\n        }\n        false",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length && s.length == t.length && s.length == u.length) {\n            val a = s.toLong\n            val b = r.toLong\n            val c = t.toLong\n            val d = u.toLong\n            if (a == b * 2 && c == d * 2) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.toLong - r.toLong).abs\n        return m == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == 2 * n",
    "        val s = n.toString\n        val r = s.reverse\n        val d = 2 * r.toLong\n        d - 1 == n",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val (a, b) = s.splitAt(m)\n        val (c, d) = r.splitAt(m)\n        if (a == c && b == d) {\n            val x = a.toLong\n            val y = b.toLong\n            val z = x * 2 + 1\n            if (z == y) true else false\n        } else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val rr = \"0\" * d + r\n            m == rr\n        } else {\n            val mm = \"0\" * (-d) + m\n            r == mm\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        val d = m / 2\n        d == n",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == 2 * n",
    "        val s = n.toString\n        val r = s.reverse\n        val d = (n - r.toLong).abs\n        return d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d >= 0) {\n            val t = m.substring(0, d) + r\n            val x = t.toLong\n            return x * 2 == n\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val x = (n - r.toLong).abs\n        x == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == n * 2 + 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.length - r.length\n        val r2 = if (d > 0) \"0\" * d + r else r\n        n + 1 == 2 * r2.toLong",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        val d = (n - 1) / 2\n        val e = d.toString\n        val f = e.reverse\n        if (s == r) {\n            if (t == f) {\n                return true\n            }\n        }\n        return false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m / 2 == n",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val a = s.substring(0, m + 1)\n        val b = r.substring(0, m + 1)\n        val c = s.substring(m + 1)\n        val d = r.substring(m + 1)\n        if (s.length % 2 == 0) {\n            if (a == b && c == d) {\n                val x = a.toLong\n                val y = c.toLong\n                if (x - y == 1) return true\n            }\n        } else {\n            if (a == b && c == d) {\n                val x = a.toLong\n                val y = c.toLong\n                if (x - y == 1) return true\n            }\n            if (a == d && c == b) {\n                val x = a.toLong\n                val y = c.toLong\n                if (x - y == 1) return true\n            }\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rr = r.substring(0, m)\n        val lr = r.substring(m)\n        val rl = s.substring(m)\n        if (l == rr && lr == rl) {\n            val n1 = s.toLong\n            val n2 = r.toLong\n            if (n1 - n2 == 1) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length % 2 == 0) {\n            if (s.substring(0, s.length / 2) == t.substring(0, t.length / 2)) return true\n        } else {\n            if (s.substring(0, s.length / 2) == t.substring(0, t.length / 2) && s.substring(s.length / 2 + 1) == t.substring(t.length / 2 + 1)) return true\n        }\n        false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        if (d == 1) return true\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.toLong - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val mr = m.toString.reverse\n        r == mr",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length != r.length) return false\n        if (s.length != t.length) return false\n        if (s.length == 1) return true\n        if (s.length == 2) return true\n        if (s.length == 3) {\n            if (s(0) == '1') return true\n            if (s(0) == '2') return true\n            if (s(0) == '3') return true\n            return false\n        }\n        if (s(0) == '1') return true\n        if (s(0) == '2') return true\n        if (s(0) == '3') return true\n        if (s(0) == '4') return true\n        if (s(0) == '5') return true\n        if (s(0) == '6') return true\n        if (s(0) == '7') return true\n        if (s(0) == '8') return true\n        if (s(0) == '9') return true\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length) {\n            if (s.length % 2 == 0) {\n                if (s.substring(0, s.length / 2) == u.substring(0, u.length / 2)) {\n                    if (s.substring(s.length / 2) == r.substring(r.length / 2)) {\n                        return true\n                    }\n                }\n            } else {\n                if (s.substring(0, s.length / 2) == u.substring(0, u.length / 2)) {\n                    if (s.substring(s.length / 2 + 1) == r.substring(r.length / 2 + 1)) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - r.toLong).abs\n        if (t == 1) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = (n - r.toLong).abs\n        if (d == 1) return true\n        return false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val mr = m.toString.reverse\n        if (r == mr) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length) {\n            if (s.length % 2 == 0) {\n                if (s.substring(0, s.length / 2) == u.substring(0, u.length / 2)) {\n                    if (s.substring(s.length / 2, s.length) == r.substring(r.length / 2, r.length)) {\n                        return true\n                    }\n                }\n            } else {\n                if (s.substring(0, s.length / 2) == u.substring(0, u.length / 2)) {\n                    if (s.substring(s.length / 2 + 1, s.length) == r.substring(r.length / 2 + 1, r.length)) {\n                        return true\n                    }\n                }\n            }\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - r.toLong).abs\n        if (m == 1) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d == 0) {\n            val t = m.zip(r)\n            t.forall(x => x._1 == x._2)\n        } else {\n            val t = m.substring(d).zip(r)\n            t.forall(x => x._1 == x._2)\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length % 2 == 0) {\n            if (s.substring(0, s.length / 2) == t.substring(0, t.length / 2)) return true\n            else return false\n        }\n        else {\n            if (s.substring(0, s.length / 2) == t.substring(0, t.length / 2)) return true\n            else return false\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m + 1)\n        val rr = r.substring(0, m + 1)\n        val lr = r.substring(m + 1)\n        val rl = s.substring(m + 1)\n        if (l == rr && lr == rl) {\n            val x = l.toLong\n            val y = lr.toLong\n            if (x - y == 1) return true\n        }\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == r * 2 - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        if (s.length == r.length && s.length == t.length && s.length == u.length) {\n            if (s.length % 2 == 0) {\n                val (a, b) = s.splitAt(s.length / 2)\n                val (c, d) = r.splitAt(r.length / 2)\n                val (e, f) = t.splitAt(t.length / 2)\n                val (g, h) = u.splitAt(u.length / 2)\n                if (a == c && b == d && e == g && f == h) {\n                    val x = a.toLong\n                    val y = b.toLong\n                    val z = e.toLong\n                    val w = f.toLong\n                    if (x + y == 2 * z && z + w == 2 * x) return true\n                }\n            } else {\n                val (a, b) = s.splitAt(s.length / 2)\n                val (c, d) = r.splitAt(r.length / 2)\n                val (e, f) = t.splitAt(t.length / 2)\n                val (g, h) = u.splitAt(u.length / 2)\n                if (a == c && b == d && e == g && f == h) {\n                    val x = a.toLong\n                    val y = b.toLong\n                    val z = e.toLong\n                    val w = f.toLong\n                    if (x + y == 2 * z && z + w == 2 * x) return true\n                }\n            }\n        }\n        false",
    "        val s = n.toString\n        val r = s.reverse\n        (n + 1).toString == r + r",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        val d = m / 2\n        d == n",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m == 2 * n",
    "        val str = n.toString\n        val rev = str.reverse\n        val revNum = rev.toLong\n        val num = n\n        if (num == revNum) return false\n        if (num == revNum * 2 + 1) return true\n        return false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val a = s.substring(0, m + 1)\n        val b = r.substring(0, m + 1)\n        val c = s.substring(m + 1)\n        val d = r.substring(m + 1)\n        val e = a + c\n        val f = b + d\n        val g = (e.toLong - f.toLong).abs == 1\n        val h = (e.toLong - f.toLong) == 1\n        val i = (e.toLong - f.toLong) == -1\n        val j = (e.toLong - f.toLong) == 0\n        val k = (e.toLong - f.toLong) == -2\n        val l = (e.toLong - f.toLong) == 2\n        val m = (e.toLong - f.toLong) == -3\n        val o = (e.toLong - f.toLong) == 3\n        val p = (e.toLong - f.toLong) == -4\n        val q = (e.toLong - f.toLong) == 4\n        val r = (e.toLong - f.toLong) == -5\n        val s = (e.toLong - f.toLong) == 5\n        val t = (e.toLong - f.toLong) == -6\n        val u = (e.toLong - f.toLong) == 6\n        val v = (e.toLong - f.toLong) == -7\n        val w = (e.toLong - f.toLong) == 7\n        val x = (e.toLong - f.toLong) == -8\n        val y = (e.toLong - f.toLong) == 8\n        val z = (e.toLong - f.toLong) == -9\n        val aa = (e.toLong - f.toLong) == 9\n        val ab = (e.toLong - f.toLong) == -10\n        val ac = (e.toLong - f.toLong",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (r == t) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rr = r.substring(0, m)\n        val ll = l.reverse\n        val rrr = rr.reverse\n        val lr = l + rr\n        val rl = rr + l\n        val lrr = ll + rrr\n        val rll = rrr + ll\n        val lrv = lr.toLong\n        val rlv = rl.toLong\n        val lrrv = lrr.toLong\n        val rllv = rll.toLong\n        val lr2 = lrv * 2\n        val rl2 = rlv * 2\n        val lrr2 = lrrv * 2\n        val rll2 = rllv * 2\n        return (lr2 == n + 1 || rl2 == n + 1 || lrr2 == n + 1 || rll2 == n + 1)",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        val t = if (d == 0) r else (\"0\" * d) + r\n        m == t",
    "        val s = n.toString\n        val r = s.reverse\n        val rn = r.toLong\n        n == 2 * rn - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        if (s.length == r.length) {\n            val m = (s.length + 1) / 2\n            val a = s.substring(0, m)\n            val b = r.substring(0, m)\n            val c = s.substring(m)\n            val d = r.substring(m)\n            if (a == d && b == c) {\n                val x = a.toLong\n                val y = b.toLong\n                val z = x + y + 1\n                val t = 2 * y + 1\n                z == t\n            } else false\n        } else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rr = r.substring(0, m)\n        val lr = r.substring(m)\n        val rl = s.substring(m)\n        val ln = l.toLong\n        val rn = rr.toLong\n        val lrn = lr.toLong\n        val rln = rl.toLong\n        val lr2 = lrn * 2\n        val rl2 = rln * 2\n        lr2 == ln + 1 && rl2 == rn + 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.length - r.length\n        val t = (if (d > 0) \"1\" else \"\") + \"0\" * abs(d) + r\n        n + 1 == 2 * t.toLong",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val x = (n - r.toLong).abs\n        x == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.toLong - r.toLong) == 1\n        val m2 = (s.toLong - r.toLong) == -1\n        m || m2",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val t = s.reverse\n        val m = (s + t).toLong\n        m / 2 == n",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        val rr = if (d > 0) \"0\" * d + r else r\n        m == rr",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        s == t",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val x = s.length - 1\n        val y = s.length\n        val z = s.length + 1\n        if (r.length == x) {\n            if (n == 2 * r.toLong - 1) return true\n            else return false\n        }\n        else if (r.length == y) {\n            if (n == 2 * r.toLong) return true\n            else return false\n        }\n        else if (r.length == z) {\n            if (n == 2 * r.toLong + 1) return true\n            else return false\n        }\n        else return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        val rr = if (d == 0) r else \"0\" * d + r\n        m == rr",
    "        val str = n.toString\n        val rev = str.reverse\n        val revNum = rev.toLong\n        val num = n.toLong\n        if (num == revNum) return false\n        if (num == 2 * revNum + 1) return true\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val a = s.substring(0, m)\n        val b = s.substring(m + 1)\n        val c = r.substring(0, m)\n        val d = r.substring(m + 1)\n        if (a == c && b == d) {\n            val x = s.substring(m, m + 1).toInt\n            val y = r.substring(m, m + 1).toInt\n            if (x == y) return true\n        }\n        return false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val x = (n - r.toLong).abs\n        if (x == 1) return true\n        else return false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s.length == r.length && s.length == m.length && s.length == t.length) {\n            val d = s.length / 2\n            val a = s.substring(0, d)\n            val b = s.substring(d)\n            val c = r.substring(0, d)\n            val e = r.substring(d)\n            val f = m.substring(0, d)\n            val g = m.substring(d)\n            val h = t.substring(0, d)\n            val i = t.substring(d)\n            if (a == e && b == c && f == i && g == h) return true\n        }\n        false",
    "        val r = n.toString.reverse.toLong\n        if (n == 2 * r - 1) true\n        else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (r.toLong + 1) / 2\n        return n == m",
    "        val x = n.toString.reverse.toLong\n        return n == 2 * x - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val d = m.length - r.length\n        if (d > 0) {\n            val rr = \"0\" * d + r\n            m == rr\n        } else {\n            val mm = \"0\" * (-d) + m\n            r == mm\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val x = (n - r.toLong).abs\n        return x == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val a = s.substring(0, m + 1)\n        val b = r.substring(0, m + 1)\n        val c = s.substring(m + 1)\n        val d = r.substring(m + 1)\n        if (a == b && c == d) {\n            val x = a.toLong\n            val y = c.toLong\n            if (x - 1 == 2 * y) true\n            else false\n        }\n        else false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        val d = m.toLong\n        val e = t.toLong\n        if (d == 2 * e) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - r.toLong).abs\n        if (m == 1) true else false",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val u = t.reverse\n        return s == u",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s + r).toLong\n        m / 2 == n",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.length - r.length\n        val r2 = if (d > 0) \"0\" * d + r else r\n        val n2 = 2 * r2.toLong\n        n2 - 1 == n",
    "        val s = n.toString\n        val r = s.reverse\n        val x = (n - r.toLong).abs\n        x == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = s.length - r.length\n        val m = (if (d > 0) r + \"0\" * d else s + \"0\" * (-d)).toLong\n        n == 2 * m - 1",
    "        val r = n.toString.reverse.toLong\n        return (n + 1) == 2 * r",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - 1).toString\n        val rt = t.reverse\n        if (r == rt) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - r.toLong).abs\n        if (m == 1) true else false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1) / 2\n        val s2 = m.toString\n        val r2 = s2.reverse\n        if (s2 == r2) true else false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (s.length - 1) / 2\n        val l = s.substring(0, m)\n        val rr = r.substring(0, m)\n        val ll = s.substring(m + 1)\n        val rrr = r.substring(m + 1)\n        val lr = l + rr\n        val rl = rrr + ll\n        val lr2 = (lr.toLong * 2).toString\n        lr2 == rl",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        val d = (s.length - t.length)\n        val x = if (d > 0) \"0\" * d else \"\"\n        val y = if (d < 0) \"0\" * (-d) else \"\"\n        val z = x + t + y\n        val u = z.toLong\n        val v = 2 * u\n        v == n",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        if (d == 1) true\n        else false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        if (d == 1) return true\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val mr = m.reverse\n        if (s.length == mr.length) {\n            val d = s.length / 2\n            val s1 = s.substring(0, d)\n            val s2 = s.substring(d)\n            val mr1 = mr.substring(0, d)\n            val mr2 = mr.substring(d)\n            if (s1 == mr2 && s2 == mr1) true\n            else false\n        }\n        else false",
    "        val r = n.toString.reverse.toLong\n        return n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val n2 = 2 * n\n        val s2 = n2.toString\n        val r2 = s2.reverse\n        s2 == r2 + \"1\"",
    "        val r = n.toString.reverse.toLong\n        return (n + 1) == 2 * r",
    "        val s = n.toString\n        val r = s.reverse\n        if (s.length == r.length) {\n            val n1 = s.toLong\n            val n2 = r.toLong\n            if (n1 == 2 * n2 - 1) return true\n        }\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val s = n.toString\n        val r = s.reverse\n        val x = s.length - 1\n        val y = s.length - 2\n        val a = s.substring(0, x)\n        val b = s.substring(0, y)\n        val c = r.substring(0, x)\n        val d = r.substring(0, y)\n        if (s.length % 2 == 0) {\n            if (a == c && (n + 1) / 2 == r.toLong) true\n            else false\n        }\n        else {\n            if (b == d && (n + 1) / 2 == r.toLong) true\n            else false\n        }",
    "        val s = n.toString\n        val r = s.reverse\n        val m = (n - 1).toString\n        val t = m.reverse\n        if (s == t) return false\n        if (r == t) return true\n        return false",
    "        val s = n.toString\n        val r = s.reverse\n        val t = (n - r.toLong).abs\n        t == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1",
    "        val s = n.toString\n        val r = s.reverse\n        val d = n - r.toLong\n        d == 1",
    "        val r = n.toString.reverse.toLong\n        n == 2*r - 1",
    "        val r = n.toString.reverse.toLong\n        n == 2 * r - 1"
  ]
}
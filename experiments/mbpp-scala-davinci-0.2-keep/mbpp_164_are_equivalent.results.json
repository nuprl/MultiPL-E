{
  "name": "mbpp_164_are_equivalent",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = (1L to sqrt(num1).toLong).filter(num1 % _ == 0).flatMap(x => List(x, num1 / x))\n        val divisors2 = (1L to sqrt(num2).toLong).filter(num2 % _ == 0).flatMap(x => List(x, num2 / x))\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp0wc0gat4.scala:13)\n\tat Problem.main(tmp0wc0gat4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        if (divisors1.sum == divisors2.sum) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqp26hld.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqp26hld.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = sumDivisors(num1)\n        val sum2 = sumDivisors(num2)\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:6:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum1\u001b[0m = sumDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum2\u001b[0m = sumDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.reduceLeft(_ + _)\n        val sum2 = divisors2.reduceLeft(_ + _)\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x7ic67f.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x7ic67f.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def divisors(num : Long) : List[Long] = {\n            def divisors(num : Long, divisor : Long, acc : List[Long]) : List[Long] = {\n                if (divisor > num / 2) acc\n                else if (num % divisor == 0) divisors(num, divisor + 1, divisor :: acc)\n                else divisors(num, divisor + 1, acc)\n            }\n            divisors(num, 1, Nil)\n        }\n        divisors(num1).sum == divisors(num2).sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = sumDivisors(num1)\n        val sum2 = sumDivisors(num2)\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:6:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum1\u001b[0m = sumDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum2\u001b[0m = sumDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to sqrt(num1).toLong).filter(num1 % _ == 0).map(x => if (x * x == num1) x else x + num1 / x).sum\n        val sum2 = (1L to sqrt(num2).toLong).filter(num2 % _ == 0).map(x => if (x * x == num2) x else x + num2 / x).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpvdtalvz8.scala:13)\n\tat Problem.main(tmpvdtalvz8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = sumDivisors(num1)\n        val sum2 = sumDivisors(num2)\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuri0kl8.scala:6:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum1\u001b[0m = sumDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuri0kl8.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum2\u001b[0m = sumDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        if (divisors1.size == divisors2.size) {\n            val sum1 = divisors1.sum\n            val sum2 = divisors2.sum\n            return sum1 == sum2\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5unzt3ex.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5unzt3ex.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpl3uozxwz.scala:13)\n\tat Problem.main(tmpl3uozxwz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        return divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp74mjez_e.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp74mjez_e.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def sumOfDivisors(num : Long) : Long = {\n            val sqrt = sqrt(num).toLong\n            var sum = 1L\n            for (i <- 2L to sqrt) {\n                if (num % i == 0) {\n                    sum += i\n                    if (i != num / i) sum += num / i\n                }\n            }\n            sum\n        }\n        sumOfDivisors(num1) == sumOfDivisors(num2)\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpeudzkaq5.scala:7:23 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(num).toLong\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpl3uozxwz.scala:13)\n\tat Problem.main(tmpl3uozxwz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.foldLeft(0L)(_ + _)\n        val sum2 = divisors2.foldLeft(0L)(_ + _)\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp88f4phvc.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp88f4phvc.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        if (divisors1.sum == divisors2.sum) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqp26hld.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqp26hld.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def sumDivisors(num : Long) : Long = {\n            val sqrt = sqrt(num).toLong\n            var sum = 1L\n            for (i <- 2L to sqrt) {\n                if (num % i == 0) {\n                    sum += i\n                    if (i != num / i) sum += num / i\n                }\n            }\n            sum\n        }\n        sumDivisors(num1) == sumDivisors(num2)\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpriguiv5c.scala:7:23 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(num).toLong\n\u001b[31m\u001b[31m  |\u001b[0m                       ^\u001b[0m\n\u001b[31m  |\u001b[0m                       Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = sumDivisors(num1)\n        val sum2 = sumDivisors(num2)\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:6:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum1\u001b[0m = sumDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpal5cdlk8.scala:7:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msum2\u001b[0m = sumDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   Not found: sumDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def sumOfDivisors(num : Long) : Long = {\n            var sum = 1L\n            for (i <- 2 to sqrt(num).toInt) {\n                if (num % i == 0) {\n                    sum += i\n                    if (i != num / i) sum += num / i\n                }\n            }\n            sum\n        }\n        sumOfDivisors(num1) == sumOfDivisors(num2)\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to (num1 / 2)).filter(num1 % _ == 0).sum\n        val sum2 = (1L to (num2 / 2)).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9g07hbei.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def sumDivisors(num : Long) : Long = {\n            var sum = 1L\n            for (i <- 2L to sqrt(num).toLong) {\n                if (num % i == 0) {\n                    sum += i\n                    if (i != num / i) sum += num / i\n                }\n            }\n            sum\n        }\n        sumDivisors(num1) == sumDivisors(num2)\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        def sumDivisors(num : Long) : Long = {\n            var sum = 0L\n            for (i <- 1 to sqrt(num).toInt) {\n                if (num % i == 0) {\n                    if (i == sqrt(num).toInt) sum += i\n                    else sum += i + num / i\n                }\n            }\n            sum\n        }\n        sumDivisors(num1) == sumDivisors(num2)\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpusb14u6l.scala:21)\n\tat Problem.main(tmpusb14u6l.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        return sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7404o0az.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = (1L to sqrt(num1).toLong).filter(num1 % _ == 0)\n        val divisors2 = (1L to sqrt(num2).toLong).filter(num2 % _ == 0)\n        val sum1 = divisors1.sum + divisors1.map(num1 / _).sum - num1\n        val sum2 = divisors2.sum + divisors2.map(num2 / _).sum - num2\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuxv26n_v.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val sum1 = (1L to num1).filter(num1 % _ == 0).sum\n        val sum2 = (1L to num2).filter(num2 % _ == 0).sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509801,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp028hluzl.scala:13)\n\tat Problem.main(tmp028hluzl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = getDivisors(num1)\n        val divisors2 = getDivisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = getDivisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps_m78f4_.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = getDivisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: getDivisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = (1L to sqrt(num1).toLong).filter(num1 % _ == 0)\n        val divisors2 = (1L to sqrt(num2).toLong).filter(num2 % _ == 0)\n        val divisors1Sum = divisors1.sum + divisors1.map(num1 / _).sum\n        val divisors2Sum = divisors2.sum + divisors2.map(num2 / _).sum\n        divisors1Sum == divisors2Sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpyhq45zah.scala:15)\n\tat Problem.main(tmpyhq45zah.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6d4nrfk2.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = divisors(num1)\n        val divisors2 = divisors(num2)\n        val sum1 = divisors1.sum\n        val sum2 = divisors2.sum\n        sum1 == sum2\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:6:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors1\u001b[0m = divisors(num1)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyuls0lk.scala:7:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdivisors2\u001b[0m = divisors(num2)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: divisors\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to determine if the sum of the divisors of two integers are the same.\n    def areEquivalent(num1 : Long, num2 : Long) : Boolean = {\n        val divisors1 = (1L to num1).filter(num1 % _ == 0)\n        val divisors2 = (1L to num2).filter(num2 % _ == 0)\n        divisors1.sum == divisors2.sum\n    }\n    def main(args: Array[String]) = {\n    assert(areEquivalent((36l), (57l)) == (false));\n    assert(areEquivalent((2l), (4l)) == (false));\n    assert(areEquivalent((23l), (47l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123984,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp19yfyg_y.scala:13)\n\tat Problem.main(tmp19yfyg_y.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
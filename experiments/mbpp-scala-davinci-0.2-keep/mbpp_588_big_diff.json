{
  "name": "mbpp_588_big_diff",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the difference between largest and smallest value in a given list.\n    def bigDiff(nums : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(bigDiff((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))) == (3l));\n    assert(bigDiff((List[Long](4l.toLong, 5l.toLong, 12l.toLong))) == (8l));\n    assert(bigDiff((List[Long](9l.toLong, 2l.toLong, 3l.toLong))) == (7l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        nums.max - nums.min",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        var min = Long.MaxValue\n        var max = Long.MinValue\n        for (i <- nums) {\n            if (i < min) min = i\n            if (i > max) max = i\n        }\n        return max - min",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) - sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        var min = nums(0)\n        var max = nums(0)\n        for (i <- 1 until nums.length) {\n            if (nums(i) < min) min = nums(i)\n            if (nums(i) > max) max = nums(i)\n        }\n        return max - min",
    "        return nums.max - nums.min",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        var max = nums(0)\n        var min = nums(0)\n        for (i <- 1 until nums.length) {\n            if (nums(i) > max) max = nums(i)\n            if (nums(i) < min) min = nums(i)\n        }\n        max - min",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) - sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head",
    "        var max = nums(0)\n        var min = nums(0)\n        for (i <- 1 to nums.length - 1) {\n            if (nums(i) > max) max = nums(i)\n            if (nums(i) < min) min = nums(i)\n        }\n        return max - min",
    "        val sorted = nums.sorted\n        sorted.last - sorted.head"
  ]
}
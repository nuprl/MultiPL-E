{
  "name": "mbpp_420_cube_Sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpw6bbrpf4.scala:13)\n\tat Problem.main(tmpw6bbrpf4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val sum = (1 to n.toInt).map(x => pow(x * 2, 3)).sum\n        return sum.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2L to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val evens = (1 to n.toInt).map(x => 2 * x).toList\n        evens.map(x => x * x * x).sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        (1L to n).map(x => x * 2).map(x => x * x * x).sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpp4qazrig.scala:13)\n\tat Problem.main(tmpp4qazrig.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val sum = (1 to n.toInt).map(x => pow(x, 3).toLong).sum\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx3hmvptz.scala:10)\n\tat Problem.main(tmpx3hmvptz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i - 1, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpzou3hzn5.scala:13)\n\tat Problem.main(tmpzou3hzn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val sum = (1 to n.toInt).map(x => pow(x, 3).toLong).sum\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3755axeb.scala:10)\n\tat Problem.main(tmp3755axeb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_qjak4pb.scala:13)\n\tat Problem.main(tmp_qjak4pb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) sum += pow(i * 2, 3).toLong\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpw6bbrpf4.scala:13)\n\tat Problem.main(tmpw6bbrpf4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val evens = (2 to n.toInt by 2).toList\n        evens.map(x => x * x * x).sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpvri809wg.scala:10)\n\tat Problem.main(tmpvri809wg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123765,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxfszx1_h.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpp4qazrig.scala:13)\n\tat Problem.main(tmpp4qazrig.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += (2 * i - 1) * (2 * i - 1) * (2 * i - 1)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmprcvl4o9c.scala:13)\n\tat Problem.main(tmprcvl4o9c.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i * 2, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpp4qazrig.scala:13)\n\tat Problem.main(tmpp4qazrig.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i * 2, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2L to n * 2 by 2) {\n            sum += i * i * i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 2 to n * 2 by 2) {\n            sum += i * i * i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp25p_xiaz.scala:7:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m2\u001b[0m to n * \u001b[31m2\u001b[0m by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    Long\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        val evens = (1 to n.toInt).filter(_ % 2 == 0).map(x => x * x * x).sum\n        return evens\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1666123766,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpkf31by08.scala:10)\n\tat Problem.main(tmpkf31by08.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    def cubeSum(n : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i, 3).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
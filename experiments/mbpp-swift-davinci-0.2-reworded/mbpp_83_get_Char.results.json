{
  "name": "mbpp_83_get_Char",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for ch in str {\n        sum += Int(ch.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp76edyp4h/tmp76edyp4h.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee473a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee4709cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aee4709c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aee4709b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp76edyp4h                        0x000055883de246e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aee47591460 __libc_start_main + 245\n6    tmp76edyp4h                        0x000055883de24329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    return String(Character(UnicodeScalar(sum % 26 + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpcwu5tgn0/tmpcwu5tgn0.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3320cdec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b33209d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b33209d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b33209d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcwu5tgn0                        0x000055abe76c9737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3320eca460 __libc_start_main + 245\n6    tmpcwu5tgn0                        0x000055abe76c9379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i).unicodeScalars.first!.value)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpsstf3qt1.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpsstf3qt1.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpjdkcztnc/tmpjdkcztnc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b582abcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b582a8c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b582a8c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b582a8c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjdkcztnc                        0x000055cd3563d747 <unavailable> + 5959\n5    libc.so.6                          0x00002b582adb7460 __libc_start_main + 245\n6    tmpjdkcztnc                        0x000055cd3563d389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    return String(UnicodeScalar(sum % 26 + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpu_dowg3c/tmpu_dowg3c.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4eb987c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4eb67eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4eb67e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4eb67d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpu_dowg3c                        0x000055f07cdc76e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ab4ebb73460 __libc_start_main + 245\n6    tmpu_dowg3c                        0x000055f07cdc7329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpad6jibbv/tmpad6jibbv.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b61a4a7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b61a4776b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b61a4776988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b61a47757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad6jibbv                        0x000055987ed656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b61a4c6b460 __libc_start_main + 245\n6    tmpad6jibbv                        0x000055987ed65329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    var result = \"\"\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    result = String(UnicodeScalar(sum + 97)!)\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp6ddl9k83/tmp6ddl9k83.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b579b780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b579b477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b579b477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b579b4767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ddl9k83                        0x000055a9c0e876e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b579b96c460 __libc_start_main + 245\n6    tmp6ddl9k83                        0x000055a9c0e87329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp2k54jwys.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp2k54jwys.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    var res = \"\"\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    res = String(UnicodeScalar(sum + 97)!)\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmph7zb03vo/tmph7zb03vo.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0c0805ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0c07d51b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0c07d51988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0c07d507b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph7zb03vo                        0x0000563ae9c096e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0c08246460 __libc_start_main + 245\n6    tmph7zb03vo                        0x0000563ae9c09329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpkobz145o/tmpkobz145o.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b24b87a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b24b849cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b24b849c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b24b849b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkobz145o                        0x000055e6c6d3d737 <unavailable> + 5943\n5    libc.so.6                          0x00002b24b8991460 __libc_start_main + 245\n6    tmpkobz145o                        0x000055e6c6d3d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 96)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp7pk_78p0.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp7pk_78p0.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp4gi360fg/tmp4gi360fg.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a6f363c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a6f05ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a6f05a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a6f0597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4gi360fg                        0x0000557345254737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4a6f54f460 __libc_start_main + 245\n6    tmp4gi360fg                        0x0000557345254379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp58ewix57/tmp58ewix57.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b864403dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8643d34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8643d34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8643d337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp58ewix57                        0x000055b1c72526e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b8644229460 __libc_start_main + 245\n6    tmp58ewix57                        0x000055b1c7252329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        sum += Int(char.asciiValue!)\n        i += 1\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpvzk30rlu/tmpvzk30rlu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7b6ff3fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7b6fc36b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7b6fc36988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7b6fc357b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvzk30rlu                        0x000055fc1bc8b7e7 <unavailable> + 6119\n5    libc.so.6                          0x00002b7b7012b460 __libc_start_main + 245\n6    tmpvzk30rlu                        0x000055fc1bc8b429 <unavailable> + 5161\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    return String(Character(UnicodeScalar(sum % 26 + 65)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpfjrvokiy.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpfjrvokiy.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    let ch = Character(UnicodeScalar(ans + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsov4zy8c/tmpsov4zy8c.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae96bc13c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae96b90ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae96b90a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae96b9097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsov4zy8c                        0x0000563f573fd737 <unavailable> + 5943\n5    libc.so.6                          0x00002ae96bdff460 __libc_start_main + 245\n6    tmpsov4zy8c                        0x0000563f573fd379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmph74n2_j0/tmph74n2_j0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b592c0cac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b592bdc1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b592bdc1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b592bdc07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph74n2_j0                        0x00005588e9dac737 <unavailable> + 5943\n5    libc.so.6                          0x00002b592c2b6460 __libc_start_main + 245\n6    tmph74n2_j0                        0x00005588e9dac379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpe0qwsl2u.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpe0qwsl2u.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpjdkcztnc/tmpjdkcztnc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b582abcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b582a8c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b582a8c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b582a8c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjdkcztnc                        0x000055cd3563d747 <unavailable> + 5959\n5    libc.so.6                          0x00002b582adb7460 __libc_start_main + 245\n6    tmpjdkcztnc                        0x000055cd3563d389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpq737zacq/tmpq737zacq.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af047e9ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af047b95b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af047b95988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af047b947b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq737zacq                        0x0000562937f89747 <unavailable> + 5959\n5    libc.so.6                          0x00002af04808a460 __libc_start_main + 245\n6    tmpq737zacq                        0x0000562937f89389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpjdkcztnc/tmpjdkcztnc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b582abcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b582a8c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b582a8c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b582a8c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjdkcztnc                        0x000055cd3563d747 <unavailable> + 5959\n5    libc.so.6                          0x00002b582adb7460 __libc_start_main + 245\n6    tmpjdkcztnc                        0x000055cd3563d389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsw8yv0iv/tmpsw8yv0iv.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b3fabdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b3f7b4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b3f7b4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b3f7b37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsw8yv0iv                        0x0000561fe723a737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3b3fca9460 __libc_start_main + 245\n6    tmpsw8yv0iv                        0x0000561fe723a379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpjdkcztnc/tmpjdkcztnc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b582abcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b582a8c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b582a8c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b582a8c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjdkcztnc                        0x000055cd3563d747 <unavailable> + 5959\n5    libc.so.6                          0x00002b582adb7460 __libc_start_main + 245\n6    tmpjdkcztnc                        0x000055cd3563d389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcogas3w2/tmpcogas3w2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cd1429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cd1120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cd1120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cd111f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcogas3w2                        0x000055f5943bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b4cd1615460 __libc_start_main + 245\n6    tmpcogas3w2                        0x000055f5943bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpad6jibbv/tmpad6jibbv.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b61a4a7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b61a4776b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b61a4776988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b61a47757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad6jibbv                        0x000055987ed656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b61a4c6b460 __libc_start_main + 245\n6    tmpad6jibbv                        0x000055987ed65329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7dk2ceni/tmp7dk2ceni.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7651202c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7650ef9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7650ef9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7650ef87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7dk2ceni                        0x0000564487602797 <unavailable> + 6039\n5    libc.so.6                          0x00002b76513ee460 __libc_start_main + 245\n6    tmp7dk2ceni                        0x00005644876023d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpad6jibbv/tmpad6jibbv.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b61a4a7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b61a4776b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b61a4776988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b61a47757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad6jibbv                        0x000055987ed656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b61a4c6b460 __libc_start_main + 245\n6    tmpad6jibbv                        0x000055987ed65329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpbsazw1z2/tmpbsazw1z2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8271335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b827102cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b827102c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b827102b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbsazw1z2                        0x00005566932b6737 <unavailable> + 5943\n5    libc.so.6                          0x00002b8271521460 __libc_start_main + 245\n6    tmpbsazw1z2                        0x00005566932b6379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp08fzdden/tmp08fzdden.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d5faf5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d5f7ecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d5f7ec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d5f7eb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08fzdden                        0x00005649b47476e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1d5fce1460 __libc_start_main + 245\n6    tmp08fzdden                        0x00005649b4747329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.unicodeScalars {\n        sum += Int(i.value)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppat4d9oc/tmppat4d9oc.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1411bd7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b14118ceb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b14118ce988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b14118cd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppat4d9oc                        0x000055734e62d797 <unavailable> + 6039\n5    libc.so.6                          0x00002b1411dc3460 __libc_start_main + 245\n6    tmppat4d9oc                        0x000055734e62d3d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpi6kurbl4/tmpi6kurbl4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4202655c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b420234cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b420234c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b420234b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6kurbl4                        0x0000562c833f1737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4202841460 __libc_start_main + 245\n6    tmpi6kurbl4                        0x0000562c833f1379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp08fzdden/tmp08fzdden.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d5faf5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d5f7ecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d5f7ec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d5f7eb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08fzdden                        0x00005649b47476e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1d5fce1460 __libc_start_main + 245\n6    tmp08fzdden                        0x00005649b4747329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    sum += 97\n    return String(UnicodeScalar(sum)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpgandn81p/tmpgandn81p.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b03c4dfcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b03c4af3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b03c4af3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03c4af27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgandn81p                        0x000055c221db3747 <unavailable> + 5959\n5    libc.so.6                          0x00002b03c4fe8460 __libc_start_main + 245\n6    tmpgandn81p                        0x000055c221db3389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmplnhnjq7s/tmplnhnjq7s.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b4c40ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b4c101b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b4c101988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b4c1007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplnhnjq7s                        0x000055a0fe802737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3b4c5f6460 __libc_start_main + 245\n6    tmplnhnjq7s                        0x000055a0fe802379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpp6f22h9n/tmpp6f22h9n.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b74fddc0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b74fdab7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b74fdab7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b74fdab67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp6f22h9n                        0x000055f3d9ce8797 <unavailable> + 6039\n5    libc.so.6                          0x00002b74fdfac460 __libc_start_main + 245\n6    tmpp6f22h9n                        0x000055f3d9ce83d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp08fzdden/tmp08fzdden.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d5faf5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d5f7ecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d5f7ec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d5f7eb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08fzdden                        0x00005649b47476e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1d5fce1460 __libc_start_main + 245\n6    tmp08fzdden                        0x00005649b4747329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    sum += 65\n    let char = Character(UnicodeScalar(sum)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmp9ouagx7l.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp9ouagx7l.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmplnhnjq7s/tmplnhnjq7s.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b4c40ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b4c101b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b4c101988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b4c1007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplnhnjq7s                        0x000055a0fe802737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3b4c5f6460 __libc_start_main + 245\n6    tmplnhnjq7s                        0x000055a0fe802379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsrph0qdr/tmpsrph0qdr.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac69da88c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac69d77fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac69d77f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac69d77e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsrph0qdr                        0x00005597a77c2737 <unavailable> + 5943\n5    libc.so.6                          0x00002ac69dc74460 __libc_start_main + 245\n6    tmpsrph0qdr                        0x00005597a77c2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return \"\\(char)\"\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp5kgon43u/tmp5kgon43u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2de8573c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2de826ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2de826a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2de82697b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5kgon43u                        0x000055f982f709e7 <unavailable> + 6631\n5    libc.so.6                          0x00002b2de875f460 __libc_start_main + 245\n6    tmp5kgon43u                        0x000055f982f70629 <unavailable> + 5673\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsbradxmi/tmpsbradxmi.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afd997afc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afd994a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afd994a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afd994a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsbradxmi                        0x00005621d878b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002afd9999b460 __libc_start_main + 245\n6    tmpsbradxmi                        0x00005621d878b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoqn7bmet/tmpoqn7bmet.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5cfa70ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5cfa405b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5cfa405988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5cfa4047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoqn7bmet                        0x000055f8b5d6a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5cfa8fa460 __libc_start_main + 245\n6    tmpoqn7bmet                        0x000055f8b5d6a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpllqnc8v2/tmpllqnc8v2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b985f33ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b985f031b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b985f031988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b985f0307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpllqnc8v2                        0x000055ecc8b3f6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b985f526460 __libc_start_main + 245\n6    tmpllqnc8v2                        0x000055ecc8b3f329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpkrqcftjz/tmpkrqcftjz.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3a7405ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3a73d55b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3a73d55988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3a73d547b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkrqcftjz                        0x000055eeb079c6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b3a7424a460 __libc_start_main + 245\n6    tmpkrqcftjz                        0x000055eeb079c329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcogas3w2/tmpcogas3w2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cd1429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cd1120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cd1120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cd111f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcogas3w2                        0x000055f5943bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b4cd1615460 __libc_start_main + 245\n6    tmpcogas3w2                        0x000055f5943bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7d4ws6_c/tmp7d4ws6_c.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2a46c9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2a46993b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2a46993988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2a469927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7d4ws6_c                        0x000055555bdb3737 <unavailable> + 5943\n5    libc.so.6                          0x00002b2a46e88460 __libc_start_main + 245\n6    tmp7d4ws6_c                        0x000055555bdb3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpnn1mlzy3/tmpnn1mlzy3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b685cf1fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b685cc16b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b685cc16988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b685cc157b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnn1mlzy3                        0x0000557519aff6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b685d10b460 __libc_start_main + 245\n6    tmpnn1mlzy3                        0x0000557519aff329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoo3e_301/tmpoo3e_301.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeba8d19c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeba8a10b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeba8a10988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeba8a0f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoo3e_301                        0x0000558e2bc14737 <unavailable> + 5943\n5    libc.so.6                          0x00002aeba8f05460 __libc_start_main + 245\n6    tmpoo3e_301                        0x0000558e2bc14379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpi6kurbl4/tmpi6kurbl4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4202655c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b420234cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b420234c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b420234b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6kurbl4                        0x0000562c833f1737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4202841460 __libc_start_main + 245\n6    tmpi6kurbl4                        0x0000562c833f1379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    return String(UnicodeScalar(sum % 26 + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpu_dowg3c/tmpu_dowg3c.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4eb987c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4eb67eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4eb67e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4eb67d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpu_dowg3c                        0x000055f07cdc76e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ab4ebb73460 __libc_start_main + 245\n6    tmpu_dowg3c                        0x000055f07cdc7329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsbradxmi/tmpsbradxmi.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afd997afc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afd994a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afd994a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afd994a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsbradxmi                        0x00005621d878b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002afd9999b460 __libc_start_main + 245\n6    tmpsbradxmi                        0x00005621d878b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp08fzdden/tmp08fzdden.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d5faf5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d5f7ecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d5f7ec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d5f7eb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08fzdden                        0x00005649b47476e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1d5fce1460 __libc_start_main + 245\n6    tmp08fzdden                        0x00005649b4747329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpbsazw1z2/tmpbsazw1z2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8271335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b827102cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b827102c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b827102b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbsazw1z2                        0x00005566932b6737 <unavailable> + 5943\n5    libc.so.6                          0x00002b8271521460 __libc_start_main + 245\n6    tmpbsazw1z2                        0x00005566932b6379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcogas3w2/tmpcogas3w2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cd1429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cd1120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cd1120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cd111f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcogas3w2                        0x000055f5943bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b4cd1615460 __libc_start_main + 245\n6    tmpcogas3w2                        0x000055f5943bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpi4c42f6c/tmpi4c42f6c.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4831a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab482e9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab482e9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab482e9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4c42f6c                        0x0000558cab19e737 <unavailable> + 5943\n5    libc.so.6                          0x00002ab483393460 __libc_start_main + 245\n6    tmpi4c42f6c                        0x0000558cab19e379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp2k54jwys.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp2k54jwys.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpad6jibbv/tmpad6jibbv.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b61a4a7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b61a4776b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b61a4776988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b61a47757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad6jibbv                        0x000055987ed656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b61a4c6b460 __libc_start_main + 245\n6    tmpad6jibbv                        0x000055987ed65329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpq737zacq/tmpq737zacq.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af047e9ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af047b95b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af047b95988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af047b947b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq737zacq                        0x0000562937f89747 <unavailable> + 5959\n5    libc.so.6                          0x00002af04808a460 __libc_start_main + 245\n6    tmpq737zacq                        0x0000562937f89389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmprjy7xk8r/tmprjy7xk8r.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef59e1fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef59b16b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef59b16988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef59b157b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprjy7xk8r                        0x000055a486f366e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aef5a00b460 __libc_start_main + 245\n6    tmprjy7xk8r                        0x000055a486f36329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmph74n2_j0/tmph74n2_j0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b592c0cac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b592bdc1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b592bdc1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b592bdc07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph74n2_j0                        0x00005588e9dac737 <unavailable> + 5943\n5    libc.so.6                          0x00002b592c2b6460 __libc_start_main + 245\n6    tmph74n2_j0                        0x00005588e9dac379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcogas3w2/tmpcogas3w2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cd1429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cd1120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cd1120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cd111f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcogas3w2                        0x000055f5943bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b4cd1615460 __libc_start_main + 245\n6    tmpcogas3w2                        0x000055f5943bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpkrqcftjz/tmpkrqcftjz.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3a7405ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3a73d55b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3a73d55988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3a73d547b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkrqcftjz                        0x000055eeb079c6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b3a7424a460 __libc_start_main + 245\n6    tmpkrqcftjz                        0x000055eeb079c329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let result = sum % 26\n    let char = Character(UnicodeScalar(result + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp4reloukc/tmp4reloukc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae392ac2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae3927b9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae3927b9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae3927b87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4reloukc                        0x0000563b23493737 <unavailable> + 5943\n5    libc.so.6                          0x00002ae392cae460 __libc_start_main + 245\n6    tmp4reloukc                        0x0000563b23493379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    var res = \"\"\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    res = String(UnicodeScalar(sum + 97)!)\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpw8f8elac/tmpw8f8elac.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b82c92c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b82c8fbeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b82c8fbe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b82c8fbd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw8f8elac                        0x000055bba868b747 <unavailable> + 5959\n5    libc.so.6                          0x00002b82c94b3460 __libc_start_main + 245\n6    tmpw8f8elac                        0x000055bba868b389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i).unicodeScalars.first!.value)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpzfgvr4xm.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpzfgvr4xm.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp2k54jwys.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp2k54jwys.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7cy44zn2/tmp7cy44zn2.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ab1c2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2aaeb9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2aaeb9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2aaeb87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7cy44zn2                        0x000056049cc7a737 <unavailable> + 5943\n5    libc.so.6                          0x00002af2ab3ae460 __libc_start_main + 245\n6    tmp7cy44zn2                        0x000056049cc7a379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp2k54jwys.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp2k54jwys.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpl20rfp6n/tmpl20rfp6n.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5b5635c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5b532cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5b532c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5b532b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl20rfp6n                        0x000055f6898ff6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac5b5821460 __libc_start_main + 245\n6    tmpl20rfp6n                        0x000055f6898ff329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmp2k54jwys.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp2k54jwys.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp5helwcpd/tmp5helwcpd.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8efbc18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8efb90fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8efb90f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8efb90e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5helwcpd                        0x00005586527b6797 <unavailable> + 6039\n5    libc.so.6                          0x00002b8efbe04460 __libc_start_main + 245\n6    tmp5helwcpd                        0x00005586527b63d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpllqnc8v2/tmpllqnc8v2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b985f33ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b985f031b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b985f031988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b985f0307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpllqnc8v2                        0x000055ecc8b3f6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b985f526460 __libc_start_main + 245\n6    tmpllqnc8v2                        0x000055ecc8b3f329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    sum += 65\n    return String(Character(UnicodeScalar(sum)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpa1dvq1gx/tmpa1dvq1gx.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba08698cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba086683b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba086683988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0866827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa1dvq1gx                        0x0000563760748737 <unavailable> + 5943\n5    libc.so.6                          0x00002ba086b78460 __libc_start_main + 245\n6    tmpa1dvq1gx                        0x0000563760748379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.utf8 {\n        sum += Int(i)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp13dhzuju/tmp13dhzuju.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd93d13c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd93a0ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd93a0a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd93a097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp13dhzuju                        0x000055df9ff52827 <unavailable> + 6183\n5    libc.so.6                          0x00002abd93eff460 __libc_start_main + 245\n6    tmp13dhzuju                        0x000055df9ff52469 <unavailable> + 5225\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcnlkkyle/tmpcnlkkyle.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad0dfabfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0df7b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0df7b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0df7b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcnlkkyle                        0x0000561aaccf3737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad0dfcab460 __libc_start_main + 245\n6    tmpcnlkkyle                        0x0000561aaccf3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpxg7oso0w/tmpxg7oso0w.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3873dd6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3873acdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3873acd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3873acc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxg7oso0w                        0x000056528e1c9747 <unavailable> + 5959\n5    libc.so.6                          0x00002b3873fc2460 __libc_start_main + 245\n6    tmpxg7oso0w                        0x000056528e1c9389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpkrqcftjz/tmpkrqcftjz.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3a7405ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3a73d55b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3a73d55988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3a73d547b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkrqcftjz                        0x000055eeb079c6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b3a7424a460 __libc_start_main + 245\n6    tmpkrqcftjz                        0x000055eeb079c329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for ch in strr {\n        sum += Int(ch.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpd3r3uzzn/tmpd3r3uzzn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade291c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade28ebeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ade28ebe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ade28ebd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd3r3uzzn                        0x00005555a89d36e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ade293b3460 __libc_start_main + 245\n6    tmpd3r3uzzn                        0x00005555a89d3329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    return String(Character(UnicodeScalar(sum % 26 + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpcwu5tgn0/tmpcwu5tgn0.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3320cdec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b33209d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b33209d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b33209d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcwu5tgn0                        0x000055abe76c9737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3320eca460 __libc_start_main + 245\n6    tmpcwu5tgn0                        0x000055abe76c9379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        let ascii = i.asciiValue!\n        sum += Int(ascii)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpnf3wkzgb/tmpnf3wkzgb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4448889c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4448580b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4448580988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b444857f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnf3wkzgb                        0x00005615284d6737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4448a75460 __libc_start_main + 245\n6    tmpnf3wkzgb                        0x00005615284d6379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmplnhnjq7s/tmplnhnjq7s.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b4c40ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b4c101b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b4c101988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b4c1007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplnhnjq7s                        0x000055a0fe802737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3b4c5f6460 __libc_start_main + 245\n6    tmplnhnjq7s                        0x000055a0fe802379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmplnhnjq7s/tmplnhnjq7s.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b4c40ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b4c101b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b4c101988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b4c1007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplnhnjq7s                        0x000055a0fe802737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3b4c5f6460 __libc_start_main + 245\n6    tmplnhnjq7s                        0x000055a0fe802379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsbradxmi/tmpsbradxmi.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afd997afc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afd994a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afd994a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afd994a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsbradxmi                        0x00005621d878b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002afd9999b460 __libc_start_main + 245\n6    tmpsbradxmi                        0x00005621d878b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpbsazw1z2/tmpbsazw1z2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8271335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b827102cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b827102c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b827102b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbsazw1z2                        0x00005566932b6737 <unavailable> + 5943\n5    libc.so.6                          0x00002b8271521460 __libc_start_main + 245\n6    tmpbsazw1z2                        0x00005566932b6379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    let charr = Character(UnicodeScalar(char + 97)!)\n    return String(charr)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpl_gddoft/tmpl_gddoft.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9a209bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9a206b5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9a206b5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9a206b47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl_gddoft                        0x0000560b23222737 <unavailable> + 5943\n5    libc.so.6                          0x00002b9a20baa460 __libc_start_main + 245\n6    tmpl_gddoft                        0x0000560b23222379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoo3e_301/tmpoo3e_301.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeba8d19c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeba8a10b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeba8a10988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeba8a0f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoo3e_301                        0x0000558e2bc14737 <unavailable> + 5943\n5    libc.so.6                          0x00002aeba8f05460 __libc_start_main + 245\n6    tmpoo3e_301                        0x0000558e2bc14379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpkobz145o/tmpkobz145o.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b24b87a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b24b849cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b24b849c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b24b849b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkobz145o                        0x000055e6c6d3d737 <unavailable> + 5943\n5    libc.so.6                          0x00002b24b8991460 __libc_start_main + 245\n6    tmpkobz145o                        0x000055e6c6d3d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpupt6l7z1/tmpupt6l7z1.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc4bc7bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc4b972b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc4b972988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc4b9717b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpupt6l7z1                        0x000055bfe9929737 <unavailable> + 5943\n5    libc.so.6                          0x00002acc4be67460 __libc_start_main + 245\n6    tmpupt6l7z1                        0x000055bfe9929379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoo3e_301/tmpoo3e_301.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeba8d19c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeba8a10b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeba8a10988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeba8a0f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoo3e_301                        0x0000558e2bc14737 <unavailable> + 5943\n5    libc.so.6                          0x00002aeba8f05460 __libc_start_main + 245\n6    tmpoo3e_301                        0x0000558e2bc14379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpllqnc8v2/tmpllqnc8v2.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b985f33ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b985f031b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b985f031988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b985f0307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpllqnc8v2                        0x000055ecc8b3f6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b985f526460 __libc_start_main + 245\n6    tmpllqnc8v2                        0x000055ecc8b3f329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmp9q9sc1_5.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp9q9sc1_5.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpf7hk8l8c.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpf7hk8l8c.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpqglanims/tmpqglanims.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0b28a3bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0b28732b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0b28732988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0b287317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqglanims                        0x0000558e98cb3737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0b28c27460 __libc_start_main + 245\n6    tmpqglanims                        0x0000558e98cb3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7bw6t3i6/tmp7bw6t3i6.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8b125eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8b122e5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8b122e5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8b122e47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7bw6t3i6                        0x00005580d73926e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b8b127da460 __libc_start_main + 245\n6    tmp7bw6t3i6                        0x00005580d7392329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    var result = \"\"\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    result = String(UnicodeScalar(sum + 97)!)\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpbv5aj31n/tmpbv5aj31n.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd04744c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd0443bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd0443b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd0443a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbv5aj31n                        0x00005606d9561747 <unavailable> + 5959\n5    libc.so.6                          0x00002abd04930460 __libc_start_main + 245\n6    tmpbv5aj31n                        0x00005606d9561389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpsbradxmi/tmpsbradxmi.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afd997afc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afd994a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afd994a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afd994a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsbradxmi                        0x00005621d878b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002afd9999b460 __libc_start_main + 245\n6    tmpsbradxmi                        0x00005621d878b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var char = \"\"\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    char = String(UnicodeScalar(sum + 97)!)\n    return char\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpm7s741zp/tmpm7s741zp.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac2d5fdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac2d5cd3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac2d5cd3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac2d5cd27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm7s741zp                        0x000055570e2656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac2d61c8460 __libc_start_main + 245\n6    tmpm7s741zp                        0x000055570e265329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp47fr5snn/tmp47fr5snn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5efede1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5efead8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5efead8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5efead77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp47fr5snn                        0x000055adde5436e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5efefcd460 __libc_start_main + 245\n6    tmp47fr5snn                        0x000055adde543329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpadatuusz/tmpadatuusz.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5854957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b585464eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b585464e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b585464d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpadatuusz                        0x00005633d3118737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5854b43460 __libc_start_main + 245\n6    tmpadatuusz                        0x00005633d3118379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpjdkcztnc/tmpjdkcztnc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b582abcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b582a8c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b582a8c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b582a8c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjdkcztnc                        0x000055cd3563d747 <unavailable> + 5959\n5    libc.so.6                          0x00002b582adb7460 __libc_start_main + 245\n6    tmpjdkcztnc                        0x000055cd3563d389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    var ch = sum % 26\n    return String(Character(UnicodeScalar(ch + 96)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmptkewcdhq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmptkewcdhq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n/tmp/tmptkewcdhq.swift:9:9: warning: variable 'ch' was never mutated; consider changing to 'let' constant\n    var ch = sum % 26\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpi4c42f6c/tmpi4c42f6c.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4831a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab482e9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab482e9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab482e9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4c42f6c                        0x0000558cab19e737 <unavailable> + 5943\n5    libc.so.6                          0x00002ab483393460 __libc_start_main + 245\n6    tmpi4c42f6c                        0x0000558cab19e379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_yrfzz7n/tmp_yrfzz7n.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a8f33bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a8f032b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a8f032988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a8f0317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yrfzz7n                        0x0000564baf434737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0a8f527460 __libc_start_main + 245\n6    tmp_yrfzz7n                        0x0000564baf434379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmps971aqun/tmps971aqun.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1783f2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1783c24b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1783c24988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1783c237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps971aqun                        0x000055ec823656e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1784119460 __libc_start_main + 245\n6    tmps971aqun                        0x000055ec82365329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp4gi360fg/tmp4gi360fg.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a6f363c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a6f05ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a6f05a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a6f0597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4gi360fg                        0x0000557345254737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4a6f54f460 __libc_start_main + 245\n6    tmp4gi360fg                        0x0000557345254379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for char in str {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpsf_zkqbh/tmpsf_zkqbh.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c4f7bac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c4f4b1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c4f4b1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4f4b07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsf_zkqbh                        0x000055ffd1543797 <unavailable> + 6039\n5    libc.so.6                          0x00002b3c4f9a6460 __libc_start_main + 245\n6    tmpsf_zkqbh                        0x000055ffd15433d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    sum += 97\n    let char = Character(UnicodeScalar(sum)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpfb0iypp1.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpfb0iypp1.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7cy44zn2/tmp7cy44zn2.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ab1c2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2aaeb9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2aaeb9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2aaeb87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7cy44zn2                        0x000056049cc7a737 <unavailable> + 5943\n5    libc.so.6                          0x00002af2ab3ae460 __libc_start_main + 245\n6    tmp7cy44zn2                        0x000056049cc7a379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoqn7bmet/tmpoqn7bmet.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5cfa70ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5cfa405b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5cfa405988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5cfa4047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoqn7bmet                        0x000055f8b5d6a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5cfa8fa460 __libc_start_main + 245\n6    tmpoqn7bmet                        0x000055f8b5d6a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmp19prvcgu/tmp19prvcgu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adfa220ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adfa1f05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adfa1f05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adfa1f047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp19prvcgu                        0x000055826414f6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002adfa23fa460 __libc_start_main + 245\n6    tmp19prvcgu                        0x000055826414f329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpbsazw1z2/tmpbsazw1z2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8271335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b827102cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b827102c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b827102b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbsazw1z2                        0x00005566932b6737 <unavailable> + 5943\n5    libc.so.6                          0x00002b8271521460 __libc_start_main + 245\n6    tmpbsazw1z2                        0x00005566932b6379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7dk2ceni/tmp7dk2ceni.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7651202c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7650ef9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7650ef9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7650ef87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7dk2ceni                        0x0000564487602797 <unavailable> + 6039\n5    libc.so.6                          0x00002b76513ee460 __libc_start_main + 245\n6    tmp7dk2ceni                        0x00005644876023d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(Character(UnicodeScalar(ans + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpqkdonlo4/tmpqkdonlo4.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0c2b889c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0c2b580b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0c2b580988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0c2b57f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqkdonlo4                        0x0000559cd689e737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0c2ba75460 __libc_start_main + 245\n6    tmpqkdonlo4                        0x0000559cd689e379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmph74n2_j0/tmph74n2_j0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b592c0cac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b592bdc1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b592bdc1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b592bdc07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph74n2_j0                        0x00005588e9dac737 <unavailable> + 5943\n5    libc.so.6                          0x00002b592c2b6460 __libc_start_main + 245\n6    tmph74n2_j0                        0x00005588e9dac379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.unicodeScalars {\n        sum += Int(i.value)\n    }\n    let char = sum % 26\n    let str = String(UnicodeScalar(char + 97)!)\n    return str\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmp7w18qca2/tmp7w18qca2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab5a1621c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab5a1318b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab5a1318988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab5a13177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7w18qca2                        0x0000562e32bc8797 <unavailable> + 6039\n5    libc.so.6                          0x00002ab5a180d460 __libc_start_main + 245\n6    tmp7w18qca2                        0x0000562e32bc83d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmppmzmo3ge/tmppmzmo3ge.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1892e04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1892afbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1892afb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1892afa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppmzmo3ge                        0x000055c5b88cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1892ff0460 __libc_start_main + 245\n6    tmppmzmo3ge                        0x000055c5b88cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        let char = String(i)\n        sum += Int(char.unicodeScalars.first!.value)\n    }\n    let result = sum % 26\n    let char = UnicodeScalar(result + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmp_6d59ba1.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp_6d59ba1.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpgjhj6cjg/tmpgjhj6cjg.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4ff3c1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4ff0b8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4ff0b8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4ff0b77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgjhj6cjg                        0x000055cebe28b737 <unavailable> + 5943\n5    libc.so.6                          0x00002ab4ff5ad460 __libc_start_main + 245\n6    tmpgjhj6cjg                        0x000055cebe28b379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    let char = Character(UnicodeScalar(ans + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmp0aquvvw7/tmp0aquvvw7.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af0078d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af0075ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af0075cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af0075cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0aquvvw7                        0x0000558caf730737 <unavailable> + 5943\n5    libc.so.6                          0x00002af007ac1460 __libc_start_main + 245\n6    tmp0aquvvw7                        0x0000558caf730379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 65)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpatsbrpch/tmpatsbrpch.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0022394c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b002208bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b002208b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b002208a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpatsbrpch                        0x000055ea254b0737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0022580460 __libc_start_main + 245\n6    tmpatsbrpch                        0x000055ea254b0379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpasc75vk4.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpasc75vk4.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpqglanims/tmpqglanims.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0b28a3bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0b28732b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0b28732988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0b287317b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqglanims                        0x0000558e98cb3737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0b28c27460 __libc_start_main + 245\n6    tmpqglanims                        0x0000558e98cb3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7d4ws6_c/tmp7d4ws6_c.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2a46c9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2a46993b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2a46993988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2a469927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7d4ws6_c                        0x000055555bdb3737 <unavailable> + 5943\n5    libc.so.6                          0x00002b2a46e88460 __libc_start_main + 245\n6    tmp7d4ws6_c                        0x000055555bdb3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    sum += 65\n    let char = Character(UnicodeScalar(sum)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpuhq4yuav.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpuhq4yuav.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpo5idyubq.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpo5idyubq.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpdod6eicf/tmpdod6eicf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac45aca5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac45a99cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac45a99c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac45a99b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdod6eicf                        0x000055eeea7b86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac45ae91460 __libc_start_main + 245\n6    tmpdod6eicf                        0x000055eeea7b8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpoo3e_301/tmpoo3e_301.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeba8d19c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeba8a10b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeba8a10988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeba8a0f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoo3e_301                        0x0000558e2bc14737 <unavailable> + 5943\n5    libc.so.6                          0x00002aeba8f05460 __libc_start_main + 245\n6    tmpoo3e_301                        0x0000558e2bc14379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmp7dk2ceni/tmp7dk2ceni.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7651202c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7650ef9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7650ef9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7650ef87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7dk2ceni                        0x0000564487602797 <unavailable> + 6039\n5    libc.so.6                          0x00002b76513ee460 __libc_start_main + 245\n6    tmp7dk2ceni                        0x00005644876023d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpy52c7049/tmpy52c7049.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9b6c64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9b695bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9b695b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9b695a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy52c7049                        0x000055ac95cbc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af9b6e50460 __libc_start_main + 245\n6    tmpy52c7049                        0x000055ac95cbc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "tmpcnlkkyle/tmpcnlkkyle.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad0dfabfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0df7b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0df7b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0df7b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcnlkkyle                        0x0000561aaccf3737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad0dfcab460 __libc_start_main + 245\n6    tmpcnlkkyle                        0x0000561aaccf3379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpn150_hj8/tmpn150_hj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20c44b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20c41abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20c41ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20c41aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn150_hj8                        0x00005555ef6bc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b20c46a0460 __libc_start_main + 245\n6    tmpn150_hj8                        0x00005555ef6bc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpbo2bcxxd/tmpbo2bcxxd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2eb08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2e7ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2e7ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2e7fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbo2bcxxd                        0x00005624433886e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b0a2ecf4460 __libc_start_main + 245\n6    tmpbo2bcxxd                        0x0000562443388329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i).unicodeScalars.first!.value)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123795,
      "stdout": "",
      "stderr": "/tmp/tmpzfgvr4xm.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpzfgvr4xm.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    let char = Character(UnicodeScalar(ans + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123796,
      "stdout": "",
      "stderr": "tmpghv6uab2/tmpghv6uab2.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab71174bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab711442b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab711442988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab7114417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpghv6uab2                        0x0000564fff7ef737 <unavailable> + 5943\n5    libc.so.6                          0x00002ab711937460 __libc_start_main + 245\n6    tmpghv6uab2                        0x0000564fff7ef379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_392_get_max_sum",
  "language": "swift",
  "prompt": "\n/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfunc get_max_sum(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_max_sum(n: 60) == 106)\nassert(get_max_sum(n: 10) == 12)\nassert(get_max_sum(n: 2) == 2)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var result = 0\n    for i in stride(from: n/5, to: 0, by: -1) {\n        result = max(result, get_max_sum(n: i))\n    }\n    for i in stride(from: n/4, to: 0, by: -1) {\n        result = max(result, get_max_sum(n: i))\n    }\n    for i in stride(from: n/3, to: 0, by: -1) {\n        result = max(result, get_max_sum(n: i))\n    }\n    for i in stride(from: n/2, to: 0, by: -1) {\n        result = max(result, get_max_sum(n: i))\n    }\n    return result + n",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n-i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    let max_sum_1 = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    if max_sum_1 > max_sum {\n        max_sum = max_sum_1\n    }\n    return max_sum",
    "    if n < 2 {\n        return n\n    }\n    var dp = Array(repeating: 0, count: n + 1)\n    dp[0] = 0\n    dp[1] = 1\n    for i in 2...n {\n        dp[i] = max(dp[i / 2] + dp[i / 3] + dp[i / 4] + dp[i / 5], i)\n    }\n    return dp[n]",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    var sum = 0\n    sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    if sum > n {\n        return sum\n    }\n    return n",
    "    if n < 2 {\n        return n\n    }\n    var result = n\n    let divisors = [2, 3, 4, 5]\n    for divisor in divisors {\n        let temp = get_max_sum(n: n / divisor)\n        if temp > result {\n            result = temp\n        }\n    }\n    return result",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        let sum = get_max_sum(n: n/i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n == 0 {\n        return 0\n    }\n    let a = get_max_sum(n: n/2)\n    let b = get_max_sum(n: n/3)\n    let c = get_max_sum(n: n/4)\n    let d = get_max_sum(n: n/5)\n    return max(n, a+b+c+d)",
    "    if n <= 0 {\n        return 0\n    }\n    var result = n\n    let divisors = [2, 3, 4, 5]\n    for divisor in divisors {\n        if n % divisor == 0 {\n            result = max(result, get_max_sum(n: n / divisor))\n        }\n    }\n    return result",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, through: n/5, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    \n    if n <= 5 {\n        return n\n    }\n    \n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n / i)\n    }\n    return max(sum, n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    let sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    return max(sum, n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    let sum1 = get_max_sum(n: n / 2) + get_max_sum(n: n / 3) + get_max_sum(n: n / 4) + get_max_sum(n: n / 5)\n    let sum2 = n\n    return max(sum1, sum2)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/5, to: 0, by: -1) {\n        max_sum = max(max_sum, get_max_sum(n: i) + get_max_sum(n: n - i))\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n/i))\n    }\n    return sum + n",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    var cache = [Int: Int]()\n    return get_max_sum_helper(n: n, cache: &cache)",
    "    if n == 0 {\n        return 0\n    }\n    let max_sum = max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n-1, to: 0, by: -1) {\n        let sum = get_max_sum(n: i/2) + get_max_sum(n: i/3) + get_max_sum(n: i/4) + get_max_sum(n: i/5)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(n, sum)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 2 {\n        return n\n    }\n    \n    var dp = [Int](repeating: 0, count: n+1)\n    dp[0] = 0\n    dp[1] = 1\n    \n    for i in 2...n {\n        dp[i] = max(dp[i/2] + dp[i/3] + dp[i/4] + dp[i/5], i)\n    }\n    \n    return dp[n]",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    let max_sum_1 = get_max_sum(n: n/2)\n    let max_sum_2 = get_max_sum(n: n/3)\n    let max_sum_3 = get_max_sum(n: n/4)\n    let max_sum_4 = get_max_sum(n: n/5)\n    let max_sum_5 = get_max_sum(n: n/6)\n    let max_sum_6 = get_max_sum(n: n/7)\n    let max_sum_7 = get_max_sum(n: n/8)\n    let max_sum_8 = get_max_sum(n: n/9)\n    let max_sum_9 = get_max_sum(n: n/10)\n    let max_sum_10 = get_max_sum(n: n/11)\n    let max_sum_11 = get_max_sum(n: n/12)\n    let max_sum_12 = get_max_sum(n: n/13)\n    let max_sum_13 = get_max_sum(n: n/14)\n    let max_sum_14 = get_max_sum(n: n/15)\n    let max_sum_15 = get_max_sum(n: n/16)\n    let max_sum_16 = get_max_sum(n: n/17)\n    let max_sum_17 = get_max_sum(n: n/18)\n    let max_sum_18 = get_max_sum(n: n/19)\n    let max_sum_19 = get_max_sum(n: n/20)\n    let max_sum_20 = get_max_sum(n: n/21)\n    let max_sum_21 = get_max_sum(n: n/22)\n    let max_sum_22 = get_max_sum(n: n/23)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    let sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = 0\n    for i in 2...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i))\n    }\n    return max_sum + n",
    "    if n < 2 {\n        return n\n    }\n    let n2 = get_max_sum(n: n/2)\n    let n3 = get_max_sum(n: n/3)\n    let n4 = get_max_sum(n: n/4)\n    let n5 = get_max_sum(n: n/5)\n    return max(n, n2 + n3 + n4 + n5)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    if max_sum < n {\n        max_sum = n\n    }\n    return max_sum",
    "    if n == 0 {\n        return 0\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 2 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n: n / i))\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    var result = 0\n    result = max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)\n    return result",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 2 {\n        return n\n    }\n    var max_sum = [Int](repeating: 0, count: n+1)\n    max_sum[0] = 0\n    max_sum[1] = 1\n    for i in 2...n {\n        max_sum[i] = max(max_sum[i/2] + max_sum[i/3] + max_sum[i/4] + max_sum[i/5], i)\n    }\n    return max_sum[n]",
    "    var cache = [Int](repeating: 0, count: n + 1)\n    return get_max_sum(n: n, cache: &cache)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    \n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n / i))\n    }\n    return sum + n",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    \n    if n == 0 {\n        return 0\n    }\n    \n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        let sum = get_max_sum(n: n/i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 2 {\n        return n\n    }\n    var dp = [Int](repeating: 0, count: n + 1)\n    dp[0] = 0\n    dp[1] = 1\n    for i in 2...n {\n        dp[i] = max(dp[i/2] + dp[i/3] + dp[i/4] + dp[i/5], i)\n    }\n    return dp[n]",
    "    if n <= 0 {\n        return 0\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, through: n/5, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 || n == 1 {\n        return n\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, through: n/5, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n-i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i) + get_max_sum(n: n%i))\n    }\n    return max_sum",
    "    if n == 0 {\n        return 0\n    }\n    \n    let sum = max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    return sum",
    "    if n == 0 {\n        return 0\n    }\n    var max_sum = n\n    for i in 1...5 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n: n/i))\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n / i))\n    }\n    return sum + n",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/5, through: 1, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    sum = max(sum, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    sum = max(sum, n)\n    return sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, through: n/5, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 12 {\n        return n\n    }\n    let a = get_max_sum(n: n / 2)\n    let b = get_max_sum(n: n / 3)\n    let c = get_max_sum(n: n / 4)\n    let d = get_max_sum(n: n / 5)\n    return max(n, a + b + c + d)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i) + get_max_sum(n: n%i))\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n < 2 {\n        return n\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    var i = 1\n    while i <= 5 {\n        let sum = get_max_sum(n: n/i) + get_max_sum(n: n/(i+1))\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        let sum = get_max_sum(n: n/i)\n        if max_sum < sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    \n    if n == 1 {\n        return 1\n    }\n    \n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n/i))\n    }\n    \n    return max(n, sum)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    var sum = 0\n    for i in stride(from: 2, through: 5, by: 1) {\n        sum = get_max_sum(n: n/i)\n        if max_sum < sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    let sum = max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)\n    return sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in 2...5 {\n        let sum = get_max_sum(n: n/i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n/i))\n    }\n    return sum + n",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    if sum < n {\n        sum = n\n    }\n    return sum",
    "    if n < 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 2 {\n        return n\n    }\n    var memo = [Int](repeating: 0, count: n + 1)\n    memo[0] = 0\n    memo[1] = 1\n    for i in 2...n {\n        memo[i] = max(memo[i/2] + memo[i/3] + memo[i/4] + memo[i/5], i)\n    }\n    return memo[n]",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/2, through: n/5, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    \n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n-i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 2 {\n        return n\n    }\n    var dp = Array(repeating: 0, count: n + 1)\n    dp[0] = 0\n    dp[1] = 1\n    for i in 2...n {\n        dp[i] = max(dp[i/2] + dp[i/3] + dp[i/4] + dp[i/5], i)\n    }\n    return dp[n]",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n == 0 {\n        return 0\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var result = n\n    for i in 2...5 {\n        result = max(result, get_max_sum(n: n/i) * i)\n    }\n    return result",
    "    if n == 0 {\n        return 0\n    }\n    let sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    var sum = 0\n    for i in 2...5 {\n        sum = get_max_sum(n: n/i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    var max_sum = max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    return max_sum",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(n, sum)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    let n_2 = n / 2\n    let n_3 = n / 3\n    let n_4 = n / 4\n    let n_5 = n / 5\n    let sum = get_max_sum(n: n_2) + get_max_sum(n: n_3) + get_max_sum(n: n_4) + get_max_sum(n: n_5)\n    if sum > max_sum {\n        max_sum = sum\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    var max_sum = 0\n    max_sum = max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(n, sum)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = 0\n    for i in 2...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i))\n    }\n    return max_sum + n",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    \n    var max_sum = n\n    for i in stride(from: n/2, through: 1, by: -1) {\n        let sum = get_max_sum(n: i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    let sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    return max(sum, n)",
    "    if n < 2 {\n        return n\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var result = 0\n    for i in 2...5 {\n        result = max(result, get_max_sum(n: n / i))\n    }\n    return result + n",
    "    if n < 2 {\n        return n\n    }\n    var cache = [Int](repeating: 0, count: n + 1)\n    cache[0] = 0\n    cache[1] = 1\n    for i in 2...n {\n        cache[i] = max(cache[i/2] + cache[i/3] + cache[i/4] + cache[i/5], i)\n    }\n    return cache[n]",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var result = 0\n    result = max(result, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    result = max(result, n)\n    return result",
    "    if n < 2 {\n        return n\n    }\n    var sum = [Int](repeating: 0, count: n + 1)\n    sum[0] = 0\n    sum[1] = 1\n    for i in 2...n {\n        sum[i] = max(sum[i/2] + sum[i/3] + sum[i/4] + sum[i/5], i)\n    }\n    return sum[n]",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/5, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    \n    if n <= 5 {\n        return n\n    }\n    \n    var max_sum = 0\n    for i in 2...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i))\n    }\n    \n    return max(max_sum + n, n)",
    "    if n < 2 {\n        return n\n    }\n    var dp = Array(repeating: 0, count: n + 1)\n    dp[0] = 0\n    dp[1] = 1\n    for i in 2...n {\n        dp[i] = max(i, dp[i / 2] + dp[i / 3] + dp[i / 4] + dp[i / 5])\n    }\n    return dp[n]",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n/i))\n    }\n    return sum + n",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n-i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 6 {\n        return n\n    }\n    var sum = 0\n    for i in stride(from: n, to: 0, by: -1) {\n        sum = max(sum, get_max_sum(n: i/2) + get_max_sum(n: i/3) + get_max_sum(n: i/4) + get_max_sum(n: i/5))\n    }\n    return sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n-i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    let sum = get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5)\n    return max(sum, n)",
    "    if n < 2 {\n        return n\n    }\n    var max_sum = n\n    var sum = 0\n    for i in 2...5 {\n        sum = get_max_sum(n: n/i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 2 {\n        return n\n    }\n    var dp = Array(repeating: 0, count: n + 1)\n    dp[0] = 0\n    dp[1] = 1\n    for i in 2...n {\n        dp[i] = max(dp[i/2] + dp[i/3] + dp[i/4] + dp[i/5], i)\n    }\n    return dp[n]",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    for i in stride(from: 1, to: n, by: 1) {\n        let sum = get_max_sum(n: i/2) + get_max_sum(n: i/3) + get_max_sum(n: i/4) + get_max_sum(n: i/5)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum = max(sum, get_max_sum(n: n/i))\n    }\n    return max(sum, n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 12 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n-1, through: n-5, by: -1) {\n        let sum = get_max_sum(n: i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var sum = 0\n    sum = max(sum, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))\n    sum = max(sum, n)\n    return sum",
    "    var memo = [Int](repeating: 0, count: n+1)\n    memo[0] = 0\n    memo[1] = 1\n    for i in 2...n {\n        memo[i] = max(memo[i/2] + memo[i/3] + memo[i/4] + memo[i/5], i)\n    }\n    return memo[n]",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    var max_sum = 0\n    for i in 1...5 {\n        max_sum = max(max_sum, get_max_sum(n: n/i))\n    }\n    return max_sum + n",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var dp = Array(repeating: 0, count: n+1)\n    dp[0] = 0\n    dp[1] = 1\n    dp[2] = 2\n    dp[3] = 3\n    dp[4] = 4\n    dp[5] = 5\n    for i in 6...n {\n        dp[i] = max(dp[i/2] + dp[i/3] + dp[i/4] + dp[i/5], i)\n    }\n    return dp[n]",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n == 0 {\n        return 0\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    return max(n, get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5))",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 3\n    }\n    if n == 4 {\n        return 4\n    }\n    if n == 5 {\n        return 5\n    }\n    return max(get_max_sum(n: n/2) + get_max_sum(n: n/3) + get_max_sum(n: n/4) + get_max_sum(n: n/5), n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var max_sum = n\n    for i in stride(from: n/5, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    var max_sum = n\n    for i in stride(from: n/2, to: 0, by: -1) {\n        let sum = get_max_sum(n: i) + get_max_sum(n: n - i)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    if n <= 0 {\n        return 0\n    }\n    if n <= 5 {\n        return n\n    }\n    var sum = 0\n    for i in 2...5 {\n        sum += get_max_sum(n: n/i)\n    }\n    return max(sum, n)"
  ]
}
{
  "name": "mbpp_769_Diff",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to get the difference between two arrays.\nfunc Diff(li1: [Int], li2: [Int]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(Diff(li1: [10, 15, 20, 25, 30, 35, 40], li2: [25, 40, 35]) == [10, 20, 30, 15])\nassert(Diff(li1: [1, 2, 3, 4, 5], li2: [6, 7, 1]) == [2, 3, 4, 5, 6, 7])\nassert(Diff(li1: [1, 2, 3], li2: [6, 7, 1]) == [2, 3, 6, 7])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li.append(i)\n        }\n    }\n    return li",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li.append(i)\n        }\n    }\n    return li",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li.append(i)\n        }\n    }\n    return li",
    "    var li3: [Int] = []\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    for i in li2 {\n        if !li1.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    var li4 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    for i in li2 {\n        if !li1.contains(i) {\n            li4.append(i)\n        }\n    }\n    return li3 + li4",
    "    var li = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li.append(i)\n        }\n    }\n    return li",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3",
    "    var li3 = [Int]()\n    for i in li1 {\n        if !li2.contains(i) {\n            li3.append(i)\n        }\n    }\n    return li3"
  ]
}
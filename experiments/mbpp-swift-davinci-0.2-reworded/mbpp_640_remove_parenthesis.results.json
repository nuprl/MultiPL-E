{
  "name": "mbpp_640_remove_parenthesis",
  "language": "swift",
  "prompt": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParen = false\n    for item in items {\n        if item == \"(\" {\n            inParen = true\n        } else if item == \")\" {\n            inParen = false\n        } else if !inParen {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpoq9_gctj/tmpoq9_gctj.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba9c82adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba9c7fa4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba9c7fa4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba9c7fa37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoq9_gctj                        0x000055c8fb5c663e <unavailable> + 5694\n5    libc.so.6                          0x00002ba9c8499460 __libc_start_main + 245\n6    tmpoq9_gctj                        0x000055c8fb5c6249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n        } else if item == \")\" {\n            skip = false\n        } else if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpgcaw13hg/tmpgcaw13hg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b83f8210c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b83f7f07b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b83f7f07988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b83f7f067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcaw13hg                        0x00005647ca9dc63e <unavailable> + 5694\n5    libc.so.6                          0x00002b83f83fc460 __libc_start_main + 245\n6    tmpgcaw13hg                        0x00005647ca9dc249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var i = 0\n    while i < new_items.count {\n        if new_items[i] == \"(\" {\n            var j = i + 1\n            while j < new_items.count {\n                if new_items[j] == \")\" {\n                    new_items.removeSubrange(i...j)\n                    break\n                }\n                j += 1\n            }\n        }\n        i += 1\n    }\n    return new_items.joined(separator: \"\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpe3957r55/tmpe3957r55.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7be82cdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7be7fc4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7be7fc4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7be7fc37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe3957r55                        0x000055911497d75e <unavailable> + 5982\n5    libc.so.6                          0x00002b7be84b9460 __libc_start_main + 245\n6    tmpe3957r55                        0x000055911497d369 <unavailable> + 4969\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var index = 0\n    while index < new_items.count {\n        if new_items[index] == \"(\" {\n            var i = index + 1\n            var count = 1\n            while count > 0 {\n                if new_items[i] == \"(\" {\n                    count += 1\n                } else if new_items[i] == \")\" {\n                    count -= 1\n                }\n                i += 1\n            }\n            new_items.removeSubrange(index..<i)\n        }\n        index += 1\n    }\n    return new_items.joined()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmphav19p0f/tmphav19p0f.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abb23450c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abb23147b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abb23147988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abb231467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphav19p0f                        0x000055b77790b70e <unavailable> + 5902\n5    libc.so.6                          0x00002abb2363c460 __libc_start_main + 245\n6    tmphav19p0f                        0x000055b77790b319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item != \"(\" && item != \")\" {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpa8z8b8vr/tmpa8z8b8vr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88fb327c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88fb01eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88fb01e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88fb01d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa8z8b8vr                        0x000056391d63f63e <unavailable> + 5694\n5    libc.so.6                          0x00002b88fb513460 __libc_start_main + 245\n6    tmpa8z8b8vr                        0x000056391d63f249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var stack = Stack<String>()\n    for item in items {\n        if item == \"(\" {\n            stack.push(item)\n        } else if item == \")\" {\n            stack.pop()\n        } else {\n            if stack.isEmpty() {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "/tmp/tmp002ccawj.swift:5:17: error: cannot find 'Stack' in scope\n    var stack = Stack<String>()\n                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var is_in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            is_in_parenthesis = true\n        } else if item == \")\" {\n            is_in_parenthesis = false\n        } else if !is_in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp4x_mkc9g/tmp4x_mkc9g.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8af33adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8af30a4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8af30a4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8af30a37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4x_mkc9g                        0x000055b0fce7363e <unavailable> + 5694\n5    libc.so.6                          0x00002b8af3599460 __libc_start_main + 245\n6    tmp4x_mkc9g                        0x000055b0fce73249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n        } else if item == \")\" {\n            skip = false\n        } else if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpgcaw13hg/tmpgcaw13hg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b83f8210c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b83f7f07b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b83f7f07988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b83f7f067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcaw13hg                        0x00005647ca9dc63e <unavailable> + 5694\n5    libc.so.6                          0x00002b83f83fc460 __libc_start_main + 245\n6    tmpgcaw13hg                        0x00005647ca9dc249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpui34_gwk/tmpui34_gwk.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1bf4b8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1bf4884b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1bf4884988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1bf48837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpui34_gwk                        0x00005626e10b463e <unavailable> + 5694\n5    libc.so.6                          0x00002b1bf4d79460 __libc_start_main + 245\n6    tmpui34_gwk                        0x00005626e10b4249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParenthesis = false\n    for item in items {\n        if item == \"(\" {\n            inParenthesis = true\n        } else if item == \")\" {\n            inParenthesis = false\n        } else if inParenthesis == false {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp8rhp5s7m/tmp8rhp5s7m.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adbc670bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adbc6402b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adbc6402988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adbc64017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8rhp5s7m                        0x0000560b6456263e <unavailable> + 5694\n5    libc.so.6                          0x00002adbc68f7460 __libc_start_main + 245\n6    tmp8rhp5s7m                        0x0000560b64562249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpui34_gwk/tmpui34_gwk.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1bf4b8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1bf4884b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1bf4884988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1bf48837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpui34_gwk                        0x00005626e10b463e <unavailable> + 5694\n5    libc.so.6                          0x00002b1bf4d79460 __libc_start_main + 245\n6    tmpui34_gwk                        0x00005626e10b4249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var count = 0\n    for item in items {\n        if item == \"(\" {\n            count += 1\n        } else if item == \")\" {\n            count -= 1\n        } else {\n            if count == 0 {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpomm0uh01/tmpomm0uh01.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adc88ab6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adc887adb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adc887ad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adc887ac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpomm0uh01                        0x0000557ce3ac263e <unavailable> + 5694\n5    libc.so.6                          0x00002adc88ca2460 __libc_start_main + 245\n6    tmpomm0uh01                        0x0000557ce3ac2249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n            continue\n        }\n        if item == \")\" {\n            in_parenthesis = false\n            continue\n        }\n        if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmprvyugcih/tmprvyugcih.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b22fb897c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b22fb58eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b22fb58e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b22fb58d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprvyugcih                        0x0000557edd6cb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b22fba83460 __libc_start_main + 245\n6    tmprvyugcih                        0x0000557edd6cb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = [String]()\n    var open_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis = true\n        } else if item == \")\" {\n            open_parenthesis = false\n        } else if open_parenthesis == false {\n            new_items.append(item)\n        }\n    }\n    return new_items.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpcv2nh6qs/tmpcv2nh6qs.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b08c9866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b08c955db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b08c955d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b08c955c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcv2nh6qs                        0x00005586655b473e <unavailable> + 5950\n5    libc.so.6                          0x00002b08c9a52460 __libc_start_main + 245\n6    tmpcv2nh6qs                        0x00005586655b4349 <unavailable> + 4937\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n        } else if item == \")\" {\n            skip = false\n        } else if skip == false {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpuyepedtd/tmpuyepedtd.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae7ede5bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae7edb52b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae7edb52988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae7edb517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuyepedtd                        0x0000564b42e4263e <unavailable> + 5694\n5    libc.so.6                          0x00002ae7ee047460 __libc_start_main + 245\n6    tmpuyepedtd                        0x0000564b42e42249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inside_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            inside_parenthesis = true\n        } else if item == \")\" {\n            inside_parenthesis = false\n        } else if !inside_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp3ba9n6q7/tmp3ba9n6q7.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b243a34bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b243a042b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b243a042988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b243a0417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3ba9n6q7                        0x0000563776c2e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b243a537460 __libc_start_main + 245\n6    tmp3ba9n6q7                        0x0000563776c2e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var output = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            output += item\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp4o11l9eu/tmp4o11l9eu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b1c202c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b1bef9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b1bef9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b1bef87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4o11l9eu                        0x000055f59ee8963e <unavailable> + 5694\n5    libc.so.6                          0x00002b4b1c3ee460 __libc_start_main + 245\n6    tmp4o11l9eu                        0x000055f59ee89249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else {\n            if open == 0 {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpngvy23xu/tmpngvy23xu.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5681fe8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5681cdfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5681cdf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5681cde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpngvy23xu                        0x000055986f95763e <unavailable> + 5694\n5    libc.so.6                          0x00002b56821d4460 __libc_start_main + 245\n6    tmpngvy23xu                        0x000055986f957249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParenthesis = false\n    for item in items {\n        if item == \"(\" {\n            inParenthesis = true\n        } else if item == \")\" {\n            inParenthesis = false\n        } else if !inParenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp3oo0hf9q/tmp3oo0hf9q.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad238740c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad238437b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad238437988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad2384367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3oo0hf9q                        0x000056163684063e <unavailable> + 5694\n5    libc.so.6                          0x00002ad23892c460 __libc_start_main + 245\n6    tmp3oo0hf9q                        0x0000561636840249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item != \"(\" && item != \")\" {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpa8z8b8vr/tmpa8z8b8vr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88fb327c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88fb01eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88fb01e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88fb01d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa8z8b8vr                        0x000056391d63f63e <unavailable> + 5694\n5    libc.so.6                          0x00002b88fb513460 __libc_start_main + 245\n6    tmpa8z8b8vr                        0x000056391d63f249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpbec42nig/tmpbec42nig.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abf4ea14c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abf4e70bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abf4e70b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abf4e70a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbec42nig                        0x000055f2f84bb63e <unavailable> + 5694\n5    libc.so.6                          0x00002abf4ec00460 __libc_start_main + 245\n6    tmpbec42nig                        0x000055f2f84bb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpbec42nig/tmpbec42nig.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abf4ea14c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abf4e70bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abf4e70b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abf4e70a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbec42nig                        0x000055f2f84bb63e <unavailable> + 5694\n5    libc.so.6                          0x00002abf4ec00460 __libc_start_main + 245\n6    tmpbec42nig                        0x000055f2f84bb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = false\n    for item in items {\n        if item == \"(\" {\n            open = true\n        } else if item == \")\" {\n            open = false\n        } else if !open {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp1qlydm2c/tmp1qlydm2c.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c50e8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c50b83b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c50b83988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c50b827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1qlydm2c                        0x000055ed2edf663e <unavailable> + 5694\n5    libc.so.6                          0x00002b9c51078460 __libc_start_main + 245\n6    tmp1qlydm2c                        0x000055ed2edf6249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = false\n    for item in items {\n        if item == \"(\" {\n            open = true\n        } else if item == \")\" {\n            open = false\n        } else if !open {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp1qlydm2c/tmp1qlydm2c.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c50e8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c50b83b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c50b83988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c50b827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1qlydm2c                        0x000055ed2edf663e <unavailable> + 5694\n5    libc.so.6                          0x00002b9c51078460 __libc_start_main + 245\n6    tmp1qlydm2c                        0x000055ed2edf6249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item != \"(\" && item != \")\" {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpa8z8b8vr/tmpa8z8b8vr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88fb327c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88fb01eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88fb01e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88fb01d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa8z8b8vr                        0x000056391d63f63e <unavailable> + 5694\n5    libc.so.6                          0x00002b88fb513460 __libc_start_main + 245\n6    tmpa8z8b8vr                        0x000056391d63f249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpbec42nig/tmpbec42nig.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abf4ea14c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abf4e70bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abf4e70b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abf4e70a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbec42nig                        0x000055f2f84bb63e <unavailable> + 5694\n5    libc.so.6                          0x00002abf4ec00460 __libc_start_main + 245\n6    tmpbec42nig                        0x000055f2f84bb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    return items.reduce(\"\") { (result, item) -> String in\n        if item.contains(\"(\") || item.contains(\")\") {\n            return result\n        }\n        return result + item\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpbvndatp4/tmpbvndatp4.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abc2c336c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abc2c02db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abc2c02d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abc2c02c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbvndatp4                        0x0000557d367d36be <unavailable> + 5822\n5    libc.so.6                          0x00002abc2c522460 __libc_start_main + 245\n6    tmpbvndatp4                        0x0000557d367d32c9 <unavailable> + 4809\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n        } else if item == \")\" {\n            skip = false\n        } else if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpgcaw13hg/tmpgcaw13hg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b83f8210c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b83f7f07b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b83f7f07988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b83f7f067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcaw13hg                        0x00005647ca9dc63e <unavailable> + 5694\n5    libc.so.6                          0x00002b83f83fc460 __libc_start_main + 245\n6    tmpgcaw13hg                        0x00005647ca9dc249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else {\n            if !in_paren {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp8esygxht/tmp8esygxht.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39e47a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39e44a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39e44a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39e449f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8esygxht                        0x000055fb82c8a63e <unavailable> + 5694\n5    libc.so.6                          0x00002b39e4995460 __libc_start_main + 245\n6    tmp8esygxht                        0x000055fb82c8a249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else {\n            if !in_paren {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp8esygxht/tmp8esygxht.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39e47a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39e44a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39e44a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39e449f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8esygxht                        0x000055fb82c8a63e <unavailable> + 5694\n5    libc.so.6                          0x00002b39e4995460 __libc_start_main + 245\n6    tmp8esygxht                        0x000055fb82c8a249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else {\n            if open == 0 {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpngvy23xu/tmpngvy23xu.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5681fe8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5681cdfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5681cdf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5681cde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpngvy23xu                        0x000055986f95763e <unavailable> + 5694\n5    libc.so.6                          0x00002b56821d4460 __libc_start_main + 245\n6    tmpngvy23xu                        0x000055986f957249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_string = \"\"\n    var open_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis = true\n        } else if item == \")\" {\n            open_parenthesis = false\n        } else if open_parenthesis == false {\n            new_string += item\n        }\n    }\n    return new_string\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp2ekhl22y/tmp2ekhl22y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae4607e9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae4604e0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae4604e0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae4604df7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2ekhl22y                        0x000055f06c7b163e <unavailable> + 5694\n5    libc.so.6                          0x00002ae4609d5460 __libc_start_main + 245\n6    tmp2ekhl22y                        0x000055f06c7b1249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
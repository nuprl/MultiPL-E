{
  "name": "mbpp_760_unique_Element",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        dict[i] = (dict[i] ?? 0) + 1\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_p2d7s13/tmp_p2d7s13.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab6aa00bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab6a9d02b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab6a9d02988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab6a9d017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_p2d7s13                        0x00005631c5cbe70a <unavailable> + 5898\n5    libc.so.6                          0x00002ab6aa1f7460 __libc_start_main + 245\n6    tmp_p2d7s13                        0x00005631c5cbe379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp0c42qf9x/tmp0c42qf9x.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d5bc34c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d5b92bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d5b92b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d5b92a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0c42qf9x                        0x0000556de084453a <unavailable> + 5434\n5    libc.so.6                          0x00002b0d5be20460 __libc_start_main + 245\n6    tmp0c42qf9x                        0x0000556de08441a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let val = dict[i] {\n            dict[i] = val + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bmhgknx/tmp_bmhgknx.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4567ca7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b456799eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b456799e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b456799d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bmhgknx                        0x000055f3f365270a <unavailable> + 5898\n5    libc.so.6                          0x00002b4567e93460 __libc_start_main + 245\n6    tmp_bmhgknx                        0x000055f3f3652379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpe7kxmg5q/tmpe7kxmg5q.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae93521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae93218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae93218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae932177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe7kxmg5q                        0x000055ab8f78053a <unavailable> + 5434\n5    libc.so.6                          0x00002aae9370d460 __libc_start_main + 245\n6    tmpe7kxmg5q                        0x000055ab8f7801a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict.values {\n        if i > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpx401q9x9/tmpx401q9x9.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfa487ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfa4575b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abfa4575988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abfa45747b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx401q9x9                        0x0000561a9fd7285a <unavailable> + 6234\n5    libc.so.6                          0x00002abfa4a6a460 __libc_start_main + 245\n6    tmpx401q9x9                        0x0000561a9fd724c9 <unavailable> + 5321\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for num in arr {\n        if dict[num] != nil {\n            dict[num]! += 1\n        } else {\n            dict[num] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpr6j3x9dc/tmpr6j3x9dc.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b4645dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b46154b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b46154988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b461537b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr6j3x9dc                        0x00005626cb7c67ea <unavailable> + 6122\n5    libc.so.6                          0x00002b9b46649460 __libc_start_main + 245\n6    tmpr6j3x9dc                        0x00005626cb7c6459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpewb33l6y/tmpewb33l6y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5bf5fddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5bf5cd4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5bf5cd4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5bf5cd37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpewb33l6y                        0x0000556b01a5653a <unavailable> + 5434\n5    libc.so.6                          0x00002b5bf61c9460 __libc_start_main + 245\n6    tmpewb33l6y                        0x0000556b01a561a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in arr {\n        for j in arr {\n            if i == j {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp08bkl0be/tmp08bkl0be.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ac768dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ac7384b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4ac7384988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4ac73837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08bkl0be                        0x0000559c0e82546a <unavailable> + 5226\n5    libc.so.6                          0x00002b4ac7879460 __libc_start_main + 245\n6    tmp08bkl0be                        0x0000559c0e8250d9 <unavailable> + 4313\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in arr {\n        for j in arr {\n            if i == j {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp08bkl0be/tmp08bkl0be.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ac768dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ac7384b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4ac7384988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4ac73837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08bkl0be                        0x0000559c0e82546a <unavailable> + 5226\n5    libc.so.6                          0x00002b4ac7879460 __libc_start_main + 245\n6    tmp08bkl0be                        0x0000559c0e8250d9 <unavailable> + 4313\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp766rlp40/tmp766rlp40.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af539b3ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af539831b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af539831988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af5398307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp766rlp40                        0x000055f27a6ba53a <unavailable> + 5434\n5    libc.so.6                          0x00002af539d26460 __libc_start_main + 245\n6    tmp766rlp40                        0x000055f27a6ba1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var set = Set<Int>()\n    for i in arr {\n        set.insert(i)\n    }\n    return set.count == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpewb33l6y/tmpewb33l6y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5bf5fddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5bf5cd4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5bf5cd4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5bf5cd37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpewb33l6y                        0x0000556b01a5653a <unavailable> + 5434\n5    libc.so.6                          0x00002b5bf61c9460 __libc_start_main + 245\n6    tmpewb33l6y                        0x0000556b01a561a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let val = dict[i] {\n            dict[i] = val + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, val) in dict {\n        if val > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpdk1x8zg1/tmpdk1x8zg1.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade82345c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade8203cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ade8203c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ade8203b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdk1x8zg1                        0x000055e17668d70a <unavailable> + 5898\n5    libc.so.6                          0x00002ade82531460 __libc_start_main + 245\n6    tmpdk1x8zg1                        0x000055e17668d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpa7_7dn13/tmpa7_7dn13.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aec4962fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aec49326b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aec49326988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aec493257b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa7_7dn13                        0x0000559e0dbf57ea <unavailable> + 6122\n5    libc.so.6                          0x00002aec4981b460 __libc_start_main + 245\n6    tmpa7_7dn13                        0x0000559e0dbf5459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for item in arr {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    for item in dict {\n        if item.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmppi0hi85s/tmppi0hi85s.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b956b430c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b956b127b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b956b127988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b956b1267b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppi0hi85s                        0x0000556aec97d7ea <unavailable> + 6122\n5    libc.so.6                          0x00002b956b61c460 __libc_start_main + 245\n6    tmppi0hi85s                        0x0000556aec97d459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i] = dict[i]! + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for i in dict {\n        if i.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmppxft657d/tmppxft657d.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c8fd24c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c8fa1bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c8fa1b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c8fa1a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppxft657d                        0x000055db40b4279a <unavailable> + 6042\n5    libc.so.6                          0x00002b6c8ff10460 __libc_start_main + 245\n6    tmppxft657d                        0x000055db40b42409 <unavailable> + 5129\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpxfctdwd4/tmpxfctdwd4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1eb3e8ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1eb3b85b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1eb3b85988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1eb3b847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxfctdwd4                        0x0000563ae123a79a <unavailable> + 6042\n5    libc.so.6                          0x00002b1eb407a460 __libc_start_main + 245\n6    tmpxfctdwd4                        0x0000563ae123a409 <unavailable> + 5129\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (key, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpib48tycp/tmpib48tycp.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3461f2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3461c25b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3461c25988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3461c247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpib48tycp                        0x00005586bf2f17ea <unavailable> + 6122\n5    libc.so.6                          0x00002b346211a460 __libc_start_main + 245\n6    tmpib48tycp                        0x00005586bf2f1459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp9k0bhtkc/tmp9k0bhtkc.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b72e1ac1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b72e17b8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b72e17b8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b72e17b77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9k0bhtkc                        0x00005590130927ea <unavailable> + 6122\n5    libc.so.6                          0x00002b72e1cad460 __libc_start_main + 245\n6    tmp9k0bhtkc                        0x0000559013092459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let count = dict[i] {\n            dict[i] = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpg0a694mr/tmpg0a694mr.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb0ba55c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb0b74cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb0b74c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb0b74b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg0a694mr                        0x000056207ceaf70a <unavailable> + 5898\n5    libc.so.6                          0x00002adb0bc41460 __libc_start_main + 245\n6    tmpg0a694mr                        0x000056207ceaf379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpq_k6re7a/tmpq_k6re7a.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb6ed75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb6ea6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb6ea6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb6ea6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq_k6re7a                        0x0000556f50d3253a <unavailable> + 5434\n5    libc.so.6                          0x00002acb6ef61460 __libc_start_main + 245\n6    tmpq_k6re7a                        0x0000556f50d321a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpq_k6re7a/tmpq_k6re7a.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb6ed75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb6ea6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb6ea6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb6ea6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq_k6re7a                        0x0000556f50d3253a <unavailable> + 5434\n5    libc.so.6                          0x00002acb6ef61460 __libc_start_main + 245\n6    tmpq_k6re7a                        0x0000556f50d321a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n        count = 0\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpzgx03ucf/tmpzgx03ucf.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2384178c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2383e6fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2383e6f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2383e6e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzgx03ucf                        0x00005585c816c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b2384364460 __libc_start_main + 245\n6    tmpzgx03ucf                        0x00005585c816c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            unique = false\n            break\n        }\n        count = 0\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpikk0iw5_/tmpikk0iw5_.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4d48c1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4d48915b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4d48915988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4d489147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpikk0iw5_                        0x0000563773ebc53a <unavailable> + 5434\n5    libc.so.6                          0x00002b4d48e0a460 __libc_start_main + 245\n6    tmpikk0iw5_                        0x0000563773ebc1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        }\n        else {\n            dict[i]! += 1\n        }\n    }\n    for (key, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpmihx1j_r/tmpmihx1j_r.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0580035c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b057fd2cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b057fd2c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b057fd2b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmihx1j_r                        0x000055edc1a4c7ea <unavailable> + 6122\n5    libc.so.6                          0x00002b0580221460 __libc_start_main + 245\n6    tmpmihx1j_r                        0x000055edc1a4c459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for i in dict {\n        if i.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpb3i8x97z/tmpb3i8x97z.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b401ea7bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b401e772b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b401e772988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b401e7717b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb3i8x97z                        0x00005624c02e37ea <unavailable> + 6122\n5    libc.so.6                          0x00002b401ec67460 __libc_start_main + 245\n6    tmpb3i8x97z                        0x00005624c02e3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let _ = dict[i] {\n            dict[i] = dict[i]! + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpy5h9_ie9/tmpy5h9_ie9.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac329b2fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac329826b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac329826988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac3298257b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy5h9_ie9                        0x0000559c5681979a <unavailable> + 6042\n5    libc.so.6                          0x00002ac329d1b460 __libc_start_main + 245\n6    tmpy5h9_ie9                        0x0000559c56819409 <unavailable> + 5129\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict: [Int: Int] = [:]\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp1zeirqzl/tmp1zeirqzl.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23101c0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b230feb7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b230feb7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b230feb67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1zeirqzl                        0x00005625be64d80a <unavailable> + 6154\n5    libc.so.6                          0x00002b23103ac460 __libc_start_main + 245\n6    tmp1zeirqzl                        0x00005625be64d479 <unavailable> + 5241\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpq_k6re7a/tmpq_k6re7a.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb6ed75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb6ea6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb6ea6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb6ea6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq_k6re7a                        0x0000556f50d3253a <unavailable> + 5434\n5    libc.so.6                          0x00002acb6ef61460 __libc_start_main + 245\n6    tmpq_k6re7a                        0x0000556f50d321a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpa7_7dn13/tmpa7_7dn13.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aec4962fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aec49326b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aec49326988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aec493257b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa7_7dn13                        0x0000559e0dbf57ea <unavailable> + 6122\n5    libc.so.6                          0x00002aec4981b460 __libc_start_main + 245\n6    tmpa7_7dn13                        0x0000559e0dbf5459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpe7kxmg5q/tmpe7kxmg5q.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae93521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae93218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae93218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae932177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe7kxmg5q                        0x000055ab8f78053a <unavailable> + 5434\n5    libc.so.6                          0x00002aae9370d460 __libc_start_main + 245\n6    tmpe7kxmg5q                        0x000055ab8f7801a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpe7kxmg5q/tmpe7kxmg5q.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae93521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae93218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae93218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae932177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe7kxmg5q                        0x000055ab8f78053a <unavailable> + 5434\n5    libc.so.6                          0x00002aae9370d460 __libc_start_main + 245\n6    tmpe7kxmg5q                        0x000055ab8f7801a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict: [Int: Int] = [:]\n    for i in arr {\n        if let value = dict[i] {\n            dict[i] = value + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpu0uhicw5/tmpu0uhicw5.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b501dd76c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b501da6db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b501da6d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b501da6c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpu0uhicw5                        0x0000561c2752272a <unavailable> + 5930\n5    libc.so.6                          0x00002b501df62460 __libc_start_main + 245\n6    tmpu0uhicw5                        0x0000561c27522399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int:Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpovvqf1ck/tmpovvqf1ck.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b51979bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b51976b5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b51976b5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51976b47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpovvqf1ck                        0x0000564639d4a7ea <unavailable> + 6122\n5    libc.so.6                          0x00002b5197baa460 __libc_start_main + 245\n6    tmpovvqf1ck                        0x0000564639d4a459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let value = dict[i] {\n            dict[i] = value + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp6fqei8vt/tmp6fqei8vt.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b57f179fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b57f1496b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b57f1496988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b57f14957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6fqei8vt                        0x00005651d8f9170a <unavailable> + 5898\n5    libc.so.6                          0x00002b57f198b460 __libc_start_main + 245\n6    tmp6fqei8vt                        0x00005651d8f91379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let value = dict[i] {\n            dict[i] = value + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp6fqei8vt/tmp6fqei8vt.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b57f179fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b57f1496b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b57f1496988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b57f14957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6fqei8vt                        0x00005651d8f9170a <unavailable> + 5898\n5    libc.so.6                          0x00002b57f198b460 __libc_start_main + 245\n6    tmp6fqei8vt                        0x00005651d8f91379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j && arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpij5b6sr4/tmpij5b6sr4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93a6971c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93a6668b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93a6668988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93a66677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpij5b6sr4                        0x000055a9576ac53a <unavailable> + 5434\n5    libc.so.6                          0x00002b93a6b5d460 __libc_start_main + 245\n6    tmpij5b6sr4                        0x000055a9576ac1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp9k0bhtkc/tmp9k0bhtkc.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b72e1ac1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b72e17b8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b72e17b8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b72e17b77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9k0bhtkc                        0x00005590130927ea <unavailable> + 6122\n5    libc.so.6                          0x00002b72e1cad460 __libc_start_main + 245\n6    tmp9k0bhtkc                        0x0000559013092459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict: [Int: Int] = [:]\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp1zeirqzl/tmp1zeirqzl.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23101c0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b230feb7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b230feb7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b230feb67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1zeirqzl                        0x00005625be64d80a <unavailable> + 6154\n5    libc.so.6                          0x00002b23103ac460 __libc_start_main + 245\n6    tmp1zeirqzl                        0x00005625be64d479 <unavailable> + 5241\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j && arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpij5b6sr4/tmpij5b6sr4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93a6971c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93a6668b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93a6668988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93a66677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpij5b6sr4                        0x000055a9576ac53a <unavailable> + 5434\n5    libc.so.6                          0x00002b93a6b5d460 __libc_start_main + 245\n6    tmpij5b6sr4                        0x000055a9576ac1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp0c42qf9x/tmp0c42qf9x.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d5bc34c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d5b92bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d5b92b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d5b92a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0c42qf9x                        0x0000556de084453a <unavailable> + 5434\n5    libc.so.6                          0x00002b0d5be20460 __libc_start_main + 245\n6    tmp0c42qf9x                        0x0000556de08441a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (key, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpib48tycp/tmpib48tycp.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3461f2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3461c25b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3461c25988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3461c247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpib48tycp                        0x00005586bf2f17ea <unavailable> + 6122\n5    libc.so.6                          0x00002b346211a460 __libc_start_main + 245\n6    tmpib48tycp                        0x00005586bf2f1459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j && arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp_ilkzi03/tmp_ilkzi03.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9643ab4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b96437abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b96437ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b96437aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ilkzi03                        0x000055589bbd453a <unavailable> + 5434\n5    libc.so.6                          0x00002b9643ca0460 __libc_start_main + 245\n6    tmp_ilkzi03                        0x000055589bbd41a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in (i+1)..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpz3ed_1mk/tmpz3ed_1mk.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b19a560ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b19a5305b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b19a5305988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b19a53047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz3ed_1mk                        0x000055afada5e53a <unavailable> + 5434\n5    libc.so.6                          0x00002b19a57fa460 __libc_start_main + 245\n6    tmpz3ed_1mk                        0x000055afada5e1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict.values {\n        if i > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpx401q9x9/tmpx401q9x9.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfa487ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfa4575b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abfa4575988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abfa45747b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx401q9x9                        0x0000561a9fd7285a <unavailable> + 6234\n5    libc.so.6                          0x00002abfa4a6a460 __libc_start_main + 245\n6    tmpx401q9x9                        0x0000561a9fd724c9 <unavailable> + 5321\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp766rlp40/tmp766rlp40.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af539b3ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af539831b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af539831988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af5398307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp766rlp40                        0x000055f27a6ba53a <unavailable> + 5434\n5    libc.so.6                          0x00002af539d26460 __libc_start_main + 245\n6    tmp766rlp40                        0x000055f27a6ba1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpe7kxmg5q/tmpe7kxmg5q.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae93521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae93218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae93218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae932177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe7kxmg5q                        0x000055ab8f78053a <unavailable> + 5434\n5    libc.so.6                          0x00002aae9370d460 __libc_start_main + 245\n6    tmpe7kxmg5q                        0x000055ab8f7801a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var set = Set<Int>()\n    for i in arr {\n        set.insert(i)\n    }\n    return set.count == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp9k0bhtkc/tmp9k0bhtkc.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b72e1ac1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b72e17b8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b72e17b8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b72e17b77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9k0bhtkc                        0x00005590130927ea <unavailable> + 6122\n5    libc.so.6                          0x00002b72e1cad460 __libc_start_main + 245\n6    tmp9k0bhtkc                        0x0000559013092459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpewb33l6y/tmpewb33l6y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5bf5fddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5bf5cd4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5bf5cd4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5bf5cd37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpewb33l6y                        0x0000556b01a5653a <unavailable> + 5434\n5    libc.so.6                          0x00002b5bf61c9460 __libc_start_main + 245\n6    tmpewb33l6y                        0x0000556b01a561a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int : Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpz2nnqi47/tmpz2nnqi47.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b08f61dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b08f5ed3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b08f5ed3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b08f5ed27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz2nnqi47                        0x0000556d598fc7ea <unavailable> + 6122\n5    libc.so.6                          0x00002b08f63c8460 __libc_start_main + 245\n6    tmpz2nnqi47                        0x0000556d598fc459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, val) in dict {\n        if val > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpj63q6wr6/tmpj63q6wr6.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae468db7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae468aaeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae468aae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae468aad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj63q6wr6                        0x0000556e233e47ea <unavailable> + 6122\n5    libc.so.6                          0x00002ae468fa3460 __libc_start_main + 245\n6    tmpj63q6wr6                        0x0000556e233e4459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpewb33l6y/tmpewb33l6y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5bf5fddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5bf5cd4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5bf5cd4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5bf5cd37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpewb33l6y                        0x0000556b01a5653a <unavailable> + 5434\n5    libc.so.6                          0x00002b5bf61c9460 __libc_start_main + 245\n6    tmpewb33l6y                        0x0000556b01a561a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpi1tlwwvv/tmpi1tlwwvv.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b131c866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b131c55db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b131c55d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b131c55c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi1tlwwvv                        0x000055bcd899b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b131ca52460 __libc_start_main + 245\n6    tmpi1tlwwvv                        0x000055bcd899b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (key, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpib48tycp/tmpib48tycp.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3461f2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3461c25b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3461c25988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3461c247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpib48tycp                        0x00005586bf2f17ea <unavailable> + 6122\n5    libc.so.6                          0x00002b346211a460 __libc_start_main + 245\n6    tmpib48tycp                        0x00005586bf2f1459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp1ba1puw3/tmp1ba1puw3.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17bfcbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17bf9b2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17bf9b2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17bf9b17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1ba1puw3                        0x00005591072387ea <unavailable> + 6122\n5    libc.so.6                          0x00002b17bfea7460 __libc_start_main + 245\n6    tmp1ba1puw3                        0x0000559107238459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpq_k6re7a/tmpq_k6re7a.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb6ed75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb6ea6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb6ea6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb6ea6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq_k6re7a                        0x0000556f50d3253a <unavailable> + 5434\n5    libc.so.6                          0x00002acb6ef61460 __libc_start_main + 245\n6    tmpq_k6re7a                        0x0000556f50d321a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for num in arr {\n        if dict[num] == nil {\n            dict[num] = 1\n        } else {\n            dict[num]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp4tfd089u/tmp4tfd089u.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e96bcac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e968c1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9e968c1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9e968c07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4tfd089u                        0x000055dbd08347ea <unavailable> + 6122\n5    libc.so.6                          0x00002b9e96db6460 __libc_start_main + 245\n6    tmp4tfd089u                        0x000055dbd0834459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var result = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    result = false\n                }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpsgsnsugy/tmpsgsnsugy.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3775c79c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3775970b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3775970988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b377596f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsgsnsugy                        0x0000558860db253a <unavailable> + 5434\n5    libc.so.6                          0x00002b3775e65460 __libc_start_main + 245\n6    tmpsgsnsugy                        0x0000558860db21a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let val = dict[i] {\n            dict[i] = val + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    return dict.count == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j && arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpij5b6sr4/tmpij5b6sr4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93a6971c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93a6668b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93a6668988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93a66677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpij5b6sr4                        0x000055a9576ac53a <unavailable> + 5434\n5    libc.so.6                          0x00002b93a6b5d460 __libc_start_main + 245\n6    tmpij5b6sr4                        0x000055a9576ac1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpi1tlwwvv/tmpi1tlwwvv.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b131c866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b131c55db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b131c55d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b131c55c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi1tlwwvv                        0x000055bcd899b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b131ca52460 __libc_start_main + 245\n6    tmpi1tlwwvv                        0x000055bcd899b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n                break\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpq_k6re7a/tmpq_k6re7a.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb6ed75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb6ea6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb6ea6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb6ea6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq_k6re7a                        0x0000556f50d3253a <unavailable> + 5434\n5    libc.so.6                          0x00002acb6ef61460 __libc_start_main + 245\n6    tmpq_k6re7a                        0x0000556f50d321a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count-1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp775gryi8/tmp775gryi8.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acfdfd62c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acfdfa59b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acfdfa59988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acfdfa587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp775gryi8                        0x00005619cccf353a <unavailable> + 5434\n5    libc.so.6                          0x00002acfdff4e460 __libc_start_main + 245\n6    tmp775gryi8                        0x00005619cccf31a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var arr = arr\n    arr.sort()\n    for i in 0..<arr.count-1 {\n        if arr[i] == arr[i+1] {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp2xuqgju0/tmp2xuqgju0.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c290fec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c28df5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c28df5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c28df47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2xuqgju0                        0x000055e5a6ad365a <unavailable> + 5722\n5    libc.so.6                          0x00002b3c292ea460 __libc_start_main + 245\n6    tmp2xuqgju0                        0x000055e5a6ad32c9 <unavailable> + 4809\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpe7kxmg5q/tmpe7kxmg5q.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae93521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae93218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae93218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae932177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe7kxmg5q                        0x000055ab8f78053a <unavailable> + 5434\n5    libc.so.6                          0x00002aae9370d460 __libc_start_main + 245\n6    tmpe7kxmg5q                        0x000055ab8f7801a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp6yu1nvr1/tmp6yu1nvr1.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0aa4b1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0aa4815b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0aa4815988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0aa48147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6yu1nvr1                        0x00005571e986f53a <unavailable> + 5434\n5    libc.so.6                          0x00002b0aa4d0a460 __libc_start_main + 245\n6    tmp6yu1nvr1                        0x00005571e986f1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpxfctdwd4/tmpxfctdwd4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1eb3e8ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1eb3b85b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1eb3b85988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1eb3b847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxfctdwd4                        0x0000563ae123a79a <unavailable> + 6042\n5    libc.so.6                          0x00002b1eb407a460 __libc_start_main + 245\n6    tmpxfctdwd4                        0x0000563ae123a409 <unavailable> + 5129\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        dict[i] = (dict[i] ?? 0) + 1\n    }\n    return dict.count == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var check = false\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            check = true\n        }\n        count = 0\n    }\n    return check\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpy_drhax0/tmpy_drhax0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3e9d00c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3e99f7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3e99f7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3e99f67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy_drhax0                        0x000055927a69353a <unavailable> + 5434\n5    libc.so.6                          0x00002ba3e9eec460 __libc_start_main + 245\n6    tmpy_drhax0                        0x000055927a6931a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (key, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpjnqd0y6v/tmpjnqd0y6v.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b551607ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5515d75b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5515d75988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5515d747b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjnqd0y6v                        0x000055b9e63af7ea <unavailable> + 6122\n5    libc.so.6                          0x00002b551626a460 __libc_start_main + 245\n6    tmpjnqd0y6v                        0x000055b9e63af459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in arr {\n        for j in arr {\n            if i == j {\n                count += 1\n            }\n        }\n    }\n    if count == arr.count {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp31fm597t/tmp31fm597t.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad75d582c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad75d279b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad75d279988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad75d2787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp31fm597t                        0x000055997caa94ba <unavailable> + 5306\n5    libc.so.6                          0x00002ad75d76e460 __libc_start_main + 245\n6    tmp31fm597t                        0x000055997caa9129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpfj7ufdb6/tmpfj7ufdb6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34040d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3403dc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3403dc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3403dc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfj7ufdb6                        0x000056403eb6b53a <unavailable> + 5434\n5    libc.so.6                          0x00002b34042bc460 __libc_start_main + 245\n6    tmpfj7ufdb6                        0x000056403eb6b1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict: [Int: Int] = [:]\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp1zeirqzl/tmp1zeirqzl.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23101c0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b230feb7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b230feb7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b230feb67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1zeirqzl                        0x00005625be64d80a <unavailable> + 6154\n5    libc.so.6                          0x00002b23103ac460 __libc_start_main + 245\n6    tmp1zeirqzl                        0x00005625be64d479 <unavailable> + 5241\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpa7_7dn13/tmpa7_7dn13.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aec4962fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aec49326b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aec49326988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aec493257b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa7_7dn13                        0x0000559e0dbf57ea <unavailable> + 6122\n5    libc.so.6                          0x00002aec4981b460 __libc_start_main + 245\n6    tmpa7_7dn13                        0x0000559e0dbf5459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in arr {\n        for j in arr {\n            if i == j {\n                count += 1\n            }\n        }\n        if count == 1 {\n            return true\n        }\n        count = 0\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp08bkl0be/tmp08bkl0be.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ac768dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ac7384b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4ac7384988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4ac73837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp08bkl0be                        0x0000559c0e82546a <unavailable> + 5226\n5    libc.so.6                          0x00002b4ac7879460 __libc_start_main + 245\n6    tmp08bkl0be                        0x0000559c0e8250d9 <unavailable> + 4313\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n        if count > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpewb33l6y/tmpewb33l6y.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5bf5fddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5bf5cd4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5bf5cd4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5bf5cd37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpewb33l6y                        0x0000556b01a5653a <unavailable> + 5434\n5    libc.so.6                          0x00002b5bf61c9460 __libc_start_main + 245\n6    tmpewb33l6y                        0x0000556b01a561a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for i in dict {\n        if i.value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmp282289pw/tmp282289pw.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba116548c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba11623fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba11623f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba11623e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp282289pw                        0x00005598e8ed37ea <unavailable> + 6122\n5    libc.so.6                          0x00002ba116734460 __libc_start_main + 245\n6    tmp282289pw                        0x00005598e8ed3459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp3n6ovjs4/tmp3n6ovjs4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b99a5866c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b99a555db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b99a555d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b99a555c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3n6ovjs4                        0x0000556648d6653a <unavailable> + 5434\n5    libc.so.6                          0x00002b99a5a52460 __libc_start_main + 245\n6    tmp3n6ovjs4                        0x0000556648d661a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if let _ = dict[i] {\n            return false\n        } else {\n            dict[i] = 1\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpf7m4x_1t/tmpf7m4x_1t.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7b70de6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7b70addb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7b70add988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7b70adc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpf7m4x_1t                        0x00005616dd1cf59a <unavailable> + 5530\n5    libc.so.6                          0x00002b7b70fd2460 __libc_start_main + 245\n6    tmpf7m4x_1t                        0x00005616dd1cf209 <unavailable> + 4617\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, v) in dict {\n        if v > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmp_bjzoxt0/tmp_bjzoxt0.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31f03a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31f0097b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b31f0097988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b31f00967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bjzoxt0                        0x000055581cc007ea <unavailable> + 6122\n5    libc.so.6                          0x00002b31f058c460 __libc_start_main + 245\n6    tmp_bjzoxt0                        0x000055581cc00459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpxtxoo9x0/tmpxtxoo9x0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc91388c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc9107fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc9107f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc9107e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxtxoo9x0                        0x0000563259d4853a <unavailable> + 5434\n5    libc.so.6                          0x00002acc91574460 __libc_start_main + 245\n6    tmpxtxoo9x0                        0x0000563259d481a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for num in arr {\n        if dict[num] == nil {\n            dict[num] = 1\n        } else {\n            dict[num]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value == 1 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpdks0vynf/tmpdks0vynf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae52b69c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae52860b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae52860988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae5285f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdks0vynf                        0x0000560737e887ea <unavailable> + 6122\n5    libc.so.6                          0x00002aae52d55460 __libc_start_main + 245\n6    tmpdks0vynf                        0x0000560737e88459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var count = 0\n    for i in 0..<arr.count {\n        for j in i+1..<arr.count {\n            if arr[i] == arr[j] {\n                count += 1\n            }\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpcq_osxnu/tmpcq_osxnu.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acea6c97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acea698eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acea698e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acea698d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcq_osxnu                        0x000056018f36853a <unavailable> + 5434\n5    libc.so.6                          0x00002acea6e83460 __libc_start_main + 245\n6    tmpcq_osxnu                        0x000056018f3681a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j && arr[i] == arr[j] {\n                unique = false\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1666123125,
      "stdout": "",
      "stderr": "tmpij5b6sr4/tmpij5b6sr4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93a6971c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93a6668b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93a6668988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93a66677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpij5b6sr4                        0x000055a9576ac53a <unavailable> + 5434\n5    libc.so.6                          0x00002b93a6b5d460 __libc_start_main + 245\n6    tmpij5b6sr4                        0x000055a9576ac1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var unique = true\n    for i in 0..<arr.count {\n        for j in 0..<arr.count {\n            if i != j {\n                if arr[i] == arr[j] {\n                    unique = false\n                }\n            }\n        }\n    }\n    return unique\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpsskm8wti/tmpsskm8wti.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e2a3b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e2a0aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e2a0ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e2a0ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsskm8wti                        0x000056391692c53a <unavailable> + 5434\n5    libc.so.6                          0x00002b8e2a5a3460 __libc_start_main + 245\n6    tmpsskm8wti                        0x000056391692c1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether an array of numbers contains only one distinct element or not.\nfunc unique_Element(arr: [Int]) -> Bool {\n    var dict = [Int: Int]()\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    for (_, value) in dict {\n        if value > 1 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_Element(arr: [1, 1, 1]) == true)\nassert(unique_Element(arr: [1, 2, 1, 2]) == false)\nassert(unique_Element(arr: [1, 2, 3, 4, 5]) == false)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "tmpv295_zdi/tmpv295_zdi.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66230aec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6622da5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6622da5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6622da47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv295_zdi                        0x0000564334b277ea <unavailable> + 6122\n5    libc.so.6                          0x00002b662329a460 __libc_start_main + 245\n6    tmpv295_zdi                        0x0000564334b27459 <unavailable> + 5209\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
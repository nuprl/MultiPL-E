{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "swift",
  "prompt": "\n/// Write a function to find the lateral surface area of a cone given radius r and the height h.\nfunc lateralsurface_cone(r: Int, h: Int) -> Double {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(lateralsurface_cone(r: 5, h: 12) == 204.20352248333654)\nassert(lateralsurface_cone(r: 10, h: 15) == 566.3586699569488)\nassert(lateralsurface_cone(r: 19, h: 17) == 1521.8090132193388)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let pi = 3.14\n    let lateral_surface_area = pi * Double(r) * sqrt(Double(r * r) + Double(h * h))\n    return lateral_surface_area",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(pow(Double(r), 2) + pow(Double(h), 2))\n    return lateral_surface",
    "    let pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\n    let lateral_surface = pi * Double(r) * sqrt(pow(Double(r), 2) + pow(Double(h), 2))\n    return lateral_surface",
    "    return Double.pi * Double(r) * sqrt(Double(r * r) + Double(h * h))",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))",
    "    return Double.pi * Double(r) * sqrt(pow(Double(h), 2) + pow(Double(r), 2))",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))",
    "    return Double.pi * Double(r) * sqrt(Double(r * r) + Double(h * h))",
    "    return Double.pi * Double(r) * Double(h)",
    "    return Double.pi * Double(r) * sqrt(Double(r * r) + Double(h * h))",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(Double(r * r) + Double(h * h))\n    return lateral_surface",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(Double(r * r) + Double(h * h))\n    return lateral_surface",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(Double(r * r + h * h))\n    return lateral_surface",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(Double(r * r) + Double(h * h))\n    return lateral_surface",
    "    let pi = 3.14\n    let lateral_surface_area = pi * Double(r) * sqrt(pow(Double(r), 2) + pow(Double(h), 2))\n    return lateral_surface_area",
    "    let pi = 3.14\n    let lateral_surface = pi * Double(r) * sqrt(Double(h * h) + Double(r * r))\n    return lateral_surface",
    "    return Double.pi * Double(r) * sqrt(Double(r * r + h * h))"
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "swift",
  "prompt": "\n/// Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\nfunc re_arrange_array(arr: [Int], n: Int) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(re_arrange_array(arr: [-1, 2, -3, 4, 5, 6, -7, 8, 9], n: 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9])\nassert(re_arrange_array(arr: [12, -14, -26, 13, 15], n: 5) == [-14, -26, 12, 13, 15])\nassert(re_arrange_array(arr: [10, 24, 36, -42, -39, -78, 85], n: 7) == [-42, -39, -78, 10, 24, 36, 85])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = -1\n    for j in 0..<n {\n        if arr[j] < 0 {\n            i += 1\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result = neg + pos\n    return result",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && result[i] < 0 {\n            i += 1\n        }\n        while i < j && result[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            result.swapAt(i, j)\n        }\n    }\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var new_arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < n && new_arr[i] < 0 {\n            i += 1\n        }\n        while j >= 0 && new_arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = new_arr[i]\n            new_arr[i] = new_arr[j]\n            new_arr[j] = temp\n        }\n    }\n    return new_arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] >= 0 {\n            j -= 1\n        } else {\n            arr.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] >= 0 {\n            positive.append(arr[i])\n        } else {\n            negative.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var i = 0\n    var j = n - 1\n    while i < n && j >= 0 {\n        if arr[i] < 0 {\n            result.append(arr[i])\n            i += 1\n        } else {\n            result.append(arr[j])\n            j -= 1\n        }\n    }\n    while i < n {\n        result.append(arr[i])\n        i += 1\n    }\n    while j >= 0 {\n        result.append(arr[j])\n        j -= 1\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] > 0 {\n            j -= 1\n        } else {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < n && arr[i] < 0 {\n            i += 1\n        }\n        while j >= 0 && arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negatives = [Int]()\n    var positives = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negatives.append(arr[i])\n        } else {\n            positives.append(arr[i])\n        }\n    }\n    result = negatives + positives\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result = neg + pos\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] > 0 {\n            j -= 1\n        } else {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result.append(contentsOf: neg)\n    result.append(contentsOf: pos)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if result[i] < 0 {\n            i += 1\n        } else {\n            result.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var i = 0\n    var j = n - 1\n    while i < n && j >= 0 {\n        if arr[i] < 0 {\n            result.append(arr[i])\n            i += 1\n        } else {\n            result.append(arr[j])\n            j -= 1\n        }\n    }\n    while i < n {\n        result.append(arr[i])\n        i += 1\n    }\n    while j >= 0 {\n        result.append(arr[j])\n        j -= 1\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && arr[i] < 0 {\n            i += 1\n        }\n        while i < j && arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result = neg + pos\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && result[i] < 0 {\n            i += 1\n        }\n        while i < j && result[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = result[i]\n            result[i] = result[j]\n            result[j] = temp\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    \n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && result[i] < 0 {\n            i += 1\n        }\n        while i < j && result[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            result.swapAt(i, j)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && arr[i] < 0 {\n            i += 1\n        }\n        while i < j && arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < n && arr[i] < 0 {\n            i += 1\n        }\n        while j >= 0 && arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var arr = arr\n    var i = -1\n    for j in 0..<n {\n        if arr[j] < 0 {\n            i += 1\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = -1\n    for j in 0..<n {\n        if arr[j] < 0 {\n            i += 1\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && arr[i] < 0 {\n            i += 1\n        }\n        while i < j && arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            result.swapAt(i, j)\n        }\n    }\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < n && arr[i] < 0 {\n            i += 1\n        }\n        while j >= 0 && arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = -1\n    for j in 0..<n {\n        if arr[j] < 0 {\n            i += 1\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if result[i] < 0 {\n            i += 1\n        } else {\n            result.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result: [Int] = []\n    var negative: [Int] = []\n    var positive: [Int] = []\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var new_arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && new_arr[i] < 0 {\n            i += 1\n        }\n        while i < j && new_arr[j] >= 0 {\n            j -= 1\n        }\n        new_arr.swapAt(i, j)\n    }\n    return new_arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result.append(contentsOf: neg)\n    result.append(contentsOf: pos)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            result.append(arr[i])\n        }\n    }\n    for i in 0..<n {\n        if arr[i] >= 0 {\n            result.append(arr[i])\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && result[i] < 0 {\n            i += 1\n        }\n        while i < j && result[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            result.swapAt(i, j)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && arr[i] < 0 {\n            i += 1\n        }\n        while i < j && arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var newArr = arr\n    var i = 0\n    var j = n - 1\n    \n    while i < j {\n        if newArr[i] < 0 {\n            i += 1\n        } else if newArr[j] > 0 {\n            j -= 1\n        } else {\n            newArr.swapAt(i, j)\n        }\n    }\n    \n    return newArr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] >= 0 {\n            j -= 1\n        } else {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && result[i] < 0 {\n            i += 1\n        }\n        while i < j && result[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            result.swapAt(i, j)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] >= 0 {\n            j -= 1\n        } else {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result: [Int] = []\n    var positive: [Int] = []\n    var negative: [Int] = []\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result = negative + positive\n    \n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    \n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] >= 0 {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    \n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    \n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    \n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    \n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] > 0 {\n            j -= 1\n        } else {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var newArr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if newArr[i] < 0 {\n            i += 1\n        } else {\n            newArr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return newArr",
    "    var newArr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while i < j && newArr[i] < 0 {\n            i += 1\n        }\n        while i < j && newArr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            newArr.swapAt(i, j)\n        }\n    }\n    return newArr",
    "    var result = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if result[i] < 0 {\n            i += 1\n        } else {\n            result.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 {\n            i += 1\n        }\n        while arr[j] > 0 {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var neg = [Int]()\n    var pos = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            neg.append(arr[i])\n        } else {\n            pos.append(arr[i])\n        }\n    }\n    result = neg + pos\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            arr.swapAt(i, j)\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] > 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    \n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else {\n            arr.swapAt(i, j)\n            j -= 1\n        }\n    }\n    \n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<arr.count {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        if arr[i] < 0 {\n            i += 1\n        } else if arr[j] > 0 {\n            j -= 1\n        } else {\n            arr.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return arr",
    "    var arr = arr\n    var i = 0\n    var j = n - 1\n    while i < j {\n        while arr[i] < 0 && i < j {\n            i += 1\n        }\n        while arr[j] >= 0 && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n        }\n    }\n    return arr",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result",
    "    var result = [Int]()\n    var negative = [Int]()\n    var positive = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result = negative + positive\n    return result",
    "    var result = [Int]()\n    var positive = [Int]()\n    var negative = [Int]()\n    for i in 0..<n {\n        if arr[i] < 0 {\n            negative.append(arr[i])\n        } else {\n            positive.append(arr[i])\n        }\n    }\n    result.append(contentsOf: negative)\n    result.append(contentsOf: positive)\n    return result"
  ]
}
{
  "name": "mbpp_623_nth_nums",
  "language": "swift",
  "prompt": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_623_nth_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result: [Int] = []\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpjjxnrdnv.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result: [Int] = []\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpjjxnrdnv.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result: [Int] = []\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpjjxnrdnv.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.pow(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmp1tje2pdf.swift:4:26: error: value of type 'Int' has no member 'pow'\n    return nums.map { $0.pow(n) }\n                      ~~ ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.power(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmpnv_5a37i.swift:4:26: error: value of type 'Int' has no member 'power'\n    return nums.map { $0.power(n) }\n                      ~~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { pow($0, n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpvn3_njwx.swift:4:23: error: cannot find 'pow' in scope\n    return nums.map { pow($0, n) }\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ** n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpt0z5mkf1.swift:4:26: error: cannot find operator '**' in scope\n    return nums.map { $0 ** n }\n                         ^~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { pow($0, n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmpvn3_njwx.swift:4:23: error: cannot find 'pow' in scope\n    return nums.map { pow($0, n) }\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0.pow(n) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmp1tje2pdf.swift:4:26: error: value of type 'Int' has no member 'pow'\n    return nums.map { $0.pow(n) }\n                      ~~ ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map({pow($0, n)})\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1666124134,
      "stdout": "",
      "stderr": "/tmp/tmprd_kohiw.swift:4:22: error: cannot find 'pow' in scope\n    return nums.map({pow($0, n)})\n                     ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    var result = [Int]()\n    for num in nums {\n        result.append(Int(pow(Double(num), Double(n))))\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509920,
      "stdout": "",
      "stderr": "/tmp/tmptz_6yr5_.swift:6:27: error: cannot find 'pow' in scope\n        result.append(Int(pow(Double(num), Double(n))))\n                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to compute the n-th power of each number in an array.\nfunc nth_nums(nums: [Int], n: Int) -> [Int] {\n    return nums.map { $0 ^ n }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(nth_nums(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], n: 2) == [1, 4, 9, 16, 25, 36, 49, 64, 81, 100])\nassert(nth_nums(nums: [10, 20, 30], n: 3) == [1000, 8000, 27000])\nassert(nth_nums(nums: [12, 15], n: 5) == [248832, 759375])",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "tmp98omlagi/tmp98omlagi.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47c9bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47c98b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b47c98b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b47c98b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98omlagi                        0x000055a0649004f1 <unavailable> + 5361\n5    libc.so.6                          0x00002b47c9da8460 __libc_start_main + 245\n6    tmp98omlagi                        0x000055a064900079 <unavailable> + 4217\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_293_otherside_rightangle",
  "language": "swift",
  "prompt": "\n/// Write a function to find the third side of a right angled triangle.\nfunc otherside_rightangle(w: Int, h: Int) -> Double {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(otherside_rightangle(w: 7, h: 8) == 10.63014581273465)\nassert(otherside_rightangle(w: 3, h: 4) == 5)\nassert(otherside_rightangle(w: 7, h: 15) == 16.55294535724685)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = pow(Double(w), 2)\n    let b = pow(Double(h), 2)\n    let c = sqrt(a + b)\n    return c",
    "    return sqrt(Double((w * w) + (h * h)))",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    return sqrt(Double(w*w + h*h))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = pow(Double(w), 2)\n    let y = pow(Double(h), 2)\n    let z = sqrt(x + y)\n    return z",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let side = sqrt(Double(w*w + h*h))\n    return side",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let sqrt = sqrt(Double(w * w + h * h))\n    return sqrt",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    return sqrt(Double(w*w + h*h))",
    "    let result = sqrt(Double(w*w + h*h))\n    return result",
    "    let x = pow(Double(w), 2)\n    let y = pow(Double(h), 2)\n    let z = sqrt(x + y)\n    return z",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    let result = sqrt(w2 + h2)\n    return result",
    "    let a = Double(w)\n    let b = Double(h)\n    return sqrt(pow(a, 2) + pow(b, 2))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let c = sqrt(Double(w * w + h * h))\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(pow(x,2) + pow(y,2))\n    return z",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    return sqrt(Double(w * w + h * h))",
    "    let side = sqrt(Double(w*w + h*h))\n    return side",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    let a = Double(w * w)\n    let b = Double(h * h)\n    let c = sqrt(a + b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    let o = sqrt(w2 + h2)\n    return o",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(x * x + y * y)\n    return z",
    "    return sqrt(Double(w * w + h * h))",
    "    let c = sqrt(Double(w * w + h * h))\n    return c",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    return sqrt(Double(w*w + h*h))",
    "    let d = sqrt(Double(w * w + h * h))\n    return d",
    "    let result = sqrt(Double(w*w + h*h))\n    return result",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = Double(w * w)\n    let b = Double(h * h)\n    let c = sqrt(a + b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let side = sqrt(Double(w * w + h * h))\n    return side",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    return sqrt(w2 + h2)",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    let result = sqrt(w2 + h2)\n    return result",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    return sqrt(w2 + h2)",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(x*x + y*y)\n    return z",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(x*x + y*y)\n    return z",
    "    return sqrt(Double(w*w + h*h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = pow(Double(w), 2)\n    let y = pow(Double(h), 2)\n    let z = sqrt(x + y)\n    return z",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w*w + h*h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a * a + b * b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let s = sqrt(Double(w * w + h * h))\n    return s",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a * a + b * b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(pow(x, 2) + pow(y, 2))\n    return z",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a * a + b * b)\n    return c",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    let result = sqrt(w2 + h2)\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let h2 = Double(h * h)\n    let w2 = Double(w * w)\n    let result = sqrt(h2 + w2)\n    return result",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let otherside = sqrt(Double(w * w + h * h))\n    return otherside",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let w2 = Double(w * w)\n    let h2 = Double(h * h)\n    return sqrt(w2 + h2)",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w * w)\n    let b = Double(h * h)\n    let c = sqrt(a + b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(pow(x, 2) + pow(y, 2))\n    return z",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    let x = pow(Double(w), 2)\n    let y = pow(Double(h), 2)\n    let z = sqrt(x + y)\n    return z",
    "    return sqrt(Double(w * w + h * h))",
    "    let hypotenuse = sqrt(Double(w*w + h*h))\n    return hypotenuse",
    "    let x = pow(Double(w), 2) + pow(Double(h), 2)\n    return sqrt(x)",
    "    let c = sqrt(Double(w * w + h * h))\n    return c",
    "    let c = sqrt(Double(w * w + h * h))\n    return c",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let c = sqrt(Double(w * w + h * h))\n    return c",
    "    let w2 = Double(w) * Double(w)\n    let h2 = Double(h) * Double(h)\n    let otherside = sqrt(w2 + h2)\n    return otherside",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(pow(x, 2) + pow(y, 2))\n    return z",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w * w + h * h))",
    "    let result = sqrt(Double(w * w + h * h))\n    return result",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))",
    "    let result = sqrt(Double(w*w + h*h))\n    return result",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    let x = Double(w * w + h * h)\n    return sqrt(x)",
    "    let x = Double(w)\n    let y = Double(h)\n    let z = sqrt(x*x + y*y)\n    return z",
    "    let hypotenuse = sqrt(Double(w * w + h * h))\n    return hypotenuse",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(a*a + b*b)\n    return c",
    "    let a = Double(w)\n    let b = Double(h)\n    let c = sqrt(pow(a, 2) + pow(b, 2))\n    return c",
    "    return sqrt(Double(w*w + h*h))",
    "    let d = sqrt(Double(w * w + h * h))\n    return d",
    "    return sqrt(Double(w * w + h * h))",
    "    return sqrt(Double(w*w + h*h))"
  ]
}
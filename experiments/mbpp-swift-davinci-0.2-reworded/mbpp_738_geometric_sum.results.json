{
  "name": "mbpp_738_geometric_sum",
  "language": "swift",
  "prompt": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpf1oy0j0u.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmp5v00xdd8.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpkkytiy8e.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n-1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpsl3rfdpe.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpsl3rfdpe.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmptkn1u6ym/tmptkn1u6ym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc3540c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc3237b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc3237988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc32367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptkn1u6ym                        0x0000555ee03cb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b5dc372c460 __libc_start_main + 245\n6    tmptkn1u6ym                        0x0000555ee03cae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return Double(1/pow(2, n)) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmprerthvq9.swift:7:21: error: cannot find 'pow' in scope\n    return Double(1/pow(2, n)) + geometric_sum(n: n-1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "/tmp/tmp5_bdg30b.swift:7:21: error: cannot find 'pow' in scope\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "/tmp/tmp5_bdg30b.swift:7:21: error: cannot find 'pow' in scope\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpt_f_b61g.swift:7:25: error: cannot find 'pow' in scope\n        return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                        ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / Double(n) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpzaxg6ems/tmpzaxg6ems.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae4a58bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae4a55b5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae4a55b5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae4a55b47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzaxg6ems                        0x000055cd4a8361c2 <unavailable> + 4546\n5    libc.so.6                          0x00002ae4a5aaa460 __libc_start_main + 245\n6    tmpzaxg6ems                        0x000055cd4a835e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpf1oy0j0u.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpyxtjf3k7.swift:7:21: error: cannot find 'pow' in scope\n        return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return (1.0 / Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpsmql2n3s/tmpsmql2n3s.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41429e1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41426d8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41426d8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41426d77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsmql2n3s                        0x000055c98e1eb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4142bcd460 __libc_start_main + 245\n6    tmpsmql2n3s                        0x000055c98e1eae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return Double(1 / pow(2, n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpagdzvoxe.swift:7:23: error: cannot find 'pow' in scope\n    return Double(1 / pow(2, n)) + geometric_sum(n: n - 1)\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpkkytiy8e.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n-1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpf1oy0j0u.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n - 1)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmp7f9uqcie.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n - 1)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpzu9oxq01.swift:4:29: error: cannot find 'pow' in scope\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                            ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1/Double(n) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpfz8e4oyq/tmpfz8e4oyq.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acd681d1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acd67ec8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acd67ec8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acd67ec77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfz8e4oyq                        0x000055f7e85e01c2 <unavailable> + 4546\n5    libc.so.6                          0x00002acd683bd460 __libc_start_main + 245\n6    tmpfz8e4oyq                        0x000055f7e85dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpze97s_k8.swift:7:23: error: cannot find 'pow' in scope\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpnohdfn8y/tmpnohdfn8y.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b67cc16fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b67cbe66b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b67cbe66988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b67cbe657b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnohdfn8y                        0x0000564c77dc61c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b67cc35b460 __libc_start_main + 245\n6    tmpnohdfn8y                        0x0000564c77dc5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpze97s_k8.swift:7:23: error: cannot find 'pow' in scope\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmp1jud31jo.swift:7:44: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n                                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmptkn1u6ym/tmptkn1u6ym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc3540c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc3237b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc3237988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc32367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptkn1u6ym                        0x0000555ee03cb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b5dc372c460 __libc_start_main + 245\n6    tmptkn1u6ym                        0x0000555ee03cae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmp5v00xdd8.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpsl3rfdpe.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpd9zuxw9j/tmpd9zuxw9j.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad18bc4fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad18b946b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad18b946988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad18b9457b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd9zuxw9j                        0x0000560555e541c2 <unavailable> + 4546\n5    libc.so.6                          0x00002ad18be3b460 __libc_start_main + 245\n6    tmpd9zuxw9j                        0x0000560555e53e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpf1oy0j0u.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmp5v00xdd8.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "/tmp/tmp5_bdg30b.swift:7:21: error: cannot find 'pow' in scope\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpajlb9wym/tmpajlb9wym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b15b6801c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b15b64f8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b15b64f8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b15b64f77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpajlb9wym                        0x000055f99f0931c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b15b69ed460 __libc_start_main + 245\n6    tmpajlb9wym                        0x000055f99f092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpsl3rfdpe.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpzu9oxq01.swift:4:29: error: cannot find 'pow' in scope\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                            ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmpajlb9wym/tmpajlb9wym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b15b6801c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b15b64f8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b15b64f8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b15b64f77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpajlb9wym                        0x000055f99f0931c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b15b69ed460 __libc_start_main + 245\n6    tmpajlb9wym                        0x000055f99f092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpf1oy0j0u.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 1 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmpsl3rfdpe.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmptkn1u6ym/tmptkn1u6ym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc3540c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc3237b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc3237988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc32367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptkn1u6ym                        0x0000555ee03cb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b5dc372c460 __libc_start_main + 245\n6    tmptkn1u6ym                        0x0000555ee03cae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * pow(0.5, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmp0rd9p791.swift:7:28: error: cannot find 'pow' in scope\n    return 1 + Double(n) * pow(0.5, Double(n))\n                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmptkn1u6ym/tmptkn1u6ym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc3540c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc3237b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc3237988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc32367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptkn1u6ym                        0x0000555ee03cb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b5dc372c460 __libc_start_main + 245\n6    tmptkn1u6ym                        0x0000555ee03cae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return Double(1/pow(2, n)) + geometric_sum(n: n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "/tmp/tmprerthvq9.swift:7:21: error: cannot find 'pow' in scope\n    return Double(1/pow(2, n)) + geometric_sum(n: n-1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "tmptcx5nbbo/tmptcx5nbbo.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7382558c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b738224fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b738224f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b738224e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptcx5nbbo                        0x000055db8e4021c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b7382744460 __libc_start_main + 245\n6    tmptcx5nbbo                        0x000055db8e401e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmpuhz954_2.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509865,
      "stdout": "",
      "stderr": "/tmp/tmp5v00xdd8.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/swiftthon-exercises/data-structures-and-algorithms/swiftthon-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122652,
      "stdout": "",
      "stderr": "tmptkn1u6ym/tmptkn1u6ym.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc3540c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc3237b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc3237988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc32367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptkn1u6ym                        0x0000555ee03cb1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b5dc372c460 __libc_start_main + 245\n6    tmptkn1u6ym                        0x0000555ee03cae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
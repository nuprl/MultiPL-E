{
  "name": "mbpp_96_divisor",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to find the number of divisors of a given integer.\nfunc divisor(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(divisor(n: 15) == 4)\nassert(divisor(n: 12) == 6)\nassert(divisor(n: 9) == 3)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 1...n {\n        if n % i == 0 {\n            count += 1\n        }\n    }\n    return count"
  ]
}
{
  "name": "mbpp_770_odd_num_sum",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to find the sum of fourth power of first n odd natural numbers.\nfunc odd_num_sum(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_num_sum(n: 2) == 82)\nassert(odd_num_sum(n: 3) == 707)\nassert(odd_num_sum(n: 4) == 3108)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    for i in 1...n {\n        sum += Int(pow(Double(2 * i - 1), 4))\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        sum += Int(pow(Double(2 * i - 1), 4))\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        sum += Int(pow(Double(2 * i - 1), 4))\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        sum += Int(pow(Double(2*i - 1), 4))\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum",
    "    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i * i * i\n        }\n    }\n    return sum"
  ]
}
{
  "name": "mbpp_622_get_median",
  "language": "swift",
  "prompt": "\n/// Write a function to find the median of two sorted arrays of same size.\nfunc get_median(arr1: [Int], arr2: [Int], n: Int) -> Double {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_median(arr1: [1, 12, 15, 26, 38], arr2: [2, 13, 17, 30, 45], n: 5) == 16.0)\nassert(get_median(arr1: [2, 4, 8, 9], arr2: [7, 13, 19, 28], n: 4) == 8.5)\nassert(get_median(arr1: [3, 6, 14, 23, 36, 42], arr2: [2, 18, 27, 39, 49, 55], n: 6) == 25.0)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var i = 0, j = 0\n    var m1 = -1, m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    while count < n + 1 {\n        count += 1\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    while count < n + 1 {\n        count += 1\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    \n    while count < n + 1 {\n        count += 1\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    while count < n + 1 {\n        count += 1\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    \n    while count < n + 1 {\n        count += 1\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    var count = 0\n    \n    while count < n + 1 {\n        count += 1\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    for _ in 0..<(n + 1) / 2 {\n        m1 = m2\n        if i == n {\n            m2 = arr2[0]\n            j += 1\n        } else if j == n {\n            m2 = arr1[0]\n            i += 1\n        } else if arr1[i] < arr2[j] {\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    if n % 2 == 0 {\n        return Double(m1 + m2) / 2\n    }\n    return Double(m2)",
    "    var i = 0\n    var j = 0\n    var m1 = -1, m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var count = 0\n    var m1 = -1\n    var m2 = -1\n    \n    while count < n + 1 {\n        count += 1\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    return Double(m1 + m2) / 2",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0",
    "    var i = 0\n    var j = 0\n    var m1 = -1\n    var m2 = -1\n    \n    for _ in 0..<n+1 {\n        if i == n {\n            m1 = m2\n            m2 = arr2[0]\n            break\n        } else if j == n {\n            m1 = m2\n            m2 = arr1[0]\n            break\n        }\n        \n        if arr1[i] < arr2[j] {\n            m1 = m2\n            m2 = arr1[i]\n            i += 1\n        } else {\n            m1 = m2\n            m2 = arr2[j]\n            j += 1\n        }\n    }\n    \n    return Double(m1 + m2) / 2.0"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "swift",
  "prompt": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, string.count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmppuztav_f/tmppuztav_f.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9f4fd2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9f4fa25b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9f4fa25988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9f4fa247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppuztav_f                        0x00005634f60734f4 <unavailable> + 5364\n5    libc.so.6                          0x00002b9f4ff1a460 __libc_start_main + 245\n6    tmppuztav_f                        0x00005634f6073179 <unavailable> + 4473\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max_length = max(max_length, count)\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count > max_length {\n            max_length = count\n        }\n        if zero_count == one_count {\n            count = 0\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpx9rg8h_y/tmpx9rg8h_y.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e5e714c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e5e40bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e5e40b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e5e40a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx9rg8h_y                        0x000055838a156414 <unavailable> + 5140\n5    libc.so.6                          0x00002b4e5e900460 __libc_start_main + 245\n6    tmpx9rg8h_y                        0x000055838a156099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for i in 0..<string.count {\n        let index = string.index(string.startIndex, offsetBy: i)\n        if string[index] == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        count = zero_count - one_count\n        if count == 0 {\n            max_length = max(max_length, i + 1)\n        }\n        \n        if let index = hashMap[count] {\n            max_length = max(max_length, i - index)\n        } else {\n            hashMap[count] = i\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517294,
      "stdout": "",
      "stderr": "/tmp/tmpu2d0xm1h.swift:22:24: error: cannot find 'hashMap' in scope\n        if let index = hashMap[count] {\n                       ^~~~~~~\n/tmp/tmpu2d0xm1h.swift:25:13: error: cannot find 'hashMap' in scope\n            hashMap[count] = i\n            ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    let array = Array(string)\n    var maxLength = 0\n    var count = 0\n    for i in 0..<array.count {\n        if array[i] == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = i + 1\n        }\n        if let index = dict[count] {\n            maxLength = max(maxLength, i - index)\n        } else {\n            dict[count] = i\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517294,
      "stdout": "",
      "stderr": "/tmp/tmpwcezq3fg.swift:16:24: error: cannot find 'dict' in scope\n        if let index = dict[count] {\n                       ^~~~\n/tmp/tmpwcezq3fg.swift:19:13: error: cannot find 'dict' in scope\n            dict[count] = i\n            ^~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    zeroCount = 0\n    oneCount = 0\n    count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcpty0qjo/tmpcpty0qjo.swift:57: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41ed347c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41ed03eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41ed03e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41ed03d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcpty0qjo                        0x000055856059d714 <unavailable> + 5908\n5    libc.so.6                          0x00002b41ed533460 __libc_start_main + 245\n6    tmpcpty0qjo                        0x000055856059d399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        count += 1\n        if count_0 == count_1 {\n            max_length = max(max_length, count)\n        }\n    }\n    count = 0\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        count += 1\n        if count_0 == count_1 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsk6_qkmv/tmpsk6_qkmv.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b07e57cec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b07e54c5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b07e54c5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b07e54c47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsk6_qkmv                        0x00005595bb643714 <unavailable> + 5908\n5    libc.so.6                          0x00002b07e59ba460 __libc_start_main + 245\n6    tmpsk6_qkmv                        0x00005595bb643399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmph1ygttl8/tmph1ygttl8.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58d82efc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58d7fe6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58d7fe6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58d7fe57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph1ygttl8                        0x0000562f70858714 <unavailable> + 5908\n5    libc.so.6                          0x00002b58d84db460 __libc_start_main + 245\n6    tmph1ygttl8                        0x0000562f70858399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpfihjfuwa/tmpfihjfuwa.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8bf5eac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8bf2e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8bf2e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8bf2e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfihjfuwa                        0x000056060992a714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac8bf7d6460 __libc_start_main + 245\n6    tmpfihjfuwa                        0x000056060992a399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpgcct_pyl/tmpgcct_pyl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7487daac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7487aa1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7487aa1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7487aa07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcct_pyl                        0x000055f056a6c4f4 <unavailable> + 5364\n5    libc.so.6                          0x00002b7487f96460 __libc_start_main + 245\n6    tmpgcct_pyl                        0x000055f056a6c179 <unavailable> + 4473\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero * 2)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpdfy2owbk/tmpdfy2owbk.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b179980bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1799502b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1799502988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17995017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdfy2owbk                        0x0000556de1620714 <unavailable> + 5908\n5    libc.so.6                          0x00002b17999f7460 __libc_start_main + 245\n6    tmpdfy2owbk                        0x0000556de1620399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        if zeros == ones {\n            maxLength = max(maxLength, zeros + ones)\n        }\n    }\n    zeros = 0\n    ones = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        if zeros == ones {\n            maxLength = max(maxLength, zeros + ones)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp3wh9wvsn/tmp3wh9wvsn.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aad7f8b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aad7f5abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aad7f5ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aad7f5aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3wh9wvsn                        0x000055aab6bef714 <unavailable> + 5908\n5    libc.so.6                          0x00002aad7faa0460 __libc_start_main + 245\n6    tmp3wh9wvsn                        0x000055aab6bef399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max_length = max(max_length, count)\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for i in 0..<string.count {\n        let index = string.index(string.startIndex, offsetBy: i)\n        if string[index] == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count > max_length {\n            max_length = count\n        }\n        if zero_count == one_count {\n            count = 0\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0usv0syo/tmp0usv0syo.swift:41: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7d3c2d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7d3bfc9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7d3bfc9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7d3bfc87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0usv0syo                        0x0000565358f79654 <unavailable> + 5716\n5    libc.so.6                          0x00002b7d3c4be460 __libc_start_main + 245\n6    tmp0usv0syo                        0x0000565358f792d9 <unavailable> + 4825\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp156euhzl/tmp156euhzl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ea8542c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ea8239b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ea8239988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ea82387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp156euhzl                        0x0000563b403e54a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3ea872e460 __libc_start_main + 245\n6    tmp156euhzl                        0x0000563b403e5129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[string.index(string.startIndex, offsetBy: j)] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n            j += 1\n        } else if count < 0 {\n            i = j + 1\n            j = i\n            count = 0\n        } else {\n            j += 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0mm1yq48/tmp0mm1yq48.swift:41: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6bc4a20c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6bc4717b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6bc4717988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6bc47167b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0mm1yq48                        0x000055ff60f62554 <unavailable> + 5460\n5    libc.so.6                          0x00002b6bc4c0c460 __libc_start_main + 245\n6    tmp0mm1yq48                        0x000055ff60f621d9 <unavailable> + 4569\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpvzrvl2yz/tmpvzrvl2yz.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc70f4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc6debb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc6deb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc6dea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvzrvl2yz                        0x00005582498714a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b5dc72e0460 __libc_start_main + 245\n6    tmpvzrvl2yz                        0x0000558249871129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpudgsfje2.swift:13:87: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n                                                                                      ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count == string.count {\n            if abs(zero_count - one_count) > max_length {\n                max_length = abs(zero_count - one_count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpk_cuy0xv/tmpk_cuy0xv.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae4c8865c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae4c855cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae4c855c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae4c855b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk_cuy0xv                        0x0000560ce6e94544 <unavailable> + 5444\n5    libc.so.6                          0x00002ae4c8a51460 __libc_start_main + 245\n6    tmpk_cuy0xv                        0x0000560ce6e941c9 <unavailable> + 4553\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"1\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmphfc3b49w/tmphfc3b49w.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3bdc65dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3bdc354b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3bdc354988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3bdc3537b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphfc3b49w                        0x0000556c8b9854a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3bdc849460 __libc_start_main + 245\n6    tmphfc3b49w                        0x0000556c8b985129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count > 1 {\n            if abs(zero_count - one_count) > max_length {\n                max_length = abs(zero_count - one_count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpo2h06bbh/tmpo2h06bbh.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afa2d1e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afa2cedbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afa2cedb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afa2ceda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo2h06bbh                        0x0000564906ba2504 <unavailable> + 5380\n5    libc.so.6                          0x00002afa2d3d0460 __libc_start_main + 245\n6    tmpo2h06bbh                        0x0000564906ba2189 <unavailable> + 4489\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        count += 1\n        if count_zero == count_one {\n            max_length = max(max_length, count)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        count += 1\n        if count_zero == count_one {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpktpngj_4/tmpktpngj_4.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b64dc4b0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b64dc1a7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b64dc1a7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b64dc1a67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpktpngj_4                        0x0000558d0c868714 <unavailable> + 5908\n5    libc.so.6                          0x00002b64dc69c460 __libc_start_main + 245\n6    tmpktpngj_4                        0x0000558d0c868399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpgcct_pyl/tmpgcct_pyl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7487daac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7487aa1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7487aa1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7487aa07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcct_pyl                        0x000055f056a6c4f4 <unavailable> + 5364\n5    libc.so.6                          0x00002b7487f96460 __libc_start_main + 245\n6    tmpgcct_pyl                        0x000055f056a6c179 <unavailable> + 4473\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if zeros == ones {\n            max_length = max(max_length, count)\n        }\n    }\n    zeros = 0\n    ones = 0\n    count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if zeros == ones {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp6knfqs8f/tmp6knfqs8f.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6ccb625c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6ccb31cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6ccb31c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6ccb31b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6knfqs8f                        0x000055ac0172e714 <unavailable> + 5908\n5    libc.so.6                          0x00002b6ccb811460 __libc_start_main + 245\n6    tmp6knfqs8f                        0x000055ac0172e399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9ffv47ru/tmp9ffv47ru.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b85a4732c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b85a4429b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b85a4429988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b85a44287b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9ffv47ru                        0x000056066f9d3714 <unavailable> + 5908\n5    libc.so.6                          0x00002b85a491e460 __libc_start_main + 245\n6    tmp9ffv47ru                        0x000056066f9d3399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp80ukl8pe.swift:13:85: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            maxLength = max(maxLength, string.distance(from: string.startIndex, to: char))\n                                                                                    ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var count = 0\n    var max = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp87ny2spx/tmp87ny2spx.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adc20382c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adc20079b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adc20079988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adc200787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp87ny2spx                        0x000055dbe95a7414 <unavailable> + 5140\n5    libc.so.6                          0x00002adc2056e460 __libc_start_main + 245\n6    tmp87ny2spx                        0x000055dbe95a7099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[string.index(string.startIndex, offsetBy: j)] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        } else if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp2scxu_eg/tmp2scxu_eg.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af6435adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af6432a4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af6432a4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af6432a37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2scxu_eg                        0x0000563da90ee554 <unavailable> + 5460\n5    libc.so.6                          0x00002af643799460 __libc_start_main + 245\n6    tmp2scxu_eg                        0x0000563da90ee1d9 <unavailable> + 4569\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmph1ygttl8/tmph1ygttl8.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58d82efc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58d7fe6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58d7fe6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58d7fe57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph1ygttl8                        0x0000562f70858714 <unavailable> + 5908\n5    libc.so.6                          0x00002b58d84db460 __libc_start_main + 245\n6    tmph1ygttl8                        0x0000562f70858399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for i in 0..<string.count {\n        let index = string.index(string.startIndex, offsetBy: i)\n        if string[index] == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp4htnrjqj/tmp4htnrjqj.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b86f9b10c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b86f9807b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b86f9807988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b86f98067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4htnrjqj                        0x00005561838d56d4 <unavailable> + 5844\n5    libc.so.6                          0x00002b86f9cfc460 __libc_start_main + 245\n6    tmp4htnrjqj                        0x00005561838d5359 <unavailable> + 4953\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_len = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_len = max(max_len, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_len\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpm039_sq7.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var count1 = 0\n    var count2 = 0\n    for char in string {\n        if char == \"1\" {\n            count1 += 1\n        } else {\n            count2 += 1\n        }\n        count += 1\n        if count1 == count2 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    count1 = 0\n    count2 = 0\n    count = 0\n    for char in string.reversed() {\n        if char == \"1\" {\n            count1 += 1\n        } else {\n            count2 += 1\n        }\n        count += 1\n        if count1 == count2 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmptqmks3e5/tmptqmks3e5.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6be29fec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6be26f5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6be26f5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6be26f47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptqmks3e5                        0x000055f9aa6bd714 <unavailable> + 5908\n5    libc.so.6                          0x00002b6be2bea460 __libc_start_main + 245\n6    tmptqmks3e5                        0x000055f9aa6bd399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpxhqpc2q7.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpy9m47gk4/tmpy9m47gk4.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac3c2e87c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac3c2b7eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac3c2b7e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac3c2b7d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy9m47gk4                        0x000056491a47b714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac3c3073460 __libc_start_main + 245\n6    tmpy9m47gk4                        0x000056491a47b399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp156euhzl/tmp156euhzl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ea8542c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ea8239b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ea8239988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ea82387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp156euhzl                        0x0000563b403e54a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3ea872e460 __libc_start_main + 245\n6    tmp156euhzl                        0x0000563b403e5129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var count1 = 0\n    var count0 = 0\n    for i in string {\n        if i == \"1\" {\n            count1 += 1\n        } else {\n            count0 += 1\n        }\n        count += 1\n        if count1 == count0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    count1 = 0\n    count0 = 0\n    count = 0\n    for i in string.reversed() {\n        if i == \"1\" {\n            count1 += 1\n        } else {\n            count0 += 1\n        }\n        count += 1\n        if count1 == count0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpvjlmd1bb/tmpvjlmd1bb.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20ba3b0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20ba0a7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20ba0a7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20ba0a67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvjlmd1bb                        0x0000557eb7037714 <unavailable> + 5908\n5    libc.so.6                          0x00002b20ba59c460 __libc_start_main + 245\n6    tmpvjlmd1bb                        0x0000557eb7037399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var count = 0\n    var max = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp4bzfjz1f/tmp4bzfjz1f.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaac5c16c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaac590db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaac590d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaac590c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4bzfjz1f                        0x00005556f81ae414 <unavailable> + 5140\n5    libc.so.6                          0x00002aaac5e02460 __libc_start_main + 245\n6    tmp4bzfjz1f                        0x00005556f81ae099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            count = zeroCount + oneCount\n            maxLength = max(count, maxLength)\n        }\n    }\n    \n    zeroCount = 0\n    oneCount = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            count = zeroCount + oneCount\n            maxLength = max(count, maxLength)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpsi8ebzul/tmpsi8ebzul.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ada8d163c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ada8ce5ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ada8ce5a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ada8ce597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsi8ebzul                        0x0000561a167c6714 <unavailable> + 5908\n5    libc.so.6                          0x00002ada8d34f460 __libc_start_main + 245\n6    tmpsi8ebzul                        0x0000561a167c6399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        \n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqe_m8zqs/tmpqe_m8zqs.swift:39: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b5075bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b50452b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b50452988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b504517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqe_m8zqs                        0x000055a9c64d9534 <unavailable> + 5428\n5    libc.so.6                          0x00002b4b50947460 __libc_start_main + 245\n6    tmpqe_m8zqs                        0x000055a9c64d91b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                max_length = count\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgsgy237x/tmpgsgy237x.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad646c13c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad64690ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad64690a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad6469097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgsgy237x                        0x000055b8d2d5d4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ad646dff460 __libc_start_main + 245\n6    tmpgsgy237x                        0x000055b8d2d5d129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpx2274yp2/tmpx2274yp2.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b163751fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1637216b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1637216988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b16372157b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx2274yp2                        0x0000556486e674a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b163770b460 __libc_start_main + 245\n6    tmpx2274yp2                        0x0000556486e67129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxDiff = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > maxDiff {\n            maxDiff = count\n        }\n    }\n    return maxDiff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp48j047ab/tmp48j047ab.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7ae7d04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7ae79fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7ae79fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7ae79fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp48j047ab                        0x00005572d9436534 <unavailable> + 5428\n5    libc.so.6                          0x00002b7ae7ef0460 __libc_start_main + 245\n6    tmp48j047ab                        0x00005572d94361b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpw0n9byyv/tmpw0n9byyv.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0373c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0370beb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0370be988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0370bd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw0n9byyv                        0x000055f1e813e534 <unavailable> + 5428\n5    libc.so.6                          0x00002ac0375b3460 __libc_start_main + 245\n6    tmpw0n9byyv                        0x000055f1e813e1b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    var zero = 0\n    var one = 0\n    for char in string {\n        if char == \"0\" {\n            zero += 1\n        } else {\n            one += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero == one {\n                max = count\n            }\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9ddjet18/tmp9ddjet18.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6355e85c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6355b7cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6355b7c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6355b7b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9ddjet18                        0x0000564aa7f614a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b6356071460 __libc_start_main + 245\n6    tmp9ddjet18                        0x0000564aa7f61129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpgcct_pyl/tmpgcct_pyl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7487daac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7487aa1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7487aa1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7487aa07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcct_pyl                        0x000055f056a6c4f4 <unavailable> + 5364\n5    libc.so.6                          0x00002b7487f96460 __libc_start_main + 245\n6    tmpgcct_pyl                        0x000055f056a6c179 <unavailable> + 4473\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = string.count - 1\n    while i < j {\n        if string[i] == \"1\" {\n            count += 1\n        }\n        if string[j] == \"0\" {\n            count += 1\n        }\n        max_length = max(max_length, count)\n        i += 1\n        j -= 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp16t1jiof.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"1\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n/tmp/tmp16t1jiof.swift:12:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[j] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp156euhzl/tmp156euhzl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ea8542c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ea8239b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ea8239988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ea82387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp156euhzl                        0x0000563b403e54a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3ea872e460 __libc_start_main + 245\n6    tmp156euhzl                        0x0000563b403e5129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count == 2 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n            count = 0\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpcczrqi39/tmpcczrqi39.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0ed2acc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0ecfa3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0ecfa3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0ecfa27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcczrqi39                        0x000055ce00c954a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ac0ed498460 __libc_start_main + 245\n6    tmpcczrqi39                        0x000055ce00c95129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp07bi3k27/tmp07bi3k27.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af82a2ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af829ff6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af829ff6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af829ff57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp07bi3k27                        0x00005582c8558714 <unavailable> + 5908\n5    libc.so.6                          0x00002af82a4eb460 __libc_start_main + 245\n6    tmp07bi3k27                        0x00005582c8558399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp07bi3k27/tmp07bi3k27.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af82a2ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af829ff6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af829ff6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af829ff57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp07bi3k27                        0x00005582c8558714 <unavailable> + 5908\n5    libc.so.6                          0x00002af82a4eb460 __libc_start_main + 245\n6    tmp07bi3k27                        0x00005582c8558399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            count = count_zero + count_one\n            max_length = max(max_length, count)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            count = count_zero + count_one\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpdsbx7lcr/tmpdsbx7lcr.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b907ba8ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b907b785b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b907b785988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b907b7847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdsbx7lcr                        0x000055af94e05714 <unavailable> + 5908\n5    libc.so.6                          0x00002b907bc7a460 __libc_start_main + 245\n6    tmpdsbx7lcr                        0x000055af94e05399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            max = max > abs(zeroCount - oneCount) ? max : abs(zeroCount - oneCount)\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmppkxkvuky/tmppkxkvuky.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f3e31bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f3e012b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f3e012988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f3e0117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppkxkvuky                        0x0000564a2201d594 <unavailable> + 5524\n5    libc.so.6                          0x00002b5f3e507460 __libc_start_main + 245\n6    tmppkxkvuky                        0x0000564a2201d219 <unavailable> + 4633\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n            count = 0\n        } else {\n            count += 1\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp3k8pnahl/tmp3k8pnahl.swift:43: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5e1ac92c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5e1a989b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5e1a989988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5e1a9887b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3k8pnahl                        0x000056538a6124a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b5e1ae7e460 __libc_start_main + 245\n6    tmp3k8pnahl                        0x000056538a612129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string.characters {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmppsowa3k5.swift:6:24: error: 'characters' is unavailable: Please use String directly\n    for char in string.characters {\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgdrew0ep/tmpgdrew0ep.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae82be6cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae82bb63b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae82bb63988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae82bb627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgdrew0ep                        0x00005648ea3d0714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae82c058460 __libc_start_main + 245\n6    tmpgdrew0ep                        0x00005648ea3d0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp156euhzl/tmp156euhzl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ea8542c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ea8239b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ea8239988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ea82387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp156euhzl                        0x0000563b403e54a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3ea872e460 __libc_start_main + 245\n6    tmp156euhzl                        0x0000563b403e5129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp48j047ab/tmp48j047ab.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7ae7d04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7ae79fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7ae79fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7ae79fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp48j047ab                        0x00005572d9436534 <unavailable> + 5428\n5    libc.so.6                          0x00002b7ae7ef0460 __libc_start_main + 245\n6    tmp48j047ab                        0x00005572d94361b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9dtwoaz6/tmp9dtwoaz6.swift:48: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13d4bf7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13d48eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13d48ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13d48ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9dtwoaz6                        0x00005636dbb85714 <unavailable> + 5908\n5    libc.so.6                          0x00002b13d4de3460 __libc_start_main + 245\n6    tmp9dtwoaz6                        0x00005636dbb85399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    let array = Array(string)\n    var max = 0\n    var count = 0\n    for i in 0..<array.count {\n        if array[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        count += 1\n        \n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        count += 1\n        \n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0d4bs6wl/tmp0d4bs6wl.swift:57: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abae238dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abae2084b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abae2084988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abae20837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0d4bs6wl                        0x0000559d39225714 <unavailable> + 5908\n5    libc.so.6                          0x00002abae2579460 __libc_start_main + 245\n6    tmp0d4bs6wl                        0x0000559d39225399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp07bi3k27/tmp07bi3k27.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af82a2ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af829ff6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af829ff6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af829ff57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp07bi3k27                        0x00005582c8558714 <unavailable> + 5908\n5    libc.so.6                          0x00002af82a4eb460 __libc_start_main + 245\n6    tmp07bi3k27                        0x00005582c8558399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp48j047ab/tmp48j047ab.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7ae7d04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7ae79fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7ae79fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7ae79fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp48j047ab                        0x00005572d9436534 <unavailable> + 5428\n5    libc.so.6                          0x00002b7ae7ef0460 __libc_start_main + 245\n6    tmp48j047ab                        0x00005572d94361b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    count = 0\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp6unw6po8/tmp6unw6po8.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6371976c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b637166db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b637166d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b637166c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6unw6po8                        0x0000561270755714 <unavailable> + 5908\n5    libc.so.6                          0x00002b6371b62460 __libc_start_main + 245\n6    tmp6unw6po8                        0x0000561270755399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            count = zeroCount + oneCount\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    zeroCount = 0\n    oneCount = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            count = zeroCount + oneCount\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpbtq11me6/tmpbtq11me6.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad50bec1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad50bbb8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad50bbb8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad50bbb77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbtq11me6                        0x000055f11e346714 <unavailable> + 5908\n5    libc.so.6                          0x00002ad50c0ad460 __libc_start_main + 245\n6    tmpbtq11me6                        0x000055f11e346399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgdrew0ep/tmpgdrew0ep.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae82be6cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae82bb63b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae82bb63988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae82bb627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgdrew0ep                        0x00005648ea3d0714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae82c058460 __libc_start_main + 245\n6    tmpgdrew0ep                        0x00005648ea3d0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = string.count - 1\n    while i < j {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        i += 1\n        j -= 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmp2js3syil.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    count = 0\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmp_ksn7wik/tmp_ksn7wik.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af6d2ee4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af6d2bdbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af6d2bdb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af6d2bda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ksn7wik                        0x000055f50f2c0714 <unavailable> + 5908\n5    libc.so.6                          0x00002af6d30d0460 __libc_start_main + 245\n6    tmp_ksn7wik                        0x000055f50f2c0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count = zeroCount - oneCount\n        \n        if count == 0 {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        }\n        \n        if let index = hashMap[count] {\n            maxLength = max(maxLength, zeroCount + oneCount - index)\n        } else {\n            hashMap[count] = zeroCount + oneCount\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpgrh0wkxd.swift:22:24: error: cannot find 'hashMap' in scope\n        if let index = hashMap[count] {\n                       ^~~~~~~\n/tmp/tmpgrh0wkxd.swift:25:13: error: cannot find 'hashMap' in scope\n            hashMap[count] = zeroCount + oneCount\n            ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgdrew0ep/tmpgdrew0ep.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae82be6cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae82bb63b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae82bb63988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae82bb627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgdrew0ep                        0x00005648ea3d0714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae82c058460 __libc_start_main + 245\n6    tmpgdrew0ep                        0x00005648ea3d0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n        if count < 0 {\n            count = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmph50raw6m/tmph50raw6m.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b19d0757c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b19d044eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b19d044e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b19d044d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph50raw6m                        0x000055776106a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b19d0943460 __libc_start_main + 245\n6    tmph50raw6m                        0x000055776106a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max_length = max(max_length, count)\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpmp8hl5q7/tmpmp8hl5q7.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0a5bb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0a58b0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0a58b0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0a58af7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmp8hl5q7                        0x000055bf488084a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ac0a5da5460 __libc_start_main + 245\n6    tmpmp8hl5q7                        0x000055bf48808129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpulerjmpm/tmpulerjmpm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae536d9ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae536a91b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae536a91988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae536a907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpulerjmpm                        0x000055664783d4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ae536f86460 __libc_start_main + 245\n6    tmpulerjmpm                        0x000055664783d129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max = max > count ? max : count\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpacdzifcq/tmpacdzifcq.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b3858ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b38281b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b38281988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b382807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpacdzifcq                        0x0000555793ac9414 <unavailable> + 5140\n5    libc.so.6                          0x00002b4b38776460 __libc_start_main + 245\n6    tmpacdzifcq                        0x0000555793ac9099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpy9m47gk4/tmpy9m47gk4.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac3c2e87c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac3c2b7eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac3c2b7e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac3c2b7d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy9m47gk4                        0x000056491a47b714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac3c3073460 __libc_start_main + 245\n6    tmpy9m47gk4                        0x000056491a47b399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero = 0\n    var one = 0\n    for char in string {\n        if char == \"0\" {\n            zero += 1\n        } else {\n            one += 1\n        }\n        count += 1\n        if zero == one {\n            max_length = max(max_length, count)\n        }\n    }\n    zero = 0\n    one = 0\n    count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero += 1\n        } else {\n            one += 1\n        }\n        count += 1\n        if zero == one {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmph2m053bw/tmph2m053bw.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b29ea345c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b29ea03cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b29ea03c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b29ea03b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph2m053bw                        0x00005573047ed714 <unavailable> + 5908\n5    libc.so.6                          0x00002b29ea531460 __libc_start_main + 245\n6    tmph2m053bw                        0x00005573047ed399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp07bi3k27/tmp07bi3k27.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af82a2ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af829ff6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af829ff6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af829ff57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp07bi3k27                        0x00005582c8558714 <unavailable> + 5908\n5    libc.so.6                          0x00002af82a4eb460 __libc_start_main + 245\n6    tmp07bi3k27                        0x00005582c8558399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpzhzgubnb/tmpzhzgubnb.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9b3f662c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9b3f359b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9b3f359988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9b3f3587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzhzgubnb                        0x00005579833b1714 <unavailable> + 5908\n5    libc.so.6                          0x00002b9b3f84e460 __libc_start_main + 245\n6    tmpzhzgubnb                        0x00005579833b1399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count > maxLength {\n            maxLength = count\n        }\n        if zeroCount == oneCount {\n            count = 0\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpfljjyb8x/tmpfljjyb8x.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c7746cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c77163b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c77163988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c771627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfljjyb8x                        0x0000563a13247414 <unavailable> + 5140\n5    libc.so.6                          0x00002b9c77658460 __libc_start_main + 245\n6    tmpfljjyb8x                        0x0000563a13247099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgdrew0ep/tmpgdrew0ep.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae82be6cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae82bb63b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae82bb63988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae82bb627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgdrew0ep                        0x00005648ea3d0714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae82c058460 __libc_start_main + 245\n6    tmpgdrew0ep                        0x00005648ea3d0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpvzrvl2yz/tmpvzrvl2yz.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc70f4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc6debb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc6deb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc6dea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvzrvl2yz                        0x00005582498714a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b5dc72e0460 __libc_start_main + 245\n6    tmpvzrvl2yz                        0x0000558249871129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            max_length = max(max_length, zero_count + one_count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            max_length = max(max_length, zero_count + one_count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpsvc2f0hz/tmpsvc2f0hz.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac1a8c34c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac1a892bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac1a892b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac1a892a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsvc2f0hz                        0x00005562da56b714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac1a8e20460 __libc_start_main + 245\n6    tmpsvc2f0hz                        0x00005562da56b399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpeqfj91un/tmpeqfj91un.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b156ee5bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b156eb52b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b156eb52988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b156eb517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeqfj91un                        0x000055e4be1ce714 <unavailable> + 5908\n5    libc.so.6                          0x00002b156f047460 __libc_start_main + 245\n6    tmpeqfj91un                        0x000055e4be1ce399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"1\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmphfc3b49w/tmphfc3b49w.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3bdc65dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3bdc354b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3bdc354988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3bdc3537b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphfc3b49w                        0x0000556c8b9854a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3bdc849460 __libc_start_main + 245\n6    tmphfc3b49w                        0x0000556c8b985129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpy_gya1nm/tmpy_gya1nm.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2157418c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b215710fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b215710f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b215710e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy_gya1nm                        0x0000558ae26b6714 <unavailable> + 5908\n5    libc.so.6                          0x00002b2157604460 __libc_start_main + 245\n6    tmpy_gya1nm                        0x0000558ae26b6399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpy8brv1e4/tmpy8brv1e4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8f17d82c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8f17a79b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8f17a79988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8f17a787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy8brv1e4                        0x00005565c19d14a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b8f17f6e460 __libc_start_main + 245\n6    tmpy8brv1e4                        0x00005565c19d1129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = string.count - 1\n    while i < j {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, i - j + 1)\n        }\n        i += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpaiyphstq.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n/tmp/tmpaiyphstq.swift:7:9: warning: variable 'j' was never mutated; consider changing to 'let' constant\n    var j = string.count - 1\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 * 2)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 * 2)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpcsqrvhqy/tmpcsqrvhqy.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac897cc3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8979bab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8979ba988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8979b97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcsqrvhqy                        0x000055cef48f4714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac897eaf460 __libc_start_main + 245\n6    tmpcsqrvhqy                        0x000055cef48f4399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
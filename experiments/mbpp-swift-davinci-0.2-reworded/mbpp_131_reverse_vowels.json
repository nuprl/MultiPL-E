{
  "name": "mbpp_131_reverse_vowels",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunc reverse_vowels(str1: String) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(reverse_vowels(str1: \"Python\") == \"Python\")\nassert(reverse_vowels(str1: \"USA\") == \"ASU\")\nassert(reverse_vowels(str1: \"ab\") == \"ab\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.insert(char, at: str2.startIndex)\n        }\n    }\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2.removeFirst())\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str[i] = vowels[index]\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for j in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: j)\n        if vowels_set.contains(str[index]) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        let iChar = str[i]\n        let jChar = str[j]\n        if vowels.contains(iChar) && vowels.contains(jChar) {\n            str.replaceSubrange(i...i, with: String(jChar))\n            str.replaceSubrange(j...j, with: String(iChar))\n            i += 1\n            j -= 1\n        } else if vowels.contains(iChar) {\n            j -= 1\n        } else if vowels.contains(jChar) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_indices = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if vowels.contains(String(c)) {\n            vowel_indices.append(i)\n        }\n    }\n    var i = 0\n    var j = vowel_indices.count - 1\n    while i < j {\n        let temp = str[vowel_indices[i]]\n        str[vowel_indices[i]] = str[vowel_indices[j]]\n        str[vowel_indices[j]] = temp\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indexes.append(index)\n        }\n    }\n    var i = 0\n    for index in vowel_indexes {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" || char == \"A\" || char == \"E\" || char == \"I\" || char == \"O\" || char == \"U\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" || str[i] == \"A\" || str[i] == \"E\" || str[i] == \"I\" || str[i] == \"O\" || str[i] == \"U\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count/2 {\n        let temp = vowels[i]\n        vowels[i] = vowels[vowels.count - i - 1]\n        vowels[vowels.count - i - 1] = temp\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - i - 1])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var indexes = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indexes.append(index)\n        }\n    }\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels.popLast()!)\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var index = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: index)])\n            index += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    var vowel_indices: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            vowel_indices.append(i)\n        }\n    }\n    var j = 0\n    for i in vowel_indices {\n        str.remove(at: str.index(str.startIndex, offsetBy: i))\n        str.insert(vowels[vowels.count - 1 - j], at: str.index(str.startIndex, offsetBy: i))\n        j += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for j in 0..<str.count {\n        if str[j] == \"a\" || str[j] == \"e\" || str[j] == \"i\" || str[j] == \"o\" || str[j] == \"u\" {\n            str[j] = vowels[i]\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var vowel_stack = Stack<String>()\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            vowel_stack.push(String(char))\n        }\n    }\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str2 += vowel_stack.pop()!\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if !is_vowel(str1[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str1[j]) {\n            j -= 1\n            continue\n        }\n        str2[i] = str1[j]\n        str2[j] = str1[i]\n        i += 1\n        j -= 1\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    let vowels = \"aeiou\"\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !vowels.contains(str[i]) && i < j {\n            i += 1\n        }\n        while !vowels.contains(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowel = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel = String(char) + vowel\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 = str2 + String(vowel[vowel.index(vowel.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2 = str2 + String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    for i in str.characters {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            vowels.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in 0..<str.characters.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str[i] = vowels[j]\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n    for c in str {\n        if vowels_set.contains(c) {\n            vowels.append(c)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for j in 0..<str.count {\n        if vowels_set.contains(str[j]) {\n            str[j] = vowels[i]\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str[i]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str1.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceRange(str2.startIndex.advancedBy(index)..<str2.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str1.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: index[i])...str2.index(str2.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 = String(char) + str2\n        }\n    }\n    var str3 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str3 += str2[0]\n            str2 = str2[1..<str2.count]\n        } else {\n            str3 += String(char)\n        }\n    }\n    return str3",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var result = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            result.append(vowels.popLast()!)\n        } else {\n            result.append(char)\n        }\n    }\n    return String(result)",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    var i = 0\n    for index in vowel_index {\n        str.remove(at: str.index(str.startIndex, offsetBy: index))\n        str.insert(vowels[vowels.count - 1 - i], at: str.index(str.startIndex, offsetBy: index))\n        i += 1\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var indexes = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indexes.append(index)\n        }\n    }\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    var reversed_vowels = vowels.reversed()\n    for (index, char) in reversed_vowels.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: vowel_indices[index])...str.index(str.startIndex, offsetBy: vowel_indices[index]), with: String(char))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    for c in str {\n        if \"aeiou\".contains(c) {\n            vowels.append(c)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, c) in str.enumerated() {\n        if \"aeiou\".contains(c) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2.removeFirst())\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !isVowel(str[i]) {\n            i += 1\n        } else if !isVowel(str[j]) {\n            j -= 1\n        } else {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str2 = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    for (index, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.remove(at: str2.index(str2.startIndex, offsetBy: index))\n            str2.insert(vowels.popLast()!, at: str2.index(str2.startIndex, offsetBy: index))\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels: [Character] = []\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str1 = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str1.replaceSubrange(str1.index(str1.startIndex, offsetBy: index[i])...str1.index(str1.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str1",
    "    var str = str1\n    var vowels = [Character]()\n    var index = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n        index += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str.replaceSubrange(i...i, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiouAEIOU\"\n    var str1 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str1[i]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str1[j]) {\n            j -= 1\n        }\n        str1.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str1",
    "    var str = str1\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel_indices.append(index)\n        }\n    }\n    for i in 0..<vowel_indices.count/2 {\n        let temp = str[str.index(str.startIndex, offsetBy: vowel_indices[i])]\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: vowel_indices[i])...str.index(str.startIndex, offsetBy: vowel_indices[i]), with: String(str[str.index(str.startIndex, offsetBy: vowel_indices[vowel_indices.count - 1 - i])]))\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: vowel_indices[vowel_indices.count - 1 - i])...str.index(str.startIndex, offsetBy: vowel_indices[vowel_indices.count - 1 - i]), with: String(temp))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels += String(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 += String(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str1 = str1\n    var vowel_indices = [Int]()\n    var vowel_chars = [Character]()\n    for (i, char) in str1.enumerated() {\n        if vowels.contains(String(char).lowercased()) {\n            vowel_indices.append(i)\n            vowel_chars.append(char)\n        }\n    }\n    for (i, index) in vowel_indices.enumerated() {\n        let char = vowel_chars[vowel_chars.count - 1 - i]\n        str1.replaceSubrange(str1.index(str1.startIndex, offsetBy: index)..<str1.index(str1.startIndex, offsetBy: index + 1), with: String(char))\n    }\n    return str1",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for char in str1.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replace(char, with: vowels[vowels.count - 1 - index])\n            index += 1\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    var str5 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2.removeFirst())\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowel_indices = [Int]()\n    var vowels = [Character]()\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowel_indices.append(i)\n            vowels.append(c)\n        }\n    }\n    for i in 0..<vowel_indices.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: vowel_indices[i])...str.index(str.startIndex, offsetBy: vowel_indices[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels[i], at: str.index(str.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indexes.append(index)\n        }\n    }\n    var i = 0\n    for index in indexes {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !is_vowel(str[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowel = \"\"\n    for i in str1 {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            vowel = String(i) + vowel\n        }\n    }\n    var j = 0\n    for i in str1 {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            str2 += vowel[j]\n            j += 1\n        } else {\n            str2 += String(i)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowel_indexes = [Int]()\n    var vowel_values = [Character]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel_indexes.append(index)\n            vowel_values.append(char)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowel_values.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in vowels.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(c))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n        } else if !is_vowel(str[j]) {\n            j -= 1\n        } else {\n            str[i] = str[j]\n            str[j] = str[i]\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels[i], at: str.index(str.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str[i]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for c in str {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n        }\n    }\n    var i = 0\n    for c in str {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            str.replaceSubrange(str.range(of: String(c))!, with: String(vowels[vowels.count - i - 1]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.characters.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str.replace(i, with: vowels[index])\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowel_indices = [Int]()\n    var vowel_chars = [Character]()\n    var vowels = \"aeiou\"\n    for (index, char) in str.enumerated() {\n        if vowels.contains(char) {\n            vowel_indices.append(index)\n            vowel_chars.append(char)\n        }\n    }\n    for (index, char) in vowel_indices.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: char)..<str.index(str.startIndex, offsetBy: char+1), with: String(vowel_chars[vowel_chars.count-index-1]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = vowels.count - 1\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i -= 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for index in str.indices {\n        if vowels_set.contains(str[index]) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - i - 1]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels = String(char) + vowels\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 += String(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels = String(char) + vowels\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 += String(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var vowels_index = [Int]()\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowels_index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        let index = str.index(str.startIndex, offsetBy: vowels_index[i])\n        str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for i in str1 {\n        if vowels.contains(i) {\n            str2.append(i)\n        }\n    }\n    str2 = String(str2.reversed())\n    var j = 0\n    for i in str1 {\n        if vowels.contains(i) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str3.append(i)\n        }\n    }\n    return str3",
    "    var str2 = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str1.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: index[i])...str2.index(str2.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str2",
    "    var str = str1\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if vowels.contains(String(char)) {\n            vowel_indices.append(index)\n        }\n    }\n    var i = 0\n    var j = vowel_indices.count - 1\n    while i < j {\n        let temp = str[vowel_indices[i]]\n        str[vowel_indices[i]] = str[vowel_indices[j]]\n        str[vowel_indices[j]] = temp\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var count = 0\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index] == \"a\" || str[index] == \"e\" || str[index] == \"i\" || str[index] == \"o\" || str[index] == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[count]))\n            count += 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str = str1\n    var start = 0\n    var end = str.count - 1\n    while start < end {\n        if vowels.contains(str[start]) && vowels.contains(str[end]) {\n            str.swapAt(start, end)\n            start += 1\n            end -= 1\n        } else if !vowels.contains(str[start]) {\n            start += 1\n        } else if !vowels.contains(str[end]) {\n            end -= 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str1 = str1\n    var start = 0\n    var end = str1.count - 1\n    while start < end {\n        while start < end && !vowels.contains(str1[start]) {\n            start += 1\n        }\n        while start < end && !vowels.contains(str1[end]) {\n            end -= 1\n        }\n        if start < end {\n            str1.swapAt(start, end)\n            start += 1\n            end -= 1\n        }\n    }\n    return str1",
    "    var str = str1\n    var vowels: [Character] = []\n    var vowel_indices: [Int] = []\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(i)..<str.startIndex.advancedBy(i+1), with: String(vowels.popLast()!))\n        }\n        i += 1\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    var i = 0\n    while i < str1.count {\n        let index = str1.index(str1.startIndex, offsetBy: i)\n        if str1[index] == \"a\" || str1[index] == \"e\" || str1[index] == \"i\" || str1[index] == \"o\" || str1[index] == \"u\" {\n            vowels += String(str1[index])\n        }\n        i += 1\n    }\n    i = 0\n    while i < str1.count {\n        let index = str1.index(str1.startIndex, offsetBy: i)\n        if str1[index] == \"a\" || str1[index] == \"e\" || str1[index] == \"i\" || str1[index] == \"o\" || str1[index] == \"u\" {\n            str2 += String(vowels.last!)\n            vowels.removeLast()\n        } else {\n            str2 += String(str1[index])\n        }\n        i += 1\n    }\n    return str2",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        let index1 = str.index(str.startIndex, offsetBy: i)\n        let char = str[index1]\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index1...index1, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n        i += 1\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - i - 1])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        let index1 = str.index(str.startIndex, offsetBy: i)\n        if str[index1] == \"a\" || str[index1] == \"e\" || str[index1] == \"i\" || str[index1] == \"o\" || str[index1] == \"u\" {\n            str.replaceSubrange(index1...index1, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    for (index, char) in vowels.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: vowel_index[index])...str.index(str.startIndex, offsetBy: vowel_index[index]), with: String(char))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str1 = str1\n    var str2 = \"\"\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for (index, char) in str1.enumerated() {\n        if vowels.contains(String(char)) {\n            str1.remove(at: str1.index(str1.startIndex, offsetBy: index))\n            str1.insert(Character(str2[str2.index(str2.startIndex, offsetBy: i)]), at: str1.index(str1.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str1",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels: [Character] = []\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c in str {\n        if vowels_set.contains(c) {\n            vowels.append(c)\n        }\n    }\n    var i = 0\n    for j in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: j)\n        if vowels_set.contains(str[index]) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index + 1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n        } else if !is_vowel(str[j]) {\n            j -= 1\n        } else {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var vowels = [Character]()\n    var result = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            result.append(vowels.popLast()!)\n        } else {\n            result.append(char)\n        }\n    }\n    return result",
    "    var str2 = \"\"\n    var vowel_stack = Stack<Character>()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel_stack.push(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowel_stack.pop()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.characters.count {\n        let char = str[str.startIndex.advancedBy(i)]\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(i)..<str.startIndex.advancedBy(i+1), with: String(vowels[vowels.count-1-index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str[i] = vowels[vowels.count - 1 - index]\n            index += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 = \"\\(char)\" + str2\n        } else {\n            str2 = str2 + \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    var new_str: [Character] = []\n    \n    for c in str.characters {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n        }\n    }\n    \n    for c in str.characters {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            new_str.append(vowels.popLast()!)\n        } else {\n            new_str.append(c)\n        }\n    }\n    \n    return String(new_str)",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var index = 0\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: index)])\n            index += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    var vowelIndex = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowelIndex.append(index)\n        }\n    }\n    var i = 0\n    for index in vowelIndex {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var vowelIndexes: [Int] = []\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowelIndexes.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = 0\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[vowels.count-1-j]))\n        j += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    var i = 0\n    for index in vowel_indices {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if is_vowel(str1[i]) && is_vowel(str1[j]) {\n            str2[i] = str1[j]\n            str2[j] = str1[i]\n            i += 1\n            j -= 1\n        } else if is_vowel(str1[i]) {\n            j -= 1\n        } else if is_vowel(str1[j]) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i].isVowel() && str[j].isVowel() {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        } else if str[i].isVowel() {\n            j -= 1\n        } else if str[j].isVowel() {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels: [Character] = []\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        let index1 = str.index(str.startIndex, offsetBy: i)\n        if str[index1] == \"a\" || str[index1] == \"e\" || str[index1] == \"i\" || str[index1] == \"o\" || str[index1] == \"u\" {\n            str.replaceSubrange(index1...index1, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels = String(char) + vowels\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2 += String(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2 += String(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for c in str {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n        }\n    }\n    var i = 0\n    for c in str {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            str.replace(c, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.removeAtIndex(str.startIndex.advancedBy(index))\n            str.insert(vowels[i], atIndex: str.startIndex.advancedBy(index))\n            i++\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_indices = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if vowels.contains(String(char)) {\n            vowel_indices.append(index)\n        }\n    }\n    var i = 0\n    var j = vowel_indices.count - 1\n    while i < j {\n        let temp = str[vowel_indices[i]]\n        str[vowel_indices[i]] = str[vowel_indices[j]]\n        str[vowel_indices[j]] = temp\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels[i], at: str.index(str.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[i])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n            index += 1\n        } else {\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" || char == \"A\" || char == \"E\" || char == \"I\" || char == \"O\" || char == \"U\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" || char == \"A\" || char == \"E\" || char == \"I\" || char == \"O\" || char == \"U\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(i)..<str.startIndex.advancedBy(i+1), with: String(vowels.popLast()!))\n            i += 1\n        }\n    }\n    return str"
  ]
}
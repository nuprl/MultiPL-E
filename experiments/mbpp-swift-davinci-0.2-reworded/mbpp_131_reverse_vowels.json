{
  "name": "mbpp_131_reverse_vowels",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to reverse only the vowels of a given string (where y is not a vowel).\nfunc reverse_vowels(str1: String) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(reverse_vowels(str1: \"Python\") == \"Python\")\nassert(reverse_vowels(str1: \"USA\") == \"ASU\")\nassert(reverse_vowels(str1: \"ab\") == \"ab\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.insert(char, at: str2.startIndex)\n        }\n    }\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2.removeFirst())\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str[i] = vowels[index]\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for j in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: j)\n        if vowels_set.contains(str[index]) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        let iChar = str[i]\n        let jChar = str[j]\n        if vowels.contains(iChar) && vowels.contains(jChar) {\n            str.replaceSubrange(i...i, with: String(jChar))\n            str.replaceSubrange(j...j, with: String(iChar))\n            i += 1\n            j -= 1\n        } else if vowels.contains(iChar) {\n            j -= 1\n        } else if vowels.contains(jChar) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_indices = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if vowels.contains(String(c)) {\n            vowel_indices.append(i)\n        }\n    }\n    var i = 0\n    var j = vowel_indices.count - 1\n    while i < j {\n        let temp = str[vowel_indices[i]]\n        str[vowel_indices[i]] = str[vowel_indices[j]]\n        str[vowel_indices[j]] = temp\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indexes.append(index)\n        }\n    }\n    var i = 0\n    for index in vowel_indexes {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" || char == \"A\" || char == \"E\" || char == \"I\" || char == \"O\" || char == \"U\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" || str[i] == \"A\" || str[i] == \"E\" || str[i] == \"I\" || str[i] == \"O\" || str[i] == \"U\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.characters.enumerate() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count/2 {\n        let temp = vowels[i]\n        vowels[i] = vowels[vowels.count - i - 1]\n        vowels[vowels.count - i - 1] = temp\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[i]))\n    }\n    return str"
  ]
}
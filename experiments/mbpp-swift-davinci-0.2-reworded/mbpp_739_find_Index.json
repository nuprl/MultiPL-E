{
  "name": "mbpp_739_find_Index",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfunc find_Index(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_Index(n: 2) == 4)\nassert(find_Index(n: 3) == 14)\nassert(find_Index(n: 4) == 45)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.digits == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i*(i+1))/2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var j = 1\n    while true {\n        if String(i).count == n {\n            return j\n        }\n        i = i + j\n        j = j + 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while (String(triangle).count < n) {\n        triangle = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var index = 1\n    var tri = 0\n    while true {\n        tri = (index * (index + 1)) / 2\n        if tri.count == n {\n            return index\n        }\n        index += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = (i * (i + 1)) / 2\n        if String(triangularNumber).count == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangular = 1\n    while true {\n        if String(triangular).count == n {\n            return index\n        }\n        index += 1\n        triangular += index\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = triangularNumber + i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if String(sum).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangularNumber = 1\n    while (triangularNumber < n) {\n        index += 1\n        triangularNumber += index\n    }\n    return index",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triNum = 0\n    while String(triNum).count < n {\n        triNum = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 1\n    while true {\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var tri = 1\n    while true {\n        if tri.numberOfDigits == n {\n            return i\n        }\n        i += 1\n        tri += i\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while tri < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var j = 1\n    var index = 1\n    while true {\n        if String(j).count == n {\n            break\n        }\n        i += 1\n        j += i\n        index += 1\n    }\n    return index",
    "    var i = 1\n    while true {\n        let t = triangular(i)\n        if t >= pow(10, n - 1) {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 1\n    while true {\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n        tri += i\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triNum = 0\n    while true {\n        triNum = (i * (i + 1)) / 2\n        if triNum.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while tri < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangular = 0\n    while String(triangular).count < n {\n        triangular = triangular + i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while String(t).count < n {\n        t = t + i\n        i = i + 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 1\n    while (String(tri).count < n) {\n        i += 1\n        tri += i\n    }\n    return i",
    "    var i = 1\n    var j = 1\n    while true {\n        let triangle = (i * (i + 1)) / 2\n        if triangle.digits.count == n {\n            return j\n        }\n        i += 1\n        j += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = t + i\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangular = 1\n    while true {\n        if String(triangular).count == n {\n            return i\n        }\n        i += 1\n        triangular += i\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triNum = 0\n    while true {\n        triNum = (i * (i + 1)) / 2\n        if triNum.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var count = 1\n    var sum = 0\n    while true {\n        sum = sum + count\n        if String(sum).count == n {\n            return count\n        }\n        count += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle = triangle + i\n        i = i + 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if sum.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.digits == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangular = 0\n    while true {\n        triangular += i\n        if String(triangular).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i*(i+1))/2\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangular = 0\n    while true {\n        triangular += index\n        if String(triangular).count == n {\n            return index\n        }\n        index += 1\n    }",
    "    var i = 1\n    var triangular = 0\n    while true {\n        triangular += i\n        if String(triangular).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if String(sum).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.count == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if sum.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    while true {\n        let num = (i * (i + 1)) / 2\n        if num.digits.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = triangularNumber + i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while (t.description.count < n) {\n        i += 1\n        t += i\n    }\n    return i",
    "    var index = 1\n    var triangularNumber = 1\n    while String(triangularNumber).count < n {\n        index += 1\n        triangularNumber += index\n    }\n    return index",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while (true) {\n        triangularNumber = triangularNumber + i\n        if (triangularNumber.count == n) {\n            return i\n        }\n        i = i + 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var tri = 1\n    while true {\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n        tri += i\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber += i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 1\n    while (String(triangularNumber).count < n) {\n        i += 1\n        triangularNumber += i\n    }\n    return i",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 1\n    while tri.count < n {\n        i += 1\n        tri += i\n    }\n    return i",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = triangularNumber + i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangular = 0\n    while true {\n        triangular = (i * (i + 1)) / 2\n        if String(triangular).count == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = triangularNumber + i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var j = 1\n    while true {\n        let t = (i * (i + 1)) / 2\n        if t.count == n {\n            return j\n        }\n        i += 1\n        j += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber = triangularNumber + i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if String(sum).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while tri < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var t = 1\n    while true {\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var j = 1\n    while true {\n        let triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return j\n        }\n        i += 1\n        j += 1\n    }",
    "    var i = 1\n    var tri = 1\n    while true {\n        if tri.count == n {\n            return i\n        }\n        i += 1\n        tri += i\n    }",
    "    var index = 1\n    var triangular = 1\n    while String(triangular).count < n {\n        index += 1\n        triangular += index\n    }\n    return index",
    "    var i = 1\n    var tri = 0\n    while tri < n {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    while true {\n        let tri = (i * (i + 1)) / 2\n        let digits = String(tri).count\n        if digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while String(t).count < n {\n        t = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    while true {\n        var tri = 0\n        for j in 1...i {\n            tri += j\n        }\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangularNumber = 0\n    while String(triangularNumber).count < n {\n        triangularNumber += index\n        index += 1\n    }\n    return index",
    "    var i = 1\n    var t = 1\n    while true {\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var j = 1\n    var count = 1\n    while count < n {\n        i = i + 1\n        j = j + i\n        count = String(j).count\n    }\n    return i",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber += i\n        if String(triangularNumber).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangularNumber = 1\n    while true {\n        if String(triangularNumber).count == n {\n            break\n        }\n        index += 1\n        triangularNumber += index\n    }\n    return index",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle += i\n        i += 1\n    }\n    return i - 1",
    "    var index = 1\n    var tri = 1\n    while tri.count < n {\n        index += 1\n        tri += index\n    }\n    return index",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if sum.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangularNumber = 1\n    while (triangularNumber.count < n) {\n        index += 1\n        triangularNumber += index\n    }\n    return index",
    "    var i = 1\n    var triangle = 0\n    while String(triangle).count < n {\n        triangle = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triNum = 0\n    while String(triNum).count < n {\n        triNum += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    while true {\n        let t = (i * (i + 1)) / 2\n        if t.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 0\n    while String(t).count < n {\n        t = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if String(sum).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var count = 1\n    var i = 1\n    while true {\n        let triangular = (i * (i + 1)) / 2\n        let digits = String(triangular).count\n        if digits == n {\n            return count\n        }\n        i += 1\n        count += 1\n    }",
    "    var i = 1\n    var triNum = 0\n    while (String(triNum).count < n) {\n        triNum = triNum + i\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangular = 0\n    while true {\n        triangular = (i * (i + 1)) / 2\n        if triangular.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var j = 1\n    while true {\n        if String(i).count == n {\n            return j\n        }\n        i += j + 1\n        j += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle = (i * (i + 1)) / 2\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triangular = 0\n    while true {\n        triangular = triangular + index\n        if String(triangular).count == n {\n            return index\n        }\n        index = index + 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri += i\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var index = 1\n    var triangularNumber = 0\n    while true {\n        triangularNumber += index\n        if String(triangularNumber).count == n {\n            return index\n        }\n        index += 1\n    }",
    "    var index = 1\n    var triangular = 1\n    while true {\n        if String(triangular).count == n {\n            return index\n        }\n        index += 1\n        triangular += index\n    }",
    "    var i = 1\n    var t = 0\n    while (String(t).count < n) {\n        t = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.digits.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangular = 0\n    while String(triangular).count < n {\n        triangular += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while String(t).count < n {\n        t += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while tri.description.count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.digits == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var t = 1\n    while (true) {\n        if (String(t).count == n) {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var sum = 0\n    while true {\n        sum += i\n        if sum.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.digits == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    while true {\n        let tri = (i * (i + 1)) / 2\n        if tri.digits.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if String(tri).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri = (i * (i + 1)) / 2\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var triangular = 0\n    while String(triangular).count < n {\n        triangular += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 1\n    while (String(t).count < n) {\n        i += 1\n        t = t + i\n    }\n    return i",
    "    var i = 1\n    var tri = 1\n    while tri.digits.count < n {\n        i += 1\n        tri += i\n    }\n    return i",
    "    var index = 1\n    var triNum = 1\n    while triNum.description.count < n {\n        index += 1\n        triNum += index\n    }\n    return index",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.numberOfDigits == n {\n            break\n        }\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while String(tri).count < n {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.count == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var t = 0\n    while true {\n        t = t + i\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while (String(tri).count < n) {\n        tri += i\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var t = 0\n    while true {\n        t = (i * (i + 1)) / 2\n        if t.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.digits == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if t.digits == n {\n            return i\n        }\n        i += 1\n        t += i\n    }",
    "    var i = 1\n    var j = 1\n    var index = 1\n    while true {\n        if String(j).count == n {\n            return index\n        }\n        i += 1\n        j += i\n        index += 1\n    }",
    "    var i = 1\n    var tri = 0\n    while true {\n        tri = (i * (i + 1)) / 2\n        if tri.count == n {\n            return i\n        }\n        i += 1\n    }",
    "    var index = 1\n    var triNum = 1\n    while true {\n        if String(triNum).count == n {\n            return index\n        }\n        index += 1\n        triNum += index\n    }",
    "    var i = 1\n    var t = 1\n    while true {\n        if String(t).count == n {\n            return i\n        }\n        i += 1\n        t = i * (i + 1) / 2\n    }",
    "    var i = 1\n    var triangle = 0\n    while true {\n        triangle += i\n        if String(triangle).count == n {\n            return i\n        }\n        i += 1\n    }"
  ]
}
{
  "name": "mbpp_555_difference",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\nfunc difference(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(difference(n: 3) == 30)\nassert(difference(n: 5) == 210)\nassert(difference(n: 2) == 6)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sum = 0\n    for i in 1...n {\n        sum += i\n    }\n    return sum * sum - sumOfCubes(n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    let sumOfSquares = (n * (n + 1) * (2 * n + 1)) / 6\n    let sumOfNumbers = (n * (n + 1)) / 2\n    return sumOfSquares - sumOfNumbers",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfSquares(n) - sumOfCubes(n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sumOfCubes = 0\n    var sumOfNumbers = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (n * 2 + 1) / 6)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return 0",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return squareOfSum(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sum = 0\n    var sumOfCubes = 0\n    for i in 1...n {\n        sum += i\n        sumOfCubes += i * i * i\n    }\n    return sumOfCubes - sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    var sumOfCubes = 0\n    var sumOfNumbers = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers * sumOfNumbers",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return squareOfSum(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfSquares(n: n) - sumOfCubes(n: n)",
    "    var sum = 0\n    for i in 1...n {\n        sum += i*i*i\n    }\n    return sum - n*(n+1)/2*(2*n+1)/3",
    "    var sumOfCubes = 0\n    var sumOfNumbers = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfNumbers * sumOfNumbers - sumOfCubes",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    var sumOfSquares = 0\n    var sumOfCubes = 0\n    for i in 1...n {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)",
    "    var sum = 0\n    for i in 1...n {\n        sum += i * i * i\n    }\n    return sum - (n * (n + 1) / 2)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sumOfCubes = 0\n    var sumOfNumbers = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sumOfNumbers += i\n    }\n    return sumOfCubes - sumOfNumbers",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfSquares(n: n) - sumOfCubes(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return 0",
    "    return sumOfSquares(n) - sumOfCubes(n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sum = 0\n    for i in 1...n {\n        sum += i * i * i\n    }\n    return sum - (n * (n + 1) / 2)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sum1 = 0\n    var sum2 = 0\n    for i in 1...n {\n        sum1 += i * i * i\n        sum2 += i\n    }\n    return sum2 * sum2 - sum1",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sumOfSquares = 0\n    var sumOfCubes = 0\n    for i in 1...n {\n        sumOfSquares += i * i\n        sumOfCubes += i * i * i\n    }\n    return sumOfSquares - sumOfCubes",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfSquares(n: n) - sumOfCubes(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfSquares(n: n) - sumOfCubes(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return squareOfSum(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    var sum = 0\n    for i in 1...n {\n        sum += i * i * i\n    }\n    return sum - n * (n + 1) / 2 * (2 * n + 1) / 3",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    let sumOfCubes = (1...n).map { $0 * $0 * $0 }.reduce(0, +)\n    let sum = (1...n).reduce(0, +)\n    return sumOfCubes - sum",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n) - sumOfNumbers(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    let sumOfCubes = (1...n).map { $0 * $0 * $0 }.reduce(0, +)\n    let sum = (1...n).reduce(0, +)\n    return sumOfCubes - sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNumbers(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    let sumOfSquares = (n * (n + 1) * (2 * n + 1)) / 6\n    let sum = (n * (n + 1)) / 2\n    return sum * sum - sumOfSquares",
    "    var sum = 0\n    var sumOfCubes = 0\n    for i in 1...n {\n        sum += i\n        sumOfCubes += i*i*i\n    }\n    return sumOfCubes - sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    var sumOfCubes = 0\n    var sum = 0\n    for i in 1...n {\n        sumOfCubes += i * i * i\n        sum += i\n    }\n    return sumOfCubes - sum * sum",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    let sumOfCubes = (1...n).map { $0 * $0 * $0 }.reduce(0, +)\n    let sum = (1...n).reduce(0, +)\n    return sumOfCubes - sum",
    "    var sum = 0\n    for i in 1...n {\n        sum += i * i * i\n    }\n    return sum - n * (n + 1) / 2 * (n + 1) / 2",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfNaturalNumbers(n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n) - sumOfSquares(n)",
    "    return sumOfCubes(n: n) - sum(n: n)",
    "    return sumOfCubes(n: n) - sumOfSquares(n: n)",
    "    return sumOfCubes(n: n) - sumOfNaturalNumbers(n: n)"
  ]
}
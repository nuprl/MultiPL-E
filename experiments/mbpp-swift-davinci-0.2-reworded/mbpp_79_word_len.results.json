{
  "name": "mbpp_79_word_len",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp8fuz1h7m/tmp8fuz1h7m.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8cf28b9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8cf25b0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8cf25b0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8cf25af7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8fuz1h7m                        0x0000560e0ab6734d <unavailable> + 4941\n5    libc.so.6                          0x00002b8cf2aa5460 __libc_start_main + 245\n6    tmp8fuz1h7m                        0x0000560e0ab66fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.characters.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510629,
      "stdout": "",
      "stderr": "/tmp/tmpk8ny8369.swift:4:14: error: 'characters' is unavailable: Please use String directly\n    return s.characters.count % 2 == 0\n             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpz1t50uom/tmpz1t50uom.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b98c1911c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b98c1608b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b98c1608988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b98c16077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz1t50uom                        0x000055c7828f534d <unavailable> + 4941\n5    libc.so.6                          0x00002b98c1afd460 __libc_start_main + 245\n6    tmpz1t50uom                        0x000055c7828f4fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpjtluds7c/tmpjtluds7c.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8a7ad67c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8a7aa5eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8a7aa5e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8a7aa5d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjtluds7c                        0x0000555c16ebb34d <unavailable> + 4941\n5    libc.so.6                          0x00002b8a7af53460 __libc_start_main + 245\n6    tmpjtluds7c                        0x0000555c16ebafd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpz1t50uom/tmpz1t50uom.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b98c1911c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b98c1608b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b98c1608988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b98c16077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz1t50uom                        0x000055c7828f534d <unavailable> + 4941\n5    libc.so.6                          0x00002b98c1afd460 __libc_start_main + 245\n6    tmpz1t50uom                        0x000055c7828f4fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpz1t50uom/tmpz1t50uom.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b98c1911c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b98c1608b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b98c1608988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b98c16077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz1t50uom                        0x000055c7828f534d <unavailable> + 4941\n5    libc.so.6                          0x00002b98c1afd460 __libc_start_main + 245\n6    tmpz1t50uom                        0x000055c7828f4fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return (s.count % 2 == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmplcieaxlb/tmplcieaxlb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89103dec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b89100d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b89100d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b89100d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplcieaxlb                        0x0000559bbc56c34d <unavailable> + 4941\n5    libc.so.6                          0x00002b89105ca460 __libc_start_main + 245\n6    tmplcieaxlb                        0x0000559bbc56bfd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return (s.count % 2) == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpz1t50uom/tmpz1t50uom.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b98c1911c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b98c1608b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b98c1608988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b98c16077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz1t50uom                        0x000055c7828f534d <unavailable> + 4941\n5    libc.so.6                          0x00002b98c1afd460 __libc_start_main + 245\n6    tmpz1t50uom                        0x000055c7828f4fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return (s.count % 2 == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmplcieaxlb/tmplcieaxlb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89103dec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b89100d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b89100d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b89100d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplcieaxlb                        0x0000559bbc56c34d <unavailable> + 4941\n5    libc.so.6                          0x00002b89105ca460 __libc_start_main + 245\n6    tmplcieaxlb                        0x0000559bbc56bfd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpz1t50uom/tmpz1t50uom.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b98c1911c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b98c1608b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b98c1608988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b98c16077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz1t50uom                        0x000055c7828f534d <unavailable> + 4941\n5    libc.so.6                          0x00002b98c1afd460 __libc_start_main + 245\n6    tmpz1t50uom                        0x000055c7828f4fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1666123784,
      "stdout": "",
      "stderr": "tmpjtluds7c/tmpjtluds7c.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8a7ad67c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8a7aa5eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8a7aa5e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8a7aa5d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjtluds7c                        0x0000555c16ebb34d <unavailable> + 4941\n5    libc.so.6                          0x00002b8a7af53460 __libc_start_main + 245\n6    tmpjtluds7c                        0x0000555c16ebafd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    if s.count % 2 == 0 {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp8fuz1h7m/tmp8fuz1h7m.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8cf28b9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8cf25b0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8cf25b0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8cf25af7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8fuz1h7m                        0x0000560e0ab6734d <unavailable> + 4941\n5    libc.so.6                          0x00002b8cf2aa5460 __libc_start_main + 245\n6    tmp8fuz1h7m                        0x0000560e0ab66fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether the length of the word is odd or not.\nfunc word_len(s: String) -> Bool {\n    return s.count % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(word_len(s: \"Hadoop\") == false)\nassert(word_len(s: \"great\") == true)\nassert(word_len(s: \"structure\") == true)",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "tmp2aw1oe9u/tmp2aw1oe9u.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8e4a7dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8e4774b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8e4774988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8e47737b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2aw1oe9u                        0x00005607dfcb634d <unavailable> + 4941\n5    libc.so.6                          0x00002ab8e4c69460 __libc_start_main + 245\n6    tmp2aw1oe9u                        0x00005607dfcb5fd9 <unavailable> + 4057\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_806_max_run_uppercase",
  "language": "swift",
  "prompt": "\n/// Write a function to find maximum run of uppercase characters in the given string.\nfunc max_run_uppercase(test_str: String) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(max_run_uppercase(test_str: \"GeMKSForGERksISBESt\") == 5)\nassert(max_run_uppercase(test_str: \"PrECIOusMOVemENTSYT\") == 6)\nassert(max_run_uppercase(test_str: \"GooGLEFluTTER\") == 4)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUpper {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    if current_run > max_run {\n        max_run = current_run\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    if current_run > max_run {\n        max_run = current_run\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n            if current_run > max_run {\n                max_run = current_run\n            }\n        } else {\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var cur_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            cur_run += 1\n        } else {\n            max_run = max(max_run, cur_run)\n            cur_run = 0\n        }\n    }\n    return max(max_run, cur_run)",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            run += 1\n        } else {\n            max_run = max(max_run, run)\n            run = 0\n        }\n    }\n    return max(max_run, run)",
    "    var max_run = 0\n    var run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            run += 1\n            max_run = max(max_run, run)\n        } else {\n            run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var cur_run = 0\n    for char in test_str {\n        if char.isUppercase {\n            cur_run += 1\n            if cur_run > max_run {\n                max_run = cur_run\n            }\n        } else {\n            cur_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for c in test_str.characters {\n        if c.isUppercase {\n            current_run += 1\n        } else {\n            max_run = max(max_run, current_run)\n            current_run = 0\n        }\n    }\n    max_run = max(max_run, current_run)\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var cur_run = 0\n    for c in test_str {\n        if c.isUppercase {\n            cur_run += 1\n        } else {\n            max_run = max(max_run, cur_run)\n            cur_run = 0\n        }\n    }\n    return max(max_run, cur_run)",
    "    var max_run = 0\n    var run = 0\n    for char in test_str {\n        if char.isUppercase {\n            run += 1\n            if run > max_run {\n                max_run = run\n            }\n        } else {\n            run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n            if current_run > max_run {\n                max_run = current_run\n            }\n        } else {\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for c in test_str.characters {\n        if c.isUppercase {\n            current_run += 1\n        } else {\n            current_run = 0\n        }\n        if current_run > max_run {\n            max_run = current_run\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            max_run = max(max_run, current_run)\n            current_run = 0\n        }\n    }\n    max_run = max(max_run, current_run)\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var current_run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            current_run += 1\n        } else {\n            if current_run > max_run {\n                max_run = current_run\n            }\n            current_run = 0\n        }\n    }\n    return max_run",
    "    var max_run = 0\n    var run = 0\n    for char in test_str.characters {\n        if char.isUppercase {\n            run += 1\n        } else {\n            max_run = max(run, max_run)\n            run = 0\n        }\n    }\n    max_run = max(run, max_run)\n    return max_run"
  ]
}
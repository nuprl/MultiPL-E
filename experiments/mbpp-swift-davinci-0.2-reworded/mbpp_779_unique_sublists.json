{
  "name": "mbpp_779_unique_sublists",
  "language": "swift",
  "prompt": "\n/// Write a function to count the number of arrays within an array. The function should return a dictionary, where every array is turned to a tuple, and the value of the tuple is the number of its occurrences.\nfunc unique_sublists(list1: AnyHashable) -> AnyHashable {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_779_unique_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(unique_sublists(list1: [[1, 3], [5, 7], [1, 3], [13, 15, 17], [5, 7], [9, 11]]) == [(1, 3) : 2, (5, 7) : 2, (13, 15, 17) : 1, (9, 11) : 1])\nassert(unique_sublists(list1: [[\"green\", \"orange\"], [\"black\"], [\"green\", \"orange\"], [\"white\"]]) == [(\"green\", \"orange\") : 2, (\"black\") : 1, (\"white\") : 1])\nassert(unique_sublists(list1: [[1, 2], [3, 4], [4, 5], [6, 7]]) == [(1, 2) : 1, (3, 4) : 1, (4, 5) : 1, (6, 7) : 1])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let list = list1 as! [Any]\n    var result = [AnyHashable: Int]()\n    for item in list {\n        let item_hash = item as! AnyHashable\n        if result[item_hash] == nil {\n            result[item_hash] = 1\n        } else {\n            result[item_hash] = result[item_hash]! + 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = item.map { $0 as! AnyHashable }\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for item in list {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.map { $0 }\n                result[key] = (result[key] ?? 0) + 1\n            }\n        }\n    }\n    return result",
    "    var result: [AnyHashable: Int] = [:]\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = item.map { $0 as AnyHashable }\n                if let count = result[tuple] {\n                    result[tuple] = count + 1\n                } else {\n                    result[tuple] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] != nil {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var list = list1 as! [AnyHashable]\n    var result = [AnyHashable: Int]()\n    for i in 0..<list.count {\n        if list[i] is [AnyHashable] {\n            let sublist = list[i] as! [AnyHashable]\n            let sublist_tuple = tuple_from_list(list: sublist)\n            if result[sublist_tuple] == nil {\n                result[sublist_tuple] = 1\n            } else {\n                result[sublist_tuple]! += 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.sorted()\n                if let count = result[key] {\n                    result[key] = count + 1\n                } else {\n                    result[key] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        dict[item] = (dict[item] ?? 0) + 1\n    }\n    return dict",
    "    var list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in 0..<list.count {\n        if dict[list[i]] != nil {\n            dict[list[i]]! += 1\n        } else {\n            dict[list[i]] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for element in list {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.sorted()\n                if let count = result[key] {\n                    result[key] = count + 1\n                } else {\n                    result[key] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        dict[item] = (dict[item] ?? 0) + 1\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    return list1",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        let key = item as! [AnyHashable]\n        if dict[key] != nil {\n            dict[key]! += 1\n        } else {\n            dict[key] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = tuple_from_list(list: item)\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    var list = list1\n    if let list1 = list1 as? [AnyHashable] {\n        list = list1.map { $0 as AnyHashable }\n    }\n    if let list1 = list as? [AnyHashable] {\n        for item in list1 {\n            if let item = item as? [AnyHashable] {\n                let item = item.map { $0 as AnyHashable }\n                if let count = dict[item] {\n                    dict[item] = count + 1\n                } else {\n                    dict[item] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = item.map { $0 as AnyHashable }\n                if let count = result[tuple] {\n                    result[tuple] = count + 1\n                } else {\n                    result[tuple] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if result[item] == nil {\n                result[item] = 1\n            } else {\n                result[item]! += 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict: [AnyHashable: Int] = [:]\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = tuple_from_array(array: item)\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.sorted()\n                if let value = dict[key] {\n                    dict[key] = value + 1\n                } else {\n                    dict[key] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for item in list {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for item in list {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    var list = list1 as! [AnyHashable]\n    for i in 0..<list.count {\n        var sublist = list[i]\n        if sublist is [AnyHashable] {\n            sublist = unique_sublists(list1: sublist)\n        }\n        if result[sublist] == nil {\n            result[sublist] = 0\n        }\n        result[sublist]! += 1\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    return list1",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = tuple_from_list(list: item)\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dictionary = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for element in list {\n            if let sublist = element as? [AnyHashable] {\n                let tuple = tuple_from_list(list: sublist)\n                if let count = dictionary[tuple] {\n                    dictionary[tuple] = count + 1\n                } else {\n                    dictionary[tuple] = 1\n                }\n            }\n        }\n    }\n    return dictionary",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in list {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var result: [AnyHashable: Int] = [:]\n    for item in list1 {\n        if result[item] != nil {\n            result[item]! += 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.description\n                if let value = result[key] {\n                    result[key] = value + 1\n                } else {\n                    result[key] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            let key = item\n            if result[key] != nil {\n                result[key]! += 1\n            } else {\n                result[key] = 1\n            }\n        }\n    }\n    return result",
    "    return list1",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item] = result[item]! + 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if let _ = result[item] {\n            result[item]! += 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    return list1",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = tuple_from_list(list: item)\n                if let value = dict[tuple] {\n                    dict[tuple] = value + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if result[item] == nil {\n                result[item] = 1\n            } else {\n                result[item]! += 1\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            let tuple = tuple_from_list(list1: item)\n            if result[tuple] != nil {\n                result[tuple]! += 1\n            } else {\n                result[tuple] = 1\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] != nil {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if let _ = result[item] {\n                result[item]! += 1\n            } else {\n                result[item] = 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for item in list {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = item.sorted()\n                if let value = result[key] {\n                    result[key] = value + 1\n                } else {\n                    result[key] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result.keys.contains(item) {\n            result[item]! += 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return result",
    "    var list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in list {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    \n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    \n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        let tuple = (item as! [AnyHashable]).sorted()\n        dict[tuple] = (dict[tuple] ?? 0) + 1\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dictionary = [AnyHashable: Int]()\n    for element in list1 {\n        if dictionary[element] == nil {\n            dictionary[element] = 1\n        } else {\n            dictionary[element]! += 1\n        }\n    }\n    return dictionary",
    "    var dict = [AnyHashable: AnyHashable]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item] as! Int + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = (item)\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] != nil {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = (item[0], item[1])\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    var list = list1 as! [Any]\n    for i in list {\n        if let _ = dict[i] {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for item in list {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    return list1",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    return \"\"",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: AnyHashable]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let key = tuple(list: item)\n                if let value = result[key] as? Int {\n                    result[key] = value + 1\n                } else {\n                    result[key] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: AnyHashable]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = (dict[item] as! Int) + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict.keys.contains(item) {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    var list = list1\n    if let list1 = list1 as? [AnyHashable] {\n        list = list1.map { $0 as AnyHashable }\n    }\n    if let list1 = list as? [AnyHashable] {\n        for element in list1 {\n            if let element = element as? [AnyHashable] {\n                let tuple = element.map { $0 as AnyHashable }\n                if let count = result[tuple] {\n                    result[tuple] = count + 1\n                } else {\n                    result[tuple] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            let key = unique_sublists(list1: item)\n            if let count = result[key] {\n                result[key] = count + 1\n            } else {\n                result[key] = 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [Any] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if result[item] == nil {\n                result[item] = 1\n            } else {\n                result[item]! += 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in list {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] != nil {\n            dict[item] = dict[item]! + 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] != nil {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] != nil {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: AnyHashable]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = (dict[item] as! Int) + 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if let count = result[item] {\n                result[item] = count + 1\n            } else {\n                result[item] = 1\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 as! [AnyHashable] {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    var list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in 0..<list.count {\n        var tuple = list[i] as! [AnyHashable]\n        tuple.sort()\n        if dict[tuple] == nil {\n            dict[tuple] = 1\n        } else {\n            dict[tuple] = dict[tuple]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict.keys.contains(item) {\n            dict[item]! += 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = item.map { $0 }\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    var list = list1 as! [AnyHashable]\n    for i in 0..<list.count {\n        var sublist = list[i] as! [AnyHashable]\n        let tuple = (sublist[0], sublist[1])\n        if dict[tuple] != nil {\n            dict[tuple] = dict[tuple]! + 1\n        } else {\n            dict[tuple] = 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 {\n        dict[element] = (dict[element] ?? 0) + 1\n    }\n    return dict",
    "    var dictionary = [AnyHashable: Int]()\n    for item in list1 {\n        if dictionary[item] != nil {\n            dictionary[item]! += 1\n        } else {\n            dictionary[item] = 1\n        }\n    }\n    return dictionary",
    "    var list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in list {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Any]()\n    for item in list1 as! [Any] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = (dict[item] as! Int) + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = (item[0], item[1])\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if let count = result[item] {\n                result[item] = count + 1\n            } else {\n                result[item] = 1\n            }\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for element in list {\n            if let tuple = element as? AnyHashable {\n                if let value = dict[tuple] {\n                    dict[tuple] = value + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: AnyHashable]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item] as! Int + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    if let list = list1 as? [AnyHashable] {\n        for item in list {\n            if let item = item as? [AnyHashable] {\n                let tuple = (item[0], item[1])\n                if let count = dict[tuple] {\n                    dict[tuple] = count + 1\n                } else {\n                    dict[tuple] = 1\n                }\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 as! [AnyHashable] {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            let item_tuple = tuple_from_list(list1: item)\n            if let item_tuple = item_tuple as? AnyHashable {\n                if let value = result[item_tuple] {\n                    result[item_tuple] = value + 1\n                } else {\n                    result[item_tuple] = 1\n                }\n            }\n        }\n    }\n    return result",
    "    let list = list1 as! [AnyHashable]\n    var dict = [AnyHashable: Int]()\n    for i in list {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    \n    for i in list1 {\n        if dict[i] != nil {\n            dict[i]! += 1\n        } else {\n            dict[i] = 1\n        }\n    }\n    \n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for element in list1 {\n        if dict[element] == nil {\n            dict[element] = 1\n        } else {\n            dict[element]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: AnyHashable]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item] = result[item] as! Int + 1\n        }\n    }\n    return result",
    "    var unique_sublists_dict = [AnyHashable: Int]()\n    for item in list1 {\n        if unique_sublists_dict[item] == nil {\n            unique_sublists_dict[item] = 1\n        } else {\n            unique_sublists_dict[item]! += 1\n        }\n    }\n    return unique_sublists_dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 {\n        if let item = item as? AnyHashable {\n            if let count = result[item] {\n                result[item] = count + 1\n            } else {\n                result[item] = 1\n            }\n        }\n    }\n    return result",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] == nil {\n            result[item] = 1\n        } else {\n            result[item]! += 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: AnyHashable]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return dict",
    "    var result = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if result[item] != nil {\n            result[item]! += 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return result",
    "    var dict = [AnyHashable: Int]()\n    var list = list1 as! [Any]\n    for i in 0..<list.count {\n        if list[i] is [Any] {\n            let tuple = tuple_from_array(array: list[i] as! [Any])\n            if dict[tuple] == nil {\n                dict[tuple] = 1\n            } else {\n                dict[tuple] = dict[tuple]! + 1\n            }\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for i in list1 {\n        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]! += 1\n        }\n    }\n    return dict",
    "    var dict = [AnyHashable: Int]()\n    for item in list1 as! [AnyHashable] {\n        if dict[item] == nil {\n            dict[item] = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n    }\n    return dict"
  ]
}
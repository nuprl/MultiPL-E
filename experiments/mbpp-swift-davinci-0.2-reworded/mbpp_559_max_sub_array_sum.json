{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "swift",
  "prompt": "\n/// Write a function to find the sum of the largest contiguous subarray in the given array.\nfunc max_sub_array_sum(a: [Int], size: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(max_sub_array_sum(a: [-2, -3, 4, -1, -2, 1, 5, -3], size: 8) == 7)\nassert(max_sub_array_sum(a: [-3, -4, 5, -2, -3, 2, 6, -4], size: 8) == 8)\nassert(max_sub_array_sum(a: [-4, -5, 6, -3, -4, 3, 7, -5], size: 8) == 10)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    \n    for i in 0..<size {\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n    }\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n    }\n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    return max_so_far",
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    for i in 0..<size {\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n    }\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    for i in 0..<size {\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n    }\n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n    }\n    \n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    \n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    var start = 0, end = 0, s = 0\n    for i in 0..<size {\n        max_ending_here += a[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        } else if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n    }\n    print(\"start: \\(start), end: \\(end)\")\n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    for i in 0..<size {\n        max_ending_here += a[i]\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n    }\n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n    }\n    \n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    \n    return max_so_far",
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n    }\n    \n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    \n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        } else if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n    }\n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    \n    for i in 0..<size {\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = a[0]\n    var curr_max = a[0]\n    \n    for i in 1..<size {\n        curr_max = max(a[i], curr_max + a[i])\n        max_so_far = max(max_so_far, curr_max)\n    }\n    return max_so_far",
    "    var max_so_far = Int.min\n    var max_ending_here = 0\n    var start = 0\n    var end = 0\n    var s = 0\n    \n    for i in 0..<size {\n        max_ending_here += a[i]\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n            start = s\n            end = i\n        }\n        \n        if max_ending_here < 0 {\n            max_ending_here = 0\n            s = i + 1\n        }\n    }\n    \n    print(\"Maximum contiguous sum is \\(max_so_far)\")\n    print(\"Starting index \\(start)\")\n    print(\"Ending index \\(end)\")\n    \n    return max_so_far",
    "    var max_so_far = 0\n    var max_ending_here = 0\n    \n    for i in 0..<size {\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far"
  ]
}
{
  "name": "mbpp_141_pancake_sort",
  "language": "swift",
  "prompt": "\n/// Write a function to sort an array of elements.\nfunc pancake_sort(nums: [Int]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pancake_sort(nums: [15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79])\nassert(pancake_sort(nums: [98, 12, 54, 36, 85]) == [12, 36, 54, 85, 98])\nassert(pancake_sort(nums: [41, 42, 32, 12, 23]) == [12, 23, 32, 41, 42])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums.max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums = flip(nums: nums, k: maxIndex+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    guard nums.count > 1 else { return nums }\n    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        if max != nums[i] {\n            let index = nums.firstIndex(of: max)!\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index + 1)\n                nums = nums[0..<max_index+1].reversed() + nums[max_index+1..<nums.count]\n            }\n            result.append(i + 1)\n            nums = nums[0..<i+1].reversed() + nums[i+1..<nums.count]\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            result.append(max_index+1)\n            nums = flip(nums: nums, k: max_index+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 0, by: -1) {\n        let maxIndex = nums.index(of: nums[0..<i].max()!)!\n        if maxIndex != i - 1 {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0..<maxIndex + 1].reverse()\n            }\n            result.append(i)\n            nums[0..<i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != index {\n            if maxIndex != 0 {\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            nums = flip(nums: nums, k: index + 1)\n        }\n        index -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0..<nums.count - sorted {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max == nums.count - sorted - 1 {\n            sorted += 1\n            continue\n        }\n        if max != 0 {\n            nums = flip(nums: nums, k: max + 1)\n        }\n        nums = flip(nums: nums, k: nums.count - sorted)\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].max_index()!\n        if max_index != i {\n            result.append(max_index+1)\n            nums.reverse(0..<max_index+1)\n            result.append(i+1)\n            nums.reverse(0..<i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.1 < $1.1 })!.offset\n        if max_index != i {\n            nums[0..<max_index+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var max = nums.count\n    while max > 0 {\n        var index = 0\n        for i in 1..<max {\n            if nums[i] > nums[index] {\n                index = i\n            }\n        }\n        nums.flip(index: index)\n        nums.flip(index: max - 1)\n        max -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max_index = max_index_of_array(nums: nums, start_index: 0, end_index: i)\n        if max_index != i {\n            flip(nums: &nums, k: max_index + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            result.append(i + 1)\n            nums[0..<i + 1] = nums[0..<i + 1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        if let maxIndex = nums[0...i].maxIndex() {\n            if maxIndex != i {\n                nums = flip(nums: nums, k: maxIndex + 1)\n                nums = flip(nums: nums, k: i + 1)\n            }\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max_index = find_max_index(nums: nums, start: 0, end: i)\n        if max_index != i {\n            flip(nums: &nums, k: max_index)\n            flip(nums: &nums, k: i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        nums.flip(maxIndex)\n        nums.flip(i)\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = flip(nums: nums, k: maxIndex+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let maxIndex = nums[0..<index + 1].index(of: nums[0..<index + 1].max()!)!\n        if maxIndex != index {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        index -= 1\n    }\n    return nums",
    "    var array = nums\n    var i = array.count - 1\n    while i > 0 {\n        let max = array.max()!\n        let maxIndex = array.firstIndex(of: max)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                array = flip(array: array, k: maxIndex)\n            }\n            array = flip(array: array, k: i)\n        }\n        i -= 1\n    }\n    return array",
    "    var nums = nums\n    var currentIndex = nums.count - 1\n    while currentIndex > 0 {\n        let maxIndex = findMaxIndex(nums: nums, start: 0, end: currentIndex)\n        if maxIndex != currentIndex {\n            flip(nums: &nums, k: maxIndex + 1)\n            flip(nums: &nums, k: currentIndex + 1)\n        }\n        currentIndex -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        var max = 0\n        for j in 0...i {\n            if nums[j] > nums[max] {\n                max = j\n            }\n        }\n        flip(&nums, max)\n        flip(&nums, i)\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let maxIndex = nums.maxIndex(index)\n        if maxIndex != index {\n            flip(&nums, maxIndex)\n            flip(&nums, index)\n        }\n        index -= 1\n    }\n    return nums",
    "    var nums = nums\n    var k = nums.count\n    while k > 1 {\n        var max = 0\n        for i in 0..<k {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max != k - 1 {\n            flip(&nums, max)\n            flip(&nums, k - 1)\n        }\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if max_index != i {\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: max_index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            }\n            result.append(i + 1)\n            nums[0..<i + 1] = nums[0..<i + 1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        var maxIndex = 0\n        for j in 0...i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            flip(&nums, maxIndex)\n            flip(&nums, i)\n            result.append(maxIndex + 1)\n            result.append(i + 1)\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0..<nums.count - sorted {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        flip(&nums, max)\n        flip(&nums, nums.count - sorted - 1)\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = (0..<i).reduce(0) { nums[$0] > nums[$1] ? $0 : $1 }\n        if maxIndex != i {\n            nums.reverse(from: 0, to: maxIndex)\n            nums.reverse(from: 0, to: i)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var current_size = nums.count\n    while current_size > 1 {\n        // Find the index of the maximum element\n        var mi = find_max(nums: nums, n: current_size)\n        \n        // Move the maximum element to end of current array if it's not already at the end\n        if mi != current_size - 1 {\n            // To move at the end, first move maximum number to beginning\n            flip(nums: &nums, i: mi)\n            \n            // Now move the maximum number to end by reversing current array\n            flip(nums: &nums, i: current_size - 1)\n        }\n        \n        // Reduce current size by one so that\n        // maximum number is moved to the end\n        current_size -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0...nums.count - sorted - 1 {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        flip(&nums, max)\n        flip(&nums, nums.count - sorted - 1)\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 1, by: -1) {\n        let max_index = nums[0..<i].maxIndex()!\n        if max_index == i - 1 {\n            continue\n        }\n        if max_index != 0 {\n            result.append(max_index + 1)\n            nums[0..<max_index + 1].reverse()\n        }\n        result.append(i)\n        nums[0..<i].reverse()\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = flip(nums: nums, k: maxIndex+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        if index != i {\n            if index != 0 {\n                nums = flip(nums: nums, k: index + 1)\n                result.append(index + 1)\n            }\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1].reverse()\n            result.append(i + 1)\n            nums[0..<i+1].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = (0..<i).max { nums[$0] < nums[$1] }!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var sorted = false\n    while !sorted {\n        sorted = true\n        for i in 0..<nums.count - 1 {\n            if nums[i] > nums[i + 1] {\n                nums = flip(nums: nums, k: i + 1)\n                sorted = false\n            }\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums = flip(nums: nums, k: maxIndex+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let index = nums.index(of: i)!\n        if index == i {\n            continue\n        }\n        if index != 0 {\n            result.append(index + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums: nums, k: maxIndex)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        var maxIndex = 0\n        for j in 1...i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })!.offset\n        nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n        nums[0..<i+1] = nums[0..<i+1].reversed()\n    }\n    return nums",
    "    var nums = nums\n    var sorted = [Int]()\n    while nums.count > 0 {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        nums = flip(nums: nums, k: maxIndex + 1)\n        nums = flip(nums: nums, k: nums.count)\n        sorted.append(max)\n    }\n    return sorted",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0...i].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0...maxIndex].reverse()\n            result.append(i + 1)\n            nums[0...i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        var max_index = 0\n        for j in 1..<i + 1 {\n            if nums[j] > nums[max_index] {\n                max_index = j\n            }\n        }\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 1, by: -1) {\n        let maxIndex = nums[0..<i].maxIndex()!\n        if maxIndex != i - 1 {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1].reverse()\n            result.append(i)\n            nums[0..<i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var maxIndex = i\n        for j in 0..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        if index == i {\n            continue\n        }\n        if index != 0 {\n            nums = flip(nums: nums, k: index + 1)\n            result.append(index + 1)\n        }\n        nums = flip(nums: nums, k: i + 1)\n        result.append(i + 1)\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].maxIndex()!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 1, by: -1) {\n        let maxIndex = nums[0..<i].index(of: nums[0..<i].max()!)!\n        if maxIndex != i - 1 {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            result.append(i)\n            nums[0..<i] = nums[0..<i].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                nums = flip(nums: nums, k: maxIndex)\n                result.append(maxIndex + 1)\n            }\n            nums = flip(nums: nums, k: i)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        if index == i {\n            continue\n        }\n        if index != 0 {\n            result.append(index + 1)\n            nums = Array(nums[0..<index].reversed()) + Array(nums[index...])\n        }\n        result.append(i + 1)\n        nums = Array(nums[0..<i].reversed()) + Array(nums[i...])\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var max_index = i\n        for j in 0..<i {\n            if nums[j] > nums[max_index] {\n                max_index = j\n            }\n        }\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums.max()!\n        if let index = nums.index(of: max) {\n            flip(&nums, index)\n            flip(&nums, i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums = flip(nums: nums, k: max_index+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var k = nums.count - 1\n    while k > 0 {\n        var max = 0\n        for i in 0...k {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max == k {\n            k -= 1\n            continue\n        }\n        if max > 0 {\n            nums = flip(nums: nums, k: max)\n        }\n        nums = flip(nums: nums, k: k)\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            nums[0..<i + 1] = nums[0..<i + 1].reversed()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, to: 0, by: -1) {\n        if nums[i] == i + 1 {\n            continue\n        }\n        let index = nums.firstIndex(of: i + 1)!\n        if index != 0 {\n            result.append(index + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = flip(nums: nums, k: maxIndex+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    var sorted = false\n    var index = nums.count - 1\n    while !sorted {\n        sorted = true\n        for i in 0..<index {\n            if nums[i] > nums[i + 1] {\n                nums.swapAt(i, i + 1)\n                sorted = false\n            }\n        }\n        index -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        var maxIndex = 0\n        for j in 0..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].maxIndex()!\n        if max_index == i {\n            continue\n        }\n        if max_index != 0 {\n            nums.reverse(0..<max_index+1)\n        }\n        nums.reverse(0..<i+1)\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let index = nums.index(of: max)!\n        if index != i {\n            if index != 0 {\n                result.append(index + 1)\n                nums = nums[index..<nums.count].reversed() + nums[0..<index].reversed()\n            }\n            result.append(i + 1)\n            nums = nums[0..<i + 1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var sorted = false\n    var i = nums.count - 1\n    while !sorted {\n        var max = 0\n        for j in 0...i {\n            if nums[j] > nums[max] {\n                max = j\n            }\n        }\n        if max != i {\n            flip(&nums, max)\n            flip(&nums, i)\n        }\n        i -= 1\n        if i == 0 {\n            sorted = true\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0...i].index(of: nums[0...i].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums[0..<i + 1].max()!\n        let maxIndex = nums[0..<i + 1].firstIndex(of: max)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var count = nums.count\n    while count > 1 {\n        let maxIndex = nums[0..<count].maxIndex()!\n        if maxIndex != count - 1 {\n            flip(&nums, maxIndex + 1)\n            flip(&nums, count)\n        }\n        count -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_idx = nums[0..<i+1].enumerated().max(by: { $0.1 < $1.1 })!.offset\n        if max_idx != i {\n            if max_idx != 0 {\n                result.append(max_idx + 1)\n                nums[0..<max_idx+1].reverse()\n            }\n            result.append(i + 1)\n            nums[0..<i+1].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n        }\n        nums = flip(nums: nums, k: i + 1)\n        result.append(i + 1)\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums.maxIndex(i)\n        if maxIndex != i {\n            if maxIndex != 0 {\n                nums = flip(nums, maxIndex)\n            }\n            nums = flip(nums, i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            result.append(i + 1)\n            nums[0..<i + 1] = nums[0..<i + 1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        var maxIndex = 0\n        for j in 1..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex)\n            flip(nums: &nums, k: i)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    \n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums[0..<i + 1].maxIndex()!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1].reverse()\n            result.append(i + 1)\n            nums[0..<i + 1].reverse()\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    var end = nums.count - 1\n    while end > 0 {\n        var maxIndex = 0\n        for i in 0...end {\n            if nums[i] > nums[maxIndex] {\n                maxIndex = i\n            }\n        }\n        if maxIndex != end {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: end + 1)\n        }\n        end -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result: [Int] = []\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums.index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var current_size = nums.count\n    while current_size > 1 {\n        let max_index = find_max(nums: nums, n: current_size)\n        if max_index != current_size - 1 {\n            flip(nums: &nums, i: max_index)\n            flip(nums: &nums, i: current_size - 1)\n        }\n        current_size -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            result.append(max_index + 1)\n            nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = maxIndexIn(nums: nums, from: 0, to: i)\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            reverse(nums: &nums, from: 0, to: maxIndex)\n            result.append(i + 1)\n            reverse(nums: &nums, from: 0, to: i)\n        }\n    }\n    return result",
    "    var nums = nums\n    var k = nums.count - 1\n    while k > 0 {\n        var max = 0\n        for i in 0...k {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max != k {\n            nums = flip(nums: nums, k: max)\n            nums = flip(nums: nums, k: k)\n        }\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in 0..<nums.count {\n        let max = nums.max()!\n        let index = nums.index(of: max)!\n        if index != 0 {\n            result.append(index + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        result.append(nums.count - i)\n        nums = flip(nums: nums, k: nums.count - i)\n    }\n    return result",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0...nums.count - sorted - 1 {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max != nums.count - sorted - 1 {\n            nums = flip(nums: nums, k: max + 1)\n            nums = flip(nums: nums, k: nums.count - sorted)\n        }\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = maxIndexIn(nums: nums, i: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: max_index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums.indices.max(by: { nums[$0] < nums[$1] })!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var n = nums.count\n    while n > 1 {\n        var maxIndex = 0\n        for i in 1..<n {\n            if nums[i] > nums[maxIndex] {\n                maxIndex = i\n            }\n        }\n        flip(&nums, maxIndex)\n        flip(&nums, n - 1)\n        n -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        var maxIndex = 0\n        for j in 1...i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        nums.reverse(from: 0, to: index)\n        nums.reverse(from: 0, to: i)\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = find_max(nums: nums, start: 0, end: i)\n        if max_index != i {\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: max_index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = maxIndexOf(nums: nums, i: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex)\n            flip(nums: &nums, k: i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var k = nums.count\n    while k > 1 {\n        var max = 0\n        for i in 1..<k {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max != k - 1 {\n            flip(nums: &nums, k: max + 1)\n            flip(nums: &nums, k: k)\n        }\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if max_index != i {\n            nums[0..<max_index+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = findMaxIndex(nums: nums, start: 0, end: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex + 1)\n            flip(nums: &nums, k: i + 1)\n            result.append(maxIndex + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = nums[0..<maxIndex+1].reversed() + nums[maxIndex+1..<nums.count]\n            result.append(i + 1)\n            nums = nums[0..<i+1].reversed() + nums[i+1..<nums.count]\n        }\n    }\n    return result",
    "    var nums = nums\n    var result: [Int] = []\n    var max_index = nums.count - 1\n    \n    while max_index > 0 {\n        let max_value = nums[max_index]\n        var max_value_index = 0\n        \n        for i in 0...max_index {\n            if nums[i] == max_value {\n                max_value_index = i\n                break\n            }\n        }\n        \n        if max_value_index != max_index {\n            if max_value_index != 0 {\n                result.append(max_value_index + 1)\n                nums = flip(nums: nums, k: max_value_index + 1)\n            }\n            \n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: max_index + 1)\n        }\n        \n        max_index -= 1\n    }\n    \n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 1, by: -1) {\n        let max = nums[0..<i].max()!\n        let maxIndex = nums[0..<i].firstIndex(of: max)!\n        if maxIndex != i - 1 {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1].reverse()\n            result.append(i)\n            nums[0..<i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0...i].index(of: nums[0...i].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0...i].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums[0..<i+1].max()!\n        let maxIndex = nums[0..<i+1].firstIndex(of: max)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max = nums[0..<i+1].max()!\n        let maxIndex = nums[0..<i+1].firstIndex(of: max)!\n        nums = flip(nums: nums, k: maxIndex+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    var maxIndex = nums.count - 1\n    while maxIndex > 0 {\n        var maxValue = nums[0]\n        var maxValueIndex = 0\n        for i in 0...maxIndex {\n            if nums[i] > maxValue {\n                maxValue = nums[i]\n                maxValueIndex = i\n            }\n        }\n        if maxValueIndex != maxIndex {\n            if maxValueIndex != 0 {\n                result.append(maxValueIndex + 1)\n                nums = flip(nums: nums, k: maxValueIndex)\n            }\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex)\n        }\n        maxIndex -= 1\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        let max_index = nums[0..<i + 1].enumerated().max(by: { $0.element < $1.element })!.offset\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index + 1)\n                nums[0..<max_index + 1].reverse()\n            }\n            result.append(i + 1)\n            nums[0..<i + 1].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = (0..<i).max(by: { nums[$0] < nums[$1] })!\n        flip(&nums, maxIndex)\n        flip(&nums, i)\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        if index != i {\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums.reverse(in: 0..<maxIndex+1)\n            result.append(i+1)\n            nums.reverse(in: 0..<i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0...(nums.count - sorted - 1) {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max != nums.count - sorted - 1 {\n            nums = flip(nums: nums, k: max + 1)\n            nums = flip(nums: nums, k: nums.count - sorted)\n        }\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: max_index + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0...maxIndex].reverse()\n            }\n            result.append(i+1)\n            nums[0...i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0..<maxIndex+1].reverse()\n            }\n            result.append(i + 1)\n            nums[0..<i+1].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums[0..<i+1].max()!\n        let maxIndex = nums[0..<i+1].index(of: max)!\n        if maxIndex == i {\n            continue\n        }\n        if maxIndex != 0 {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n        }\n        result.append(i+1)\n        nums[0..<i+1] = nums[0..<i+1].reversed()\n    }\n    return result",
    "    var nums = nums\n    var sorted = false\n    var i = nums.count - 1\n    while !sorted {\n        sorted = true\n        for j in 0..<i {\n            if nums[j] > nums[j+1] {\n                nums.swapAt(j, j+1)\n                sorted = false\n            }\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0...i].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0...maxIndex] = nums[0...maxIndex].reversed()\n            }\n            result.append(i + 1)\n            nums[0...i] = nums[0...i].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = findMaxIndex(nums: nums, start: 0, end: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex)\n            flip(nums: &nums, k: i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = findMaxIndex(nums: nums, end: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex)\n            flip(nums: &nums, k: i)\n            result.append(maxIndex + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0...i].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if maxIndex == i {\n            continue\n        }\n        if maxIndex != 0 {\n            result.append(maxIndex + 1)\n            nums[0...maxIndex] = nums[0...maxIndex].reversed()\n        }\n        result.append(i + 1)\n        nums[0...i] = nums[0...i].reversed()\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums[0...i].max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                nums[0...maxIndex].reverse()\n            }\n            nums[0...i].reverse()\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0...i].enumerated().max(by: { $0.element < $1.element })!.offset\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = nums[0..<maxIndex+1].reversed() + nums[maxIndex+1..<nums.count]\n            }\n            result.append(i+1)\n            nums = nums[0..<i+1].reversed() + nums[i+1..<nums.count]\n        }\n    }\n    return result",
    "    var nums = nums\n    var end = nums.count - 1\n    while end > 0 {\n        var max = 0\n        for i in 0...end {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        flip(&nums, max)\n        flip(&nums, end)\n        end -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    var max = nums.count\n    while max > 1 {\n        var index = 0\n        for i in 1..<max {\n            if nums[i] > nums[index] {\n                index = i\n            }\n        }\n        if index != max - 1 {\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(max)\n            nums = flip(nums: nums, k: max)\n        }\n        max -= 1\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index+1)\n            result.append(max_index+1)\n            nums = flip(nums: nums, k: i+1)\n            result.append(i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].firstIndex(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums[0..<max_index+1].reverse()\n            }\n            result.append(i+1)\n            nums[0..<i+1].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = findMaxIndex(nums: nums, i: i)\n        if maxIndex != i {\n            flip(nums: &nums, k: maxIndex + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums.indices.max(by: { nums[$0] < nums[$1] })!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums.reverse(from: 0, to: maxIndex)\n            result.append(i + 1)\n            nums.reverse(from: 0, to: i)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = maxIndexOf(nums: nums, endIndex: i)\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    var k = nums.count\n    while k > 0 {\n        var max = 0\n        for i in 0..<k {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        nums = flip(nums: nums, k: max + 1)\n        nums = flip(nums: nums, k: k)\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var maxIndex = i\n        for j in 0..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })!.offset\n        if maxIndex != i {\n            nums = flip(nums, maxIndex)\n            nums = flip(nums, i)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var current_size = nums.count\n    \n    // Repeat until array is sorted\n    while current_size > 1 {\n        // Find index of the maximum element in\n        // unsorted array\n        var mi = find_max(nums: nums, n: current_size)\n        \n        // Move the maximum element to end of current array\n        // if it's not already at the end\n        if mi != current_size - 1 {\n            // To move at the end, first move maximum number\n            // to beginning\n            flip(nums: &nums, i: mi)\n            \n            // Now move the maximum number to end by\n            // reversing current array\n            flip(nums: &nums, i: current_size - 1)\n        }\n        \n        // Reduce the current size by one so that\n        // next maximum element will be moved to the end\n        current_size -= 1\n    }\n    \n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    \n    while i > 0 {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        \n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums, maxIndex)\n            }\n            \n            result.append(i + 1)\n            nums = flip(nums, i)\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums[0..<i+1].max()!\n        let maxIndex = nums[0..<i+1].index(of: max)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums = flip(nums: nums, k: maxIndex+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    var nums = nums\n    var current_size = nums.count\n    \n    // Repeat until all elements are sorted\n    while current_size > 1 {\n        // Find the maximum element in unsorted array\n        var mi = find_max(nums: nums, n: current_size)\n        \n        // Move the maximum element to end of current array if it's not already at the end\n        if mi != current_size - 1 {\n            // To move at the end, first move maximum number to beginning\n            flip(nums: &nums, i: mi)\n            \n            // Now move the maximum number to end by reversing current array\n            flip(nums: &nums, i: current_size - 1)\n        }\n        \n        // Reduce the current size by one so that the previous maximum element\n        // is moved to the right side\n        current_size -= 1\n    }\n    \n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in 0..<nums.count {\n        let maxIndex = nums.index(of: nums[0..<nums.count - i].max()!)!\n        if maxIndex != nums.count - i - 1 {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1].reverse()\n            result.append(nums.count - i)\n            nums[0..<nums.count - i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in 0..<nums.count {\n        let max = nums.max()!\n        let index = nums.index(of: max)!\n        if index != nums.count - i - 1 {\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(nums.count - i)\n            nums = flip(nums: nums, k: nums.count - i)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = max_index_of(nums: nums, end: i)\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var curr_size = nums.count\n    while curr_size > 1 {\n        let max_index = find_max(nums: nums, n: curr_size)\n        if max_index != curr_size - 1 {\n            flip(nums: &nums, k: max_index)\n            flip(nums: &nums, k: curr_size - 1)\n        }\n        curr_size -= 1\n    }\n    return nums",
    "    var nums = nums\n    var sorted = false\n    var index = nums.count - 1\n    while !sorted {\n        var max = 0\n        for i in 0...index {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max == index {\n            index -= 1\n        } else {\n            nums = flip(nums: nums, k: max + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        if index == 0 {\n            sorted = true\n        }\n    }\n    return nums",
    "    var nums = nums\n    var current = nums.count - 1\n    while current > 0 {\n        if let maxIndex = nums[0..<current+1].maxIndex() {\n            if maxIndex != current {\n                nums = flip(nums: nums, k: maxIndex + 1)\n                nums = flip(nums: nums, k: current + 1)\n            }\n        }\n        current -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        let index = nums.firstIndex(of: max)!\n        if index != i {\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums, index)\n            }\n            result.append(i + 1)\n            nums = flip(nums, i)\n        }\n    }\n    return result",
    "    var nums = nums\n    var max = nums.count\n    while max > 0 {\n        var index = 0\n        for i in 0..<max {\n            if nums[i] > nums[index] {\n                index = i\n            }\n        }\n        nums = flip(nums: nums, k: index + 1)\n        nums = flip(nums: nums, k: max)\n        max -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums.max()!\n        let index = nums.index(of: max)!\n        if index != i {\n            nums = flip(nums: nums, k: index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var k = nums.count\n    while k > 0 {\n        let max = nums.max()!\n        let index = nums.index(of: max)!\n        nums = flip(nums: nums, k: index + 1)\n        nums = flip(nums: nums, k: k)\n        k -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0...i].enumerated().max(by: { $0.element < $1.element })!.offset\n        if max_index != i {\n            nums[0...max_index].reverse()\n            nums[0...i].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let maxIndex = nums[0..<index+1].index(of: nums[0..<index+1].max()!)!\n        if maxIndex != index {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        index -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                nums = flip(nums, maxIndex)\n            }\n            nums = flip(nums, i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = maxIndexIn(nums: nums, from: 0, to: i)\n        if maxIndex != i {\n            flip(nums: &nums, from: maxIndex)\n            flip(nums: &nums, from: i)\n            result.append(maxIndex + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var maxIndex = 0\n        for j in 0..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            flip(&nums, maxIndex)\n            flip(&nums, i)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0...i].enumerated().max(by: { $0.1 < $1.1 })!.offset\n        result.append(max_index + 1)\n        nums[0...max_index].reverse()\n        result.append(i + 1)\n        nums[0...i].reverse()\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0...i].enumerated().max(by: { $0.element < $1.element })?.offset ?? 0\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let maxIndex = maxIndexOf(nums: nums, index: index)\n        if maxIndex == index {\n            index -= 1\n            continue\n        }\n        flip(nums: &nums, index: maxIndex)\n        flip(nums: &nums, index: index)\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var maxIndex = i\n        for j in 0..<i {\n            if nums[j] > nums[maxIndex] {\n                maxIndex = j\n            }\n        }\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums[0..<maxIndex+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max_index = max_index_of(nums: nums, i: i)\n        if max_index != i {\n            flip(nums: &nums, i: max_index)\n            flip(nums: &nums, i: i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        var max_index = 0\n        for j in 0...i {\n            if nums[j] > nums[max_index] {\n                max_index = j\n            }\n        }\n        flip(nums: &nums, k: max_index + 1)\n        flip(nums: &nums, k: i + 1)\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max = nums[0..<i+1].max()!\n        let maxIndex = nums[0..<i+1].firstIndex(of: max)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums"
  ]
}
{
  "name": "mbpp_141_pancake_sort",
  "language": "swift",
  "prompt": "\n/// Write a function to sort an array of elements.\nfunc pancake_sort(nums: [Int]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pancake_sort(nums: [15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79])\nassert(pancake_sort(nums: [98, 12, 54, 36, 85]) == [12, 36, 54, 85, 98])\nassert(pancake_sort(nums: [41, 42, 32, 12, 23]) == [12, 23, 32, 41, 42])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums.max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    \n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex+1)\n            nums = flip(nums: nums, k: maxIndex+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    guard nums.count > 1 else { return nums }\n    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max = nums.max()!\n        if max != nums[i] {\n            let index = nums.firstIndex(of: max)!\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(i + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index + 1)\n                nums = nums[0..<max_index+1].reversed() + nums[max_index+1..<nums.count]\n            }\n            result.append(i + 1)\n            nums = nums[0..<i+1].reversed() + nums[i+1..<nums.count]\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            result.append(max_index+1)\n            nums = flip(nums: nums, k: max_index+1)\n        }\n        result.append(i+1)\n        nums = flip(nums: nums, k: i+1)\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count, to: 0, by: -1) {\n        let maxIndex = nums.index(of: nums[0..<i].max()!)!\n        if maxIndex != i - 1 {\n            if maxIndex != 0 {\n                result.append(maxIndex + 1)\n                nums[0..<maxIndex + 1].reverse()\n            }\n            result.append(i)\n            nums[0..<i].reverse()\n        }\n    }\n    return result",
    "    var nums = nums\n    var index = nums.count - 1\n    while index > 0 {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != index {\n            if maxIndex != 0 {\n                nums = flip(nums: nums, k: maxIndex + 1)\n            }\n            nums = flip(nums: nums, k: index + 1)\n        }\n        index -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            result.append(max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n            result.append(i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var sorted = 0\n    while sorted < nums.count {\n        var max = 0\n        for i in 0..<nums.count - sorted {\n            if nums[i] > nums[max] {\n                max = i\n            }\n        }\n        if max == nums.count - sorted - 1 {\n            sorted += 1\n            continue\n        }\n        if max != 0 {\n            nums = flip(nums: nums, k: max + 1)\n        }\n        nums = flip(nums: nums, k: nums.count - sorted)\n        sorted += 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].max_index()!\n        if max_index != i {\n            result.append(max_index+1)\n            nums.reverse(0..<max_index+1)\n            result.append(i+1)\n            nums.reverse(0..<i+1)\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.1 < $1.1 })!.offset\n        if max_index != i {\n            nums[0..<max_index+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var max = nums.count\n    while max > 0 {\n        var index = 0\n        for i in 1..<max {\n            if nums[i] > nums[index] {\n                index = i\n            }\n        }\n        nums.flip(index: index)\n        nums.flip(index: max - 1)\n        max -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max_index = max_index_of_array(nums: nums, start_index: 0, end_index: i)\n        if max_index != i {\n            flip(nums: &nums, k: max_index + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in stride(from: nums.count - 1, through: 0, by: -1) {\n        let maxIndex = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex + 1] = nums[0..<maxIndex + 1].reversed()\n            result.append(i + 1)\n            nums[0..<i + 1] = nums[0..<i + 1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        if let maxIndex = nums[0...i].maxIndex() {\n            if maxIndex != i {\n                nums = flip(nums: nums, k: maxIndex + 1)\n                nums = flip(nums: nums, k: i + 1)\n            }\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let max_index = find_max_index(nums: nums, start: 0, end: i)\n        if max_index != i {\n            flip(nums: &nums, k: max_index)\n            flip(nums: &nums, k: i)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].maxIndex()!\n        nums.flip(maxIndex)\n        nums.flip(i)\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = flip(nums: nums, k: maxIndex+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    return result"
  ]
}